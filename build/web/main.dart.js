// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const _internal = dart_sdk._internal;
  const typed_data = dart_sdk.typed_data;
  const math = dart_sdk.math;
  const convert = dart_sdk.convert;
  const _native_typed_data = dart_sdk._native_typed_data;
  const collection = dart_sdk.collection;
  const html = dart_sdk.html;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const framework = flutter_sdk.src__widgets__framework;
  const binding = flutter_sdk.src__widgets__binding;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page = flutter_sdk.src__material__page;
  const scaffold = flutter_sdk.src__material__scaffold;
  const colors = flutter_sdk.src__material__colors;
  const basic = flutter_sdk.src__widgets__basic;
  const flex = flutter_sdk.src__rendering__flex;
  const text = flutter_sdk.src__widgets__text;
  const text_style = flutter_sdk.src__painting__text_style;
  const image = flutter_sdk.src__widgets__image;
  const box_fit = flutter_sdk.src__painting__box_fit;
  const progress_indicator = flutter_sdk.src__material__progress_indicator;
  const animations = flutter_sdk.src__animation__animations;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const alignment = flutter_sdk.src__painting__alignment;
  const container = flutter_sdk.src__widgets__container;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const box_shadow = flutter_sdk.src__painting__box_shadow;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const media_query = flutter_sdk.src__widgets__media_query;
  const text_field = flutter_sdk.src__material__text_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  const checkbox = flutter_sdk.src__material__checkbox;
  const rounded_rectangle_border = flutter_sdk.src__painting__rounded_rectangle_border;
  const ink_well = flutter_sdk.src__material__ink_well;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const text_button = flutter_sdk.src__material__text_button;
  const colors$ = flutter_sdk.src__painting__colors;
  const app_bar = flutter_sdk.src__material__app_bar;
  const icon_button = flutter_sdk.src__material__icon_button;
  const icon$ = flutter_sdk.src__widgets__icon;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const icons = flutter_sdk.src__material__icons;
  const animated_switcher = flutter_sdk.src__widgets__animated_switcher;
  const bottom_navigation_bar = flutter_sdk.src__material__bottom_navigation_bar;
  const bottom_navigation_bar_item = flutter_sdk.src__widgets__bottom_navigation_bar_item;
  const page_view = flutter_sdk.src__widgets__page_view;
  const curves = flutter_sdk.src__animation__curves;
  const single_child_scroll_view = flutter_sdk.src__widgets__single_child_scroll_view;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const scroll_physics = flutter_sdk.src__widgets__scroll_physics;
  const text_painter = flutter_sdk.src__painting__text_painter;
  const dialog = flutter_sdk.src__material__dialog;
  const snack_bar = flutter_sdk.src__material__snack_bar;
  const box_border = flutter_sdk.src__painting__box_border;
  const snack_bar_theme = flutter_sdk.src__material__snack_bar_theme;
  const card = flutter_sdk.src__material__card;
  const list_tile = flutter_sdk.src__material__list_tile;
  const async$ = flutter_sdk.src__widgets__async;
  const safe_area = flutter_sdk.src__widgets__safe_area;
  const gesture_detector = flutter_sdk.src__widgets__gesture_detector;
  const bottom_sheet = flutter_sdk.src__material__bottom_sheet;
  const borders = flutter_sdk.src__painting__borders;
  const selectable_text = flutter_sdk.src__material__selectable_text;
  const clipboard = flutter_sdk.src__services__clipboard;
  const dismissible = flutter_sdk.src__widgets__dismissible;
  const spacer = flutter_sdk.src__widgets__spacer;
  const custom_paint = flutter_sdk.src__rendering__custom_paint;
  const date_format = flutter_sdk.src__intl__date_format;
  const decoration_image = flutter_sdk.src__painting__decoration_image;
  const _network_image_web = flutter_sdk.src__painting___network_image_web;
  const divider = flutter_sdk.src__material__divider;
  const wrap = flutter_sdk.src__rendering__wrap;
  const chip = flutter_sdk.src__material__chip;
  const string_scanner = flutter_sdk.src__string_scanner;
  const canonicalized_map = flutter_sdk.src__canonicalized_map;
  const span_exception = flutter_sdk.src__span_exception;
  const queue_list = flutter_sdk.src__queue_list;
  const serialization = flutter_sdk.src__foundation__serialization;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var splash = Object.create(dart.library);
  var login = Object.create(dart.library);
  var userModel = Object.create(dart.library);
  var user_repository = Object.create(dart.library);
  var underConstructionScreen = Object.create(dart.library);
  var bottom_navigator = Object.create(dart.library);
  var http = Object.create(dart.library);
  var home = Object.create(dart.library);
  var bookLoan = Object.create(dart.library);
  var $32bookListScreen = Object.create(dart.library);
  var pendency = Object.create(dart.library);
  var without_pendency = Object.create(dart.library);
  var book_collection = Object.create(dart.library);
  var client$ = Object.create(dart.library);
  var exception = Object.create(dart.library);
  var request$ = Object.create(dart.library);
  var response$ = Object.create(dart.library);
  var streamed_request = Object.create(dart.library);
  var base_client = Object.create(dart.library);
  var base_request = Object.create(dart.library);
  var base_response = Object.create(dart.library);
  var byte_stream = Object.create(dart.library);
  var multipart_file = Object.create(dart.library);
  var multipart_request = Object.create(dart.library);
  var streamed_response = Object.create(dart.library);
  var user = Object.create(dart.library);
  var bookmodel = Object.create(dart.library);
  var book_repository = Object.create(dart.library);
  var loanModel = Object.create(dart.library);
  var loan_repository = Object.create(dart.library);
  var book_profile = Object.create(dart.library);
  var browser_client = Object.create(dart.library);
  var http_parser = Object.create(dart.library);
  var utils = Object.create(dart.library);
  var multipart_file_stub = Object.create(dart.library);
  var boundary_characters = Object.create(dart.library);
  var livromodelapi = Object.create(dart.library);
  var authentication_challenge = Object.create(dart.library);
  var case_insensitive_map = Object.create(dart.library);
  var chunked_coding = Object.create(dart.library);
  var http_date = Object.create(dart.library);
  var media_type = Object.create(dart.library);
  var scan = Object.create(dart.library);
  var utils$ = Object.create(dart.library);
  var decoder = Object.create(dart.library);
  var encoder = Object.create(dart.library);
  var typed_data$ = Object.create(dart.library);
  var charcodes = Object.create(dart.library);
  var typed_queue = Object.create(dart.library);
  var typed_buffers = Object.create(dart.library);
  var typed_buffer = Object.create(dart.library);
  var $toString = dartx.toString;
  var $isNotEmpty = dartx.isNotEmpty;
  var $_get = dartx._get;
  var $length = dartx.length;
  var $split = dartx.split;
  var $isEmpty = dartx.isEmpty;
  var $join = dartx.join;
  var $toLowerCase = dartx.toLowerCase;
  var $where = dartx.where;
  var $toList = dartx.toList;
  var $contains = dartx.contains;
  var $containsKey = dartx.containsKey;
  var $remove = dartx.remove;
  var $_set = dartx._set;
  var $hashCode = dartx.hashCode;
  var $addAll = dartx.addAll;
  var $cast = dartx.cast;
  var $forEach = dartx.forEach;
  var $entries = dartx.entries;
  var $replaceAll = dartx.replaceAll;
  var $take = dartx.take;
  var $toDouble = dartx.toDouble;
  var $map = dartx.map;
  var $round = dartx.round;
  var $toStringAsFixed = dartx.toStringAsFixed;
  var $substring = dartx.substring;
  var $responseType = dartx.responseType;
  var $onLoad = dartx.onLoad;
  var $response = dartx.response;
  var $asUint8List = dartx.asUint8List;
  var $responseHeaders = dartx.responseHeaders;
  var $onError = dartx.onError;
  var $add = dartx.add;
  var $buffer = dartx.buffer;
  var $indexOf = dartx.indexOf;
  var $replaceAllMapped = dartx.replaceAllMapped;
  var $_equals = dartx._equals;
  var $toRadixString = dartx.toRadixString;
  var $toUpperCase = dartx.toUpperCase;
  var $codeUnits = dartx.codeUnits;
  var $setRange = dartx.setRange;
  var $fillRange = dartx.fillRange;
  var $rightShift = dartx['>>'];
  var $sublist = dartx.sublist;
  var $elementSizeInBytes = dartx.elementSizeInBytes;
  var $offsetInBytes = dartx.offsetInBytes;
  var $insertAll = dartx.insertAll;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    FutureOfNull: () => (T.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    BuildContextToLoginScreen: () => (T.BuildContextToLoginScreen = dart.constFn(dart.fnType(login.LoginScreen, [framework.BuildContext])))(),
    AlwaysStoppedAnimationOfColor: () => (T.AlwaysStoppedAnimationOfColor = dart.constFn(animations.AlwaysStoppedAnimation$(ui.Color)))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextToBottomNavigator: () => (T.BuildContextToBottomNavigator = dart.constFn(dart.fnType(bottom_navigator.BottomNavigator, [framework.BuildContext])))(),
    JSArrayOfBoxShadow: () => (T.JSArrayOfBoxShadow = dart.constFn(_interceptors.JSArray$(box_shadow.BoxShadow)))(),
    boolN: () => (T.boolN = dart.constFn(dart.nullable(core.bool)))(),
    boolNTovoid: () => (T.boolNTovoid = dart.constFn(dart.fnType(dart.void, [T.boolN()])))(),
    BuildContextToUnderConstructionScreen: () => (T.BuildContextToUnderConstructionScreen = dart.constFn(dart.fnType(underConstructionScreen.UnderConstructionScreen, [framework.BuildContext])))(),
    IdentityMapOfString$dynamic: () => (T.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    IdentityMapOfString$String: () => (T.IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))(),
    FutureOfResponse: () => (T.FutureOfResponse = dart.constFn(async.Future$(response$.Response)))(),
    ClientToFutureOfResponse: () => (T.ClientToFutureOfResponse = dart.constFn(dart.fnType(T.FutureOfResponse(), [client$.Client])))(),
    FutureOfString: () => (T.FutureOfString = dart.constFn(async.Future$(core.String)))(),
    ClientToFutureOfString: () => (T.ClientToFutureOfString = dart.constFn(dart.fnType(T.FutureOfString(), [client$.Client])))(),
    FutureOfUint8List: () => (T.FutureOfUint8List = dart.constFn(async.Future$(typed_data.Uint8List)))(),
    ClientToFutureOfUint8List: () => (T.ClientToFutureOfUint8List = dart.constFn(dart.fnType(T.FutureOfUint8List(), [client$.Client])))(),
    TimerTovoid: () => (T.TimerTovoid = dart.constFn(dart.fnType(dart.void, [async.Timer])))(),
    BuildContextToUserScreen: () => (T.BuildContextToUserScreen = dart.constFn(dart.fnType(user.UserScreen, [framework.BuildContext])))(),
    BuildContextAndintToWidget: () => (T.BuildContextAndintToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, core.int])))(),
    JSArrayOfLoanModel: () => (T.JSArrayOfLoanModel = dart.constFn(_interceptors.JSArray$(loanModel.LoanModel)))(),
    FutureOfvoid: () => (T.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    VoidToFutureOfvoid: () => (T.VoidToFutureOfvoid = dart.constFn(dart.fnType(T.FutureOfvoid(), [])))(),
    BuildContextToDialog: () => (T.BuildContextToDialog = dart.constFn(dart.fnType(dialog.Dialog, [framework.BuildContext])))(),
    BuildContextAndintToCard: () => (T.BuildContextAndintToCard = dart.constFn(dart.fnType(card.Card, [framework.BuildContext, core.int])))(),
    ListOfBookModel: () => (T.ListOfBookModel = dart.constFn(core.List$(bookmodel.BookModel)))(),
    FutureOfListOfBookModel: () => (T.FutureOfListOfBookModel = dart.constFn(async.Future$(T.ListOfBookModel())))(),
    JSArrayOfBookModel: () => (T.JSArrayOfBookModel = dart.constFn(_interceptors.JSArray$(bookmodel.BookModel)))(),
    FutureBuilderOfListOfBookModel: () => (T.FutureBuilderOfListOfBookModel = dart.constFn(async$.FutureBuilder$(T.ListOfBookModel())))(),
    BuildContextAndintToListTile: () => (T.BuildContextAndintToListTile = dart.constFn(dart.fnType(list_tile.ListTile, [framework.BuildContext, core.int])))(),
    AsyncSnapshotOfListOfBookModel: () => (T.AsyncSnapshotOfListOfBookModel = dart.constFn(async$.AsyncSnapshot$(T.ListOfBookModel())))(),
    BuildContextAndAsyncSnapshotOfListOfBookModelToWidget: () => (T.BuildContextAndAsyncSnapshotOfListOfBookModelToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T.AsyncSnapshotOfListOfBookModel()])))(),
    MapOfString$dynamic: () => (T.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    JSArrayOfMapOfString$dynamic: () => (T.JSArrayOfMapOfString$dynamic = dart.constFn(_interceptors.JSArray$(T.MapOfString$dynamic())))(),
    BuildContextAndintToGestureDetector: () => (T.BuildContextAndintToGestureDetector = dart.constFn(dart.fnType(gesture_detector.GestureDetector, [framework.BuildContext, core.int])))(),
    BuildContextToPadding: () => (T.BuildContextToPadding = dart.constFn(dart.fnType(basic.Padding, [framework.BuildContext])))(),
    BuildContextToAlertDialog: () => (T.BuildContextToAlertDialog = dart.constFn(dart.fnType(dialog.AlertDialog, [framework.BuildContext])))(),
    ListOfint: () => (T.ListOfint = dart.constFn(core.List$(core.int)))(),
    intToint: () => (T.intToint = dart.constFn(dart.fnType(core.int, [core.int])))(),
    BookModelTobool: () => (T.BookModelTobool = dart.constFn(dart.fnType(core.bool, [bookmodel.BookModel])))(),
    BuildContextToBookProfileWidget: () => (T.BuildContextToBookProfileWidget = dart.constFn(dart.fnType(book_profile.BookProfileWidget, [framework.BuildContext])))(),
    LinkedMapOfObjectN$ObjectN: () => (T.LinkedMapOfObjectN$ObjectN = dart.constFn(_js_helper.LinkedMap$(T.ObjectN(), T.ObjectN())))(),
    VoidToClient: () => (T.VoidToClient = dart.constFn(dart.fnType(client$.Client, [])))(),
    LinkedHashMapOfString$String: () => (T.LinkedHashMapOfString$String = dart.constFn(collection.LinkedHashMap$(core.String, core.String)))(),
    StringAndStringTobool: () => (T.StringAndStringTobool = dart.constFn(dart.fnType(core.bool, [core.String, core.String])))(),
    StringToint: () => (T.StringToint = dart.constFn(dart.fnType(core.int, [core.String])))(),
    _EmptyStreamOfListOfint: () => (T._EmptyStreamOfListOfint = dart.constFn(async._EmptyStream$(T.ListOfint())))(),
    StreamControllerOfListOfint: () => (T.StreamControllerOfListOfint = dart.constFn(async.StreamController$(T.ListOfint())))(),
    StreamOfListOfint: () => (T.StreamOfListOfint = dart.constFn(async.Stream$(T.ListOfint())))(),
    CompleterOfUint8List: () => (T.CompleterOfUint8List = dart.constFn(async.Completer$(typed_data.Uint8List)))(),
    ListOfintTovoid: () => (T.ListOfintTovoid = dart.constFn(dart.fnType(dart.void, [T.ListOfint()])))(),
    JSArrayOfMultipartFile: () => (T.JSArrayOfMultipartFile = dart.constFn(_interceptors.JSArray$(multipart_file.MultipartFile)))(),
    StringAndStringTovoid: () => (T.StringAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.String, core.String])))(),
    _AsyncStarImplOfListOfint: () => (T._AsyncStarImplOfListOfint = dart.constFn(async._AsyncStarImpl$(T.ListOfint())))(),
    RouteTobool: () => (T.RouteTobool = dart.constFn(dart.fnType(core.bool, [navigator.Route])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    dynamicToBookModel: () => (T.dynamicToBookModel = dart.constFn(dart.fnType(bookmodel.BookModel, [dart.dynamic])))(),
    dynamicToLoanModel: () => (T.dynamicToLoanModel = dart.constFn(dart.fnType(loanModel.LoanModel, [dart.dynamic])))(),
    ListOfLoanModel: () => (T.ListOfLoanModel = dart.constFn(core.List$(loanModel.LoanModel)))(),
    ListOfWidget: () => (T.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    intToIcon: () => (T.intToIcon = dart.constFn(dart.fnType(icon$.Icon, [core.int])))(),
    StringToChip: () => (T.StringToChip = dart.constFn(dart.fnType(chip.Chip, [core.String])))(),
    LinkedHashSetOfHttpRequest: () => (T.LinkedHashSetOfHttpRequest = dart.constFn(collection.LinkedHashSet$(html.HttpRequest)))(),
    CompleterOfStreamedResponse: () => (T.CompleterOfStreamedResponse = dart.constFn(async.Completer$(streamed_response.StreamedResponse)))(),
    ProgressEventToNull: () => (T.ProgressEventToNull = dart.constFn(dart.fnType(core.Null, [html.ProgressEvent])))(),
    JSArrayOfListOfString: () => (T.JSArrayOfListOfString = dart.constFn(_interceptors.JSArray$(T.ListOfString())))(),
    ListOfStringToString: () => (T.ListOfStringToString = dart.constFn(dart.fnType(core.String, [T.ListOfString()])))(),
    UnmodifiableMapViewOfString$String: () => (T.UnmodifiableMapViewOfString$String = dart.constFn(collection.UnmodifiableMapView$(core.String, core.String)))(),
    CaseInsensitiveMapOfString: () => (T.CaseInsensitiveMapOfString = dart.constFn(case_insensitive_map.CaseInsensitiveMap$(core.String)))(),
    ListOfAuthenticationChallenge: () => (T.ListOfAuthenticationChallenge = dart.constFn(core.List$(authentication_challenge.AuthenticationChallenge)))(),
    VoidToAuthenticationChallenge: () => (T.VoidToAuthenticationChallenge = dart.constFn(dart.fnType(authentication_challenge.AuthenticationChallenge, [])))(),
    VoidToListOfAuthenticationChallenge: () => (T.VoidToListOfAuthenticationChallenge = dart.constFn(dart.fnType(T.ListOfAuthenticationChallenge(), [])))(),
    StringToString: () => (T.StringToString = dart.constFn(dart.fnType(core.String, [core.String])))(),
    VoidToDateTime: () => (T.VoidToDateTime = dart.constFn(dart.fnType(core.DateTime, [])))(),
    VoidToMediaType: () => (T.VoidToMediaType = dart.constFn(dart.fnType(media_type.MediaType, [])))(),
    MatchToString: () => (T.MatchToString = dart.constFn(dart.fnType(core.String, [core.Match])))(),
    SinkOfListOfint: () => (T.SinkOfListOfint = dart.constFn(core.Sink$(T.ListOfint())))(),
    intAndStringTovoid: () => (T.intAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.int, core.String])))(),
    JSArrayOfint: () => (T.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: main.MyApp.prototype,
        [Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: bottom_navigator.BottomNavigator.prototype,
        [Widget_key]: null,
        [BottomNavigator_userType]: "userSapi_1"
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: bottom_navigator.BottomNavigator.prototype,
        [Widget_key]: null,
        [BottomNavigator_userType]: "userSapi_2"
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: bottom_navigator.BottomNavigator.prototype,
        [Widget_key]: null,
        [BottomNavigator_userType]: "userApi"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 0,
        [Radius_x]: 0
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 70,
        [Radius_x]: 70
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[6] || CT.C6,
        [BorderRadius_bottomLeft]: C[6] || CT.C6,
        [BorderRadius_topRight]: C[6] || CT.C6,
        [BorderRadius_topLeft]: C[7] || CT.C7
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: -2,
        [OffsetBase__dx]: 0
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 20,
        [EdgeInsets_right]: 30,
        [EdgeInsets_top]: 60,
        [EdgeInsets_left]: 30
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 35,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[13] || CT.C13,
        [TextStyle_inherit]: true
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[11] || CT.C11,
        [Text_textSpan]: null,
        [Text_data]: "Login"
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 50,
        [SizedBox_width]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 25,
        [SizedBox_width]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 10,
        [SizedBox_width]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[20] || CT.C20,
        [Text_textSpan]: null,
        [Text_data]: "Lembrar-me"
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 40,
        [SizedBox_width]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 13,
        [EdgeInsets_right]: 70,
        [EdgeInsets_top]: 13,
        [EdgeInsets_left]: 70
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[24] || CT.C24,
        [Text_textSpan]: null,
        [Text_data]: "Login"
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: underConstructionScreen.UnderConstructionScreen.prototype,
        [Widget_key]: null
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: ui.TextDecoration.prototype,
        [TextDecoration__mask]: 1
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293128957
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290502395
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4287679225
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284790262
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282557941
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280391411
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280191205
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279858898
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279592384
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279060385
      });
    },
    get C30() {
      return C[30] = dart.constMap(core.int, ui.Color, [50, C[31] || CT.C31, 100, C[32] || CT.C32, 200, C[33] || CT.C33, 300, C[34] || CT.C34, 400, C[35] || CT.C35, 500, C[36] || CT.C36, 600, C[37] || CT.C37, 700, C[38] || CT.C38, 800, C[39] || CT.C39, 900, C[40] || CT.C40]);
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4280391411,
        [ColorSwatch__swatch]: C[30] || CT.C30
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: C[28] || CT.C28,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[29] || CT.C29,
        [TextStyle_inherit]: true
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[27] || CT.C27,
        [Text_textSpan]: null,
        [Text_data]: "Esqueceu a senha?"
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Em Desenvolvimento"
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: true,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57490
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[43] || CT.C43
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: login.LoginScreen.prototype,
        [Widget_key]: null
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 20,
        [SizedBox_width]: null
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: ui.TextAlign.prototype,
        [_Enum__name]: "center",
        [_Enum_index]: 2
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[13] || CT.C13,
        [TextStyle_inherit]: true
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: C[48] || CT.C48,
        [Text_strutStyle]: null,
        [Text_style]: C[49] || CT.C49,
        [Text_textSpan]: null,
        [Text_data]: "Esta funcionalidade está em desenvolvimento."
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294638330
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294309365
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293848814
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292927712
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292269782
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290624957
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4288585374
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285887861
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284572001
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282532418
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281348144
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280361249
      });
    },
    get C53() {
      return C[53] = dart.constMap(core.int, ui.Color, [50, C[54] || CT.C54, 100, C[55] || CT.C55, 200, C[56] || CT.C56, 300, C[57] || CT.C57, 350, C[58] || CT.C58, 400, C[59] || CT.C59, 500, C[60] || CT.C60, 600, C[61] || CT.C61, 700, C[62] || CT.C62, 800, C[63] || CT.C63, 850, C[64] || CT.C64, 900, C[65] || CT.C65]);
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4288585374,
        [ColorSwatch__swatch]: C[53] || CT.C53
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[52] || CT.C52,
        [TextStyle_inherit]: true
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: C[48] || CT.C48,
        [Text_strutStyle]: null,
        [Text_style]: C[51] || CT.C51,
        [Text_textSpan]: null,
        [Text_data]: "Em breve, estará disponível para você!"
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Voltar para o Início"
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: home.HomeScreen.prototype,
        [Widget_key]: null
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: bookLoan.BookLoanScreen.prototype,
        [Widget_key]: null
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: pendency.PendencyWidget.prototype,
        [Widget_key]: null
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: without_pendency.WithoutPendencyWidget.prototype,
        [Widget_key]: null
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58136
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[75] || CT.C75,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[76] || CT.C76
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: bottom_navigation_bar_item.BottomNavigationBarItem.prototype,
        [BottomNavigationBarItem_tooltip]: null,
        [BottomNavigationBarItem_backgroundColor]: null,
        [BottomNavigationBarItem_label]: "Home",
        [BottomNavigationBarItem_activeIcon]: C[74] || CT.C74,
        [BottomNavigationBarItem_icon]: C[74] || CT.C74
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58727
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[75] || CT.C75,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[79] || CT.C79
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: bottom_navigation_bar_item.BottomNavigationBarItem.prototype,
        [BottomNavigationBarItem_tooltip]: null,
        [BottomNavigationBarItem_backgroundColor]: null,
        [BottomNavigationBarItem_label]: "Pesquisa",
        [BottomNavigationBarItem_activeIcon]: C[78] || CT.C78,
        [BottomNavigationBarItem_icon]: C[78] || CT.C78
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57583
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[75] || CT.C75,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[82] || CT.C82
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: bottom_navigation_bar_item.BottomNavigationBarItem.prototype,
        [BottomNavigationBarItem_tooltip]: null,
        [BottomNavigationBarItem_backgroundColor]: null,
        [BottomNavigationBarItem_label]: "Empréstimos",
        [BottomNavigationBarItem_activeIcon]: C[81] || CT.C81,
        [BottomNavigationBarItem_icon]: C[81] || CT.C81
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 59083
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[75] || CT.C75,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[85] || CT.C85
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: bottom_navigation_bar_item.BottomNavigationBarItem.prototype,
        [BottomNavigationBarItem_tooltip]: null,
        [BottomNavigationBarItem_backgroundColor]: null,
        [BottomNavigationBarItem_label]: "Pendências",
        [BottomNavigationBarItem_activeIcon]: C[84] || CT.C84,
        [BottomNavigationBarItem_icon]: C[84] || CT.C84
      });
    },
    get C72() {
      return C[72] = dart.constList([C[73] || CT.C73, C[77] || CT.C77, C[80] || CT.C80, C[83] || CT.C83], bottom_navigation_bar_item.BottomNavigationBarItem);
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 5000000
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 500000
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58447
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[75] || CT.C75,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[89] || CT.C89
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58513
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[75] || CT.C75,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[91] || CT.C91
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: user.UserScreen.prototype,
        [Widget_key]: null
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 20
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: scroll_physics.NeverScrollableScrollPhysics.prototype,
        [ScrollPhysics_parent]: null
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 100,
        [SizedBox_width]: null
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 30,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 30,
        [EdgeInsets_left]: 20
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: 1.2,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 24,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[75] || CT.C75,
        [TextStyle_inherit]: true
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3019898879
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[99] || CT.C99,
        [TextStyle_inherit]: true
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 15
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 0
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 16
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 8,
        [SizedBox_width]: null
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[52] || CT.C52,
        [TextStyle_inherit]: true
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 18,
        [EdgeInsets_right]: 18,
        [EdgeInsets_top]: 18,
        [EdgeInsets_left]: 18
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 60,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 15,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 15,
        [EdgeInsets_left]: 20
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 20,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 15,
        [EdgeInsets_right]: 15,
        [EdgeInsets_top]: 15,
        [EdgeInsets_left]: 15
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 5,
        [SizedBox_width]: null
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 0
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294770175
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280444133
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 24,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[75] || CT.C75,
        [TextStyle_inherit]: true
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[116] || CT.C116,
        [Text_textSpan]: null,
        [Text_data]: "Pendências"
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 20,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 20,
        [EdgeInsets_left]: 20
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_Enum__name]: "rectangle",
        [_Enum_index]: 0
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 50,
        [Radius_x]: 50
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[121] || CT.C121,
        [BorderRadius_bottomLeft]: C[121] || CT.C121,
        [BorderRadius_topRight]: C[6] || CT.C6,
        [BorderRadius_topLeft]: C[6] || CT.C6
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: box_decoration.BoxDecoration.prototype,
        [BoxDecoration_shape]: C[119] || CT.C119,
        [BoxDecoration_backgroundBlendMode]: null,
        [BoxDecoration_gradient]: null,
        [BoxDecoration_boxShadow]: null,
        [BoxDecoration_borderRadius]: C[120] || CT.C120,
        [BoxDecoration_border]: null,
        [BoxDecoration_image]: null,
        [BoxDecoration_color]: C[114] || CT.C114
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[75] || CT.C75,
        [TextStyle_inherit]: true
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[124] || CT.C124,
        [Text_textSpan]: null,
        [Text_data]: "Atenção: Caso você tenha pendências, não será possível realizar reservas ou empréstimos de livros até que elas sejam resolvidas."
      });
    },
    get C122() {
      return C[122] = dart.constList([C[16] || CT.C16, C[123] || CT.C123], framework.Widget);
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 0
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[103] || CT.C103,
        [Text_textSpan]: null,
        [Text_data]: "Débito de livro"
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294962158
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294954450
      });
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293892762
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293227379
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293874512
      });
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294198070
      });
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293212469
      });
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292030255
      });
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291176488
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290190364
      });
    },
    get C129() {
      return C[129] = dart.constMap(core.int, ui.Color, [50, C[130] || CT.C130, 100, C[131] || CT.C131, 200, C[132] || CT.C132, 300, C[133] || CT.C133, 400, C[134] || CT.C134, 500, C[135] || CT.C135, 600, C[136] || CT.C136, 700, C[137] || CT.C137, 800, C[138] || CT.C138, 900, C[139] || CT.C139]);
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4294198070,
        [ColorSwatch__swatch]: C[129] || CT.C129
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[128] || CT.C128,
        [TextStyle_inherit]: true
      });
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 4,
        [SizedBox_width]: null
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_Enum__name]: "none",
        [_Enum_index]: 0
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[143] || CT.C143,
        [BorderSide_width]: 0,
        [BorderSide_color]: C[13] || CT.C13
      });
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 20,
        [Radius_x]: 20
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[6] || CT.C6,
        [BorderRadius_bottomLeft]: C[6] || CT.C6,
        [BorderRadius_topRight]: C[145] || CT.C145,
        [BorderRadius_topLeft]: C[145] || CT.C145
      });
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [OutlinedBorder_side]: C[142] || CT.C142,
        [RoundedRectangleBorder_borderRadius]: C[144] || CT.C144
      });
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 20,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[103] || CT.C103,
        [Text_textSpan]: null,
        [Text_data]: "Pagar"
      });
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[128] || CT.C128,
        [TextStyle_inherit]: true
      });
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "PIX"
      });
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 10
      });
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Boleto"
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: ui.Clip.prototype,
        [_Enum__name]: "hardEdge",
        [_Enum_index]: 1
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [_Enum__name]: "down",
        [_Enum_index]: 5
      });
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 2000000
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Código de pagamento copiado"
      });
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: snack_bar.SnackBar.prototype,
        [Widget_key]: null,
        [SnackBar_clipBehavior]: C[153] || CT.C153,
        [SnackBar_dismissDirection]: C[154] || CT.C154,
        [SnackBar_onVisible]: null,
        [SnackBar_animation]: null,
        [SnackBar_duration]: C[155] || CT.C155,
        [SnackBar_closeIconColor]: null,
        [SnackBar_showCloseIcon]: null,
        [SnackBar_action]: null,
        [SnackBar_behavior]: null,
        [SnackBar_shape]: null,
        [SnackBar_width]: null,
        [SnackBar_padding]: null,
        [SnackBar_margin]: null,
        [SnackBar_elevation]: null,
        [SnackBar_backgroundColor]: null,
        [SnackBar_content]: C[156] || CT.C156
      });
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Copiar código"
      });
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Fechar"
      });
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: "Inter",
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[160] || CT.C160,
        [Text_textSpan]: null,
        [Text_data]: "Pendências"
      });
    },
    get C161() {
      return C[161] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 80,
        [EdgeInsets_left]: 0
      });
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 20,
        [EdgeInsets_left]: 0
      });
    },
    get C164() {
      return C[164] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 20,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: "Inter",
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[164] || CT.C164,
        [Text_textSpan]: null,
        [Text_data]: "Usuário sem pendências"
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 30,
        [EdgeInsets_top]: 15,
        [EdgeInsets_left]: 55
      });
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: ui.TextAlign.prototype,
        [_Enum__name]: "start",
        [_Enum_index]: 4
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: "Inter",
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: C[167] || CT.C167,
        [Text_strutStyle]: null,
        [Text_style]: C[168] || CT.C168,
        [Text_textSpan]: null,
        [Text_data]: "Parece que você está sem pendências. \nDê uma olhada no acervo da biblioteca e descubra novos livros, autores ou temas que podem te surpreender. Sempre há algo novo esperando por você!"
      });
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 40,
        [EdgeInsets_left]: 0
      });
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: "Inter",
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[75] || CT.C75,
        [TextStyle_inherit]: true
      });
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[171] || CT.C171,
        [Text_textSpan]: null,
        [Text_data]: "Explorar acervo"
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Buscar Livro"
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[79] || CT.C79
      });
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3707764736
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[178] || CT.C178,
        [TextStyle_inherit]: true
      });
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[177] || CT.C177,
        [Text_textSpan]: null,
        [Text_data]: "Acervo de livros"
      });
    },
    get C179() {
      return C[179] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: -1
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: basic.Align.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[176] || CT.C176,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[179] || CT.C179
      });
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 16
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: basic.Padding.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[175] || CT.C175,
        [Padding_padding]: C[180] || CT.C180
      });
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: progress_indicator._ActivityIndicatorType.prototype,
        [_Enum__name]: "material",
        [_Enum_index]: 0
      });
    },
    get C182() {
      return C[182] = dart.const({
        __proto__: progress_indicator.CircularProgressIndicator.prototype,
        [Widget_key]: null,
        [ProgressIndicator_semanticsValue]: null,
        [ProgressIndicator_semanticsLabel]: null,
        [ProgressIndicator_valueColor]: null,
        [ProgressIndicator_color]: null,
        [ProgressIndicator_backgroundColor]: null,
        [ProgressIndicator_value]: null,
        [CircularProgressIndicator_strokeWidth]: 4,
        [CircularProgressIndicator__indicatorType]: C[183] || CT.C183
      });
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[182] || CT.C182,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[184] || CT.C184
      });
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[51] || CT.C51,
        [Text_textSpan]: null,
        [Text_data]: "Nenhum resultado encontrado."
      });
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[186] || CT.C186,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[184] || CT.C184
      });
    },
    get C187() {
      return C[187] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: true,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57500
      });
    },
    get C188() {
      return C[188] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[52] || CT.C52,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[189] || CT.C189
      });
    },
    get C190() {
      return C[190] = dart.const(new _js_helper.PrivateSymbol.new('_clientToken', _clientToken));
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: T._EmptyStreamOfListOfint().prototype
      });
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: byte_stream.ByteStream.prototype,
        [StreamView__stream]: C[192] || CT.C192
      });
    },
    get C193() {
      return C[193] = dart.constMap(core.String, core.String, []);
    },
    get C194() {
      return C[194] = dart.const({
        __proto__: convert.Utf8Codec.prototype,
        [Utf8Codec__allowMalformed]: false
      });
    },
    get C195() {
      return C[195] = dart.constList([13, 10], core.int);
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[103] || CT.C103,
        [Text_textSpan]: null,
        [Text_data]: "Usuário"
      });
    },
    get C197() {
      return C[197] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[75] || CT.C75,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[43] || CT.C43
      });
    },
    get C198() {
      return C[198] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: spacer.Spacer.prototype,
        [Widget_key]: null,
        [Spacer_flex]: 1
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 150,
        [EdgeInsets_left]: 0
      });
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 18,
        [EdgeInsets_right]: 90,
        [EdgeInsets_top]: 18,
        [EdgeInsets_left]: 90
      });
    },
    get C203() {
      return C[203] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 20,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[75] || CT.C75,
        [TextStyle_inherit]: true
      });
    },
    get C202() {
      return C[202] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[203] || CT.C203,
        [Text_textSpan]: null,
        [Text_data]: "Sair"
      });
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[13] || CT.C13,
        [TextStyle_inherit]: true
      });
    },
    get C205() {
      return C[205] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292467161
      });
    },
    get C206() {
      return C[206] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[13] || CT.C13,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[43] || CT.C43
      });
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: icon$.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[52] || CT.C52,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: 100,
        [Icon_icon]: C[82] || CT.C82
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[208] || CT.C208,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[184] || CT.C184
      });
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 400,
        [FontWeight_index]: 3
      });
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[210] || CT.C210,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 10,
        [EdgeInsets_top]: 10,
        [EdgeInsets_left]: 10
      });
    },
    get C212() {
      return C[212] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[29] || CT.C29,
        [TextStyle_inherit]: true
      });
    },
    get C213() {
      return C[213] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[210] || CT.C210,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: convert.Latin1Codec.prototype,
        [Latin1Codec__allowInvalid]: false
      });
    },
    get C215() {
      return C[215] = dart.constList([43, 95, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], core.int);
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: chunked_coding.ChunkedCodingCodec.prototype
      });
    },
    get C217() {
      return C[217] = dart.constList(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], core.String);
    },
    get C218() {
      return C[218] = dart.constList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], core.String);
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "boundary"
      });
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "size"
      });
    },
    get C221() {
      return C[221] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "size before LF"
      });
    },
    get C222() {
      return C[222] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "body"
      });
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "body before CR"
      });
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "body before LF"
      });
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "end before CR"
      });
    },
    get C226() {
      return C[226] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "end before LF"
      });
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: decoder._State.prototype,
        [_State__name]: "end"
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: decoder.ChunkedCodingDecoder.prototype
      });
    },
    get C229() {
      return C[229] = dart.constList([], core.int);
    },
    get C230() {
      return C[230] = dart.const({
        __proto__: encoder.ChunkedCodingEncoder.prototype
      });
    },
    get C231() {
      return C[231] = dart.const(new _js_helper.PrivateSymbol.new('_add', _add));
    },
    get C232() {
      return C[232] = dart.const(new _js_helper.PrivateSymbol.new('_head', _head$));
    },
    get C233() {
      return C[233] = dart.const(new _js_helper.PrivateSymbol.new('_writeToList', _writeToList));
    },
    get C234() {
      return C[234] = dart.const(new _js_helper.PrivateSymbol.new('_grow', _grow));
    },
    get C235() {
      return C[235] = dart.const(new _js_helper.PrivateSymbol.new('_preGrow', _preGrow));
    },
    get C236() {
      return C[236] = dart.const(new _js_helper.PrivateSymbol.new('_table', _table$));
    },
    get C237() {
      return C[237] = dart.const(new _js_helper.PrivateSymbol.new('_tail', _tail$));
    },
    get C238() {
      return C[238] = dart.const(new _js_helper.PrivateSymbol.new('_head=', _head_));
    },
    get C239() {
      return C[239] = dart.const(new _js_helper.PrivateSymbol.new('_table=', _table_));
    },
    get C240() {
      return C[240] = dart.const(new _js_helper.PrivateSymbol.new('_tail=', _tail_));
    }
  }, false);
  var C = Array(241).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:flutter_app/features/presentation/pages/splash.dart",
    "package:flutter_app/features/presentation/pages/login.dart",
    "package:flutter_app/features/domain/models/userModel.dart",
    "package:flutter_app/features/data/repositories/user_repository.dart",
    "package:flutter_app/features/presentation/pages/underConstructionScreen.dart",
    "package:flutter_app/shared/components/bottom_navigator.dart",
    "package:flutter_app/features/presentation/pages/home.dart",
    "package:flutter_app/features/presentation/pages/bookLoan.dart",
    "package:flutter_app/features/presentation/pages/%20bookListScreen.dart",
    "package:flutter_app/features/presentation/pages/pendency.dart",
    "package:flutter_app/features/presentation/pages/without_pendency.dart",
    "package:flutter_app/features/presentation/pages/book_collection.dart",
    "package:http/src/client.dart",
    "package:http/src/exception.dart",
    "package:http/src/base_request.dart",
    "package:http/src/request.dart",
    "package:http/src/base_response.dart",
    "package:http/src/response.dart",
    "package:http/src/streamed_request.dart",
    "package:http/src/base_client.dart",
    "package:http/src/byte_stream.dart",
    "package:http/src/multipart_file.dart",
    "package:http/src/multipart_request.dart",
    "package:http/src/streamed_response.dart",
    "package:flutter_app/features/presentation/pages/user.dart",
    "package:flutter_app/features/domain/models/bookmodel.dart",
    "package:flutter_app/features/data/repositories/book_repository.dart",
    "package:flutter_app/features/domain/models/loanModel.dart",
    "package:flutter_app/features/data/repositories/loan_repository.dart",
    "package:flutter_app/features/presentation/pages/book_profile.dart",
    "package:http/src/browser_client.dart",
    "package:flutter_app/features/domain/models/livromodelapi.dart",
    "package:http_parser/src/authentication_challenge.dart",
    "package:http_parser/src/case_insensitive_map.dart",
    "package:http_parser/src/chunked_coding.dart",
    "package:http_parser/src/media_type.dart",
    "package:http_parser/src/chunked_coding/decoder.dart",
    "package:http_parser/src/chunked_coding/encoder.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_queue.dart",
    "package:typed_data/src/typed_queue.dart",
    "package:typed_data/src/typed_buffer.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "Biblioteca Scripta", home: new splash.SplashScreen.new(), debugShowCheckedModeBanner: false});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.main = function main$0() {
    binding.runApp(C[1] || CT.C1);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  splash.SplashScreen = class SplashScreen extends framework.StatefulWidget {
    createState() {
      return new splash._SplashScreenState.new();
    }
    static ['_#new#tearOff']() {
      return new splash.SplashScreen.new();
    }
  };
  (splash.SplashScreen.new = function() {
    splash.SplashScreen.__proto__.new.call(this);
    ;
  }).prototype = splash.SplashScreen.prototype;
  dart.addTypeTests(splash.SplashScreen);
  dart.addTypeCaches(splash.SplashScreen);
  dart.setMethodSignature(splash.SplashScreen, () => ({
    __proto__: dart.getMethods(splash.SplashScreen.__proto__),
    createState: dart.fnType(splash._SplashScreenState, [])
  }));
  dart.setLibraryUri(splash.SplashScreen, I[1]);
  splash._SplashScreenState = class _SplashScreenState extends framework.State$(splash.SplashScreen) {
    initState() {
      super.initState();
      T.FutureOfNull().delayed(new core.Duration.new({seconds: 5}), dart.fn(() => {
        navigator.Navigator.pushReplacement(dart.dynamic, T.ObjectN(), this.context, new page.MaterialPageRoute.new({builder: dart.fn(context => new login.LoginScreen.new(), T.BuildContextToLoginScreen())}));
      }, T.VoidToNull()));
    }
    build(context) {
      return new scaffold.Scaffold.new({backgroundColor: colors.Colors.blue, body: new basic.Center.new({child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([new text.Text.new("Biblioteca Scripta", {style: new text_style.TextStyle.new({color: colors.Colors.white, fontSize: 30, fontWeight: ui.FontWeight.bold})}), new basic.SizedBox.new({height: 20}), new image.Image.asset("assets/images/logo_scripta.png", {width: 70, height: 70, fit: box_fit.BoxFit.contain}), new basic.SizedBox.new({height: 50}), new progress_indicator.CircularProgressIndicator.new({valueColor: new (T.AlwaysStoppedAnimationOfColor()).new(colors.Colors.white)})])})})});
    }
    static ['_#new#tearOff']() {
      return new splash._SplashScreenState.new();
    }
  };
  (splash._SplashScreenState.new = function() {
    splash._SplashScreenState.__proto__.new.call(this);
    ;
  }).prototype = splash._SplashScreenState.prototype;
  dart.addTypeTests(splash._SplashScreenState);
  dart.addTypeCaches(splash._SplashScreenState);
  dart.setMethodSignature(splash._SplashScreenState, () => ({
    __proto__: dart.getMethods(splash._SplashScreenState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(splash._SplashScreenState, I[1]);
  login.LoginScreen = class LoginScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new login.LoginScreen.new({key: key});
    }
    createState() {
      return new login._LoginScreenState.new();
    }
  };
  (login.LoginScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    login.LoginScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = login.LoginScreen.prototype;
  dart.addTypeTests(login.LoginScreen);
  dart.addTypeCaches(login.LoginScreen);
  dart.setMethodSignature(login.LoginScreen, () => ({
    __proto__: dart.getMethods(login.LoginScreen.__proto__),
    createState: dart.fnType(framework.State$(login.LoginScreen), [])
  }));
  dart.setLibraryUri(login.LoginScreen, I[2]);
  var _matriculaController = dart.privateName(login, "_matriculaController");
  var _senhaController = dart.privateName(login, "_senhaController");
  var _isChecked = dart.privateName(login, "_isChecked");
  var _errorMessage = dart.privateName(login, "_errorMessage");
  var BottomNavigator_userType = dart.privateName(bottom_navigator, "BottomNavigator.userType");
  var _login = dart.privateName(login, "_login");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var Color_value = dart.privateName(ui, "Color.value");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var TextDecoration__mask = dart.privateName(ui, "TextDecoration._mask");
  var ColorSwatch__swatch = dart.privateName(colors$, "ColorSwatch._swatch");
  login._LoginScreenState = class _LoginScreenState extends framework.State$(login.LoginScreen) {
    [_login]() {
      return async.async(dart.void, (function* _login() {
        let user = new userModel.UserModel.new({matricula: this[_matriculaController].text, senha: this[_senhaController].text});
        let api = new user_repository.UserRepository.new();
        let result = (yield api.authenticate(user));
        if (result === "Erro ao conectar com o servidor") {
          this.setState(dart.fn(() => {
            this[_errorMessage] = "Erro ao conectar com o servidor. Tente novamente mais tarde.";
          }, T.VoidTovoid()));
          if (user.matricula[$isNotEmpty] && (user.matricula[$_get](0) === "0" || user.matricula[$_get](0) === "1" || user.matricula[$_get](0) === "2" || user.matricula[$_get](0) === "3" || user.matricula[$_get](0) === "4")) {
            navigator.Navigator.pushReplacement(dart.dynamic, T.ObjectN(), this.context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[2] || CT.C2, T.BuildContextToBottomNavigator())}));
          } else if (user.matricula[$isNotEmpty] && (user.matricula[$_get](0) === "5" || user.matricula[$_get](0) === "6" || user.matricula[$_get](0) === "7" || user.matricula[$_get](0) === "8" || user.matricula[$_get](0) === "9")) {
            navigator.Navigator.pushReplacement(dart.dynamic, T.ObjectN(), this.context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[3] || CT.C3, T.BuildContextToBottomNavigator())}));
          }
        } else if (result === "Login bem-sucedido!") {
          navigator.Navigator.pushReplacement(dart.dynamic, T.ObjectN(), this.context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[4] || CT.C4, T.BuildContextToBottomNavigator())}));
        } else {
          this.setState(dart.fn(() => {
            this[_errorMessage] = result;
          }, T.VoidTovoid()));
        }
      }).bind(this));
    }
    build(context) {
      return new scaffold.Scaffold.new({backgroundColor: colors.Colors.blue, body: new basic.Stack.new({children: T.JSArrayOfWidget().of([new basic.Align.new({alignment: alignment.Alignment.bottomCenter, child: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white, borderRadius: C[5] || CT.C5, boxShadow: T.JSArrayOfBoxShadow().of([new box_shadow.BoxShadow.new({color: colors.Colors.black.withOpacity(0.2), blurRadius: 10, offset: C[8] || CT.C8})])}), padding: C[9] || CT.C9, height: media_query.MediaQuery.of(context).size.height * 0.77, child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.start, children: (() => {
                    let t0 = T.JSArrayOfWidget().of([C[10] || CT.C10, C[14] || CT.C14, new text_field.TextField.new({controller: this[_matriculaController], decoration: new input_decorator.InputDecoration.new({labelText: "Matrícula", border: new input_border.OutlineInputBorder.new()})}), C[15] || CT.C15, new text_field.TextField.new({controller: this[_senhaController], decoration: new input_decorator.InputDecoration.new({labelText: "Senha", border: new input_border.OutlineInputBorder.new()}), obscureText: true}), C[16] || CT.C16]);
                    if (this[_errorMessage] != null) t0.push(new basic.Padding.new({padding: C[17] || CT.C17, child: new text.Text.new(dart.nullCheck(this[_errorMessage]), {style: new text_style.TextStyle.new({color: colors.Colors.red, fontSize: 12})})}));
                    t0.push(new basic.Padding.new({padding: C[18] || CT.C18, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.start, children: T.JSArrayOfWidget().of([new checkbox.Checkbox.new({value: this[_isChecked], onChanged: dart.fn(value => {
                              this.setState(dart.fn(() => {
                                let t1;
                                this[_isChecked] = (t1 = value, t1 == null ? false : t1);
                              }, T.VoidTovoid()));
                            }, T.boolNTovoid()), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(4)})}), new ink_well.InkWell.new({onTap: dart.fn(() => {
                              this.setState(dart.fn(() => {
                                this[_isChecked] = !this[_isChecked];
                              }, T.VoidTovoid()));
                            }, T.VoidTovoid()), child: C[19] || CT.C19})])})}));
                    t0.push(C[21] || CT.C21);
                    t0.push(new elevated_button.ElevatedButton.new({onPressed: dart.bind(this, _login), style: elevated_button.ElevatedButton.styleFrom({primary: colors.Colors.blue, padding: C[22] || CT.C22}), child: C[23] || CT.C23}));
                    t0.push(C[21] || CT.C21);
                    t0.push(new text_button.TextButton.new({onPressed: dart.fn(() => {
                        navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[25] || CT.C25, T.BuildContextToUnderConstructionScreen())}));
                      }, T.VoidTovoid()), child: C[26] || CT.C26}));
                    return t0;
                  })()})})}), new basic.Positioned.new({bottom: media_query.MediaQuery.of(context).size.height * 0.85, left: 0, right: 0, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new image.Image.asset("assets/images/logo_scripta.png", {width: 70, height: 70, fit: box_fit.BoxFit.contain})])})})])})});
    }
    static ['_#new#tearOff']() {
      return new login._LoginScreenState.new();
    }
  };
  (login._LoginScreenState.new = function() {
    this[_matriculaController] = new editable_text.TextEditingController.new();
    this[_senhaController] = new editable_text.TextEditingController.new();
    this[_isChecked] = false;
    this[_errorMessage] = null;
    login._LoginScreenState.__proto__.new.call(this);
    ;
  }).prototype = login._LoginScreenState.prototype;
  dart.addTypeTests(login._LoginScreenState);
  dart.addTypeCaches(login._LoginScreenState);
  dart.setMethodSignature(login._LoginScreenState, () => ({
    __proto__: dart.getMethods(login._LoginScreenState.__proto__),
    [_login]: dart.fnType(async.Future$(dart.void), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(login._LoginScreenState, I[2]);
  dart.setFieldSignature(login._LoginScreenState, () => ({
    __proto__: dart.getFields(login._LoginScreenState.__proto__),
    [_matriculaController]: dart.finalFieldType(editable_text.TextEditingController),
    [_senhaController]: dart.finalFieldType(editable_text.TextEditingController),
    [_isChecked]: dart.fieldType(core.bool),
    [_errorMessage]: dart.fieldType(dart.nullable(core.String))
  }));
  var matricula$ = dart.privateName(userModel, "UserModel.matricula");
  var senha$ = dart.privateName(userModel, "UserModel.senha");
  userModel.UserModel = class UserModel extends core.Object {
    get matricula() {
      return this[matricula$];
    }
    set matricula(value) {
      super.matricula = value;
    }
    get senha() {
      return this[senha$];
    }
    set senha(value) {
      super.senha = value;
    }
    static ['_#new#tearOff'](opts) {
      let matricula = opts && 'matricula' in opts ? opts.matricula : null;
      let senha = opts && 'senha' in opts ? opts.senha : null;
      return new userModel.UserModel.new({matricula: matricula, senha: senha});
    }
    static fromJson(json) {
      return new userModel.UserModel.new({matricula: core.String.as(json[$_get]("matricula")), senha: core.String.as(json[$_get]("senha"))});
    }
    static ['_#fromJson#tearOff'](json) {
      return userModel.UserModel.fromJson(json);
    }
    toJson() {
      return new (T.IdentityMapOfString$dynamic()).from(["matricula", this.matricula, "senha", this.senha]);
    }
  };
  (userModel.UserModel.new = function(opts) {
    let matricula = opts && 'matricula' in opts ? opts.matricula : null;
    let senha = opts && 'senha' in opts ? opts.senha : null;
    this[matricula$] = matricula;
    this[senha$] = senha;
    ;
  }).prototype = userModel.UserModel.prototype;
  dart.addTypeTests(userModel.UserModel);
  dart.addTypeCaches(userModel.UserModel);
  dart.setMethodSignature(userModel.UserModel, () => ({
    __proto__: dart.getMethods(userModel.UserModel.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setStaticMethodSignature(userModel.UserModel, () => ['fromJson']);
  dart.setLibraryUri(userModel.UserModel, I[3]);
  dart.setFieldSignature(userModel.UserModel, () => ({
    __proto__: dart.getFields(userModel.UserModel.__proto__),
    matricula: dart.finalFieldType(core.String),
    senha: dart.finalFieldType(core.String)
  }));
  var baseUrl = dart.privateName(user_repository, "UserRepository.baseUrl");
  user_repository.UserRepository = class UserRepository extends core.Object {
    get baseUrl() {
      return this[baseUrl];
    }
    set baseUrl(value) {
      super.baseUrl = value;
    }
    authenticate(user) {
      return async.async(core.String, (function* authenticate() {
        try {
          let response = (yield http.post(core.Uri.parse(this.baseUrl + "/api/usuarios/login"), {headers: new (T.IdentityMapOfString$String()).from(["Content-Type", "application/x-www-form-urlencoded"]), body: user.toJson()}));
          if (response.statusCode === 200) {
            return "Login bem-sucedido!";
          } else if (response.statusCode === 401) {
            return "Credenciais inválidas!";
          } else {
            return "Erro desconhecido: " + response.body;
          }
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            return "Erro ao conectar com o servidor";
          } else
            throw e$;
        }
      }).bind(this));
    }
    static ['_#new#tearOff']() {
      return new user_repository.UserRepository.new();
    }
  };
  (user_repository.UserRepository.new = function() {
    this[baseUrl] = "http://localhost:8080";
    ;
  }).prototype = user_repository.UserRepository.prototype;
  dart.addTypeTests(user_repository.UserRepository);
  dart.addTypeCaches(user_repository.UserRepository);
  dart.setMethodSignature(user_repository.UserRepository, () => ({
    __proto__: dart.getMethods(user_repository.UserRepository.__proto__),
    authenticate: dart.fnType(async.Future$(core.String), [userModel.UserModel])
  }));
  dart.setLibraryUri(user_repository.UserRepository, I[4]);
  dart.setFieldSignature(user_repository.UserRepository, () => ({
    __proto__: dart.getFields(user_repository.UserRepository.__proto__),
    baseUrl: dart.finalFieldType(core.String)
  }));
  var Icon_textDirection = dart.privateName(icon$, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon$, "Icon.semanticLabel");
  var Icon_shadows = dart.privateName(icon$, "Icon.shadows");
  var Icon_color = dart.privateName(icon$, "Icon.color");
  var Icon_opticalSize = dart.privateName(icon$, "Icon.opticalSize");
  var Icon_grade = dart.privateName(icon$, "Icon.grade");
  var Icon_weight = dart.privateName(icon$, "Icon.weight");
  var Icon_fill = dart.privateName(icon$, "Icon.fill");
  var Icon_size = dart.privateName(icon$, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon$, "Icon.icon");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  underConstructionScreen.UnderConstructionScreen = class UnderConstructionScreen extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new underConstructionScreen.UnderConstructionScreen.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({backgroundColor: colors.Colors.white, appBar: new app_bar.AppBar.new({title: C[41] || CT.C41, backgroundColor: colors.Colors.blue, leading: new icon_button.IconButton.new({icon: C[42] || CT.C42, onPressed: dart.fn(() => {
              navigator.Navigator.pushReplacement(dart.dynamic, T.ObjectN(), context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[44] || CT.C44, T.BuildContextToLoginScreen())}));
            }, T.VoidTovoid())})}), body: new basic.Center.new({child: new basic.Padding.new({padding: C[45] || CT.C45, child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T.JSArrayOfWidget().of([new icon$.Icon.new(icons.Icons.build, {size: 80, color: colors.Colors.blue}), C[46] || CT.C46, C[47] || CT.C47, C[46] || CT.C46, C[50] || CT.C50, C[21] || CT.C21, new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                    navigator.Navigator.pushReplacement(dart.dynamic, T.ObjectN(), context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[44] || CT.C44, T.BuildContextToLoginScreen())}));
                  }, T.VoidTovoid()), child: C[66] || CT.C66})])})})})});
    }
  };
  (underConstructionScreen.UnderConstructionScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    underConstructionScreen.UnderConstructionScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = underConstructionScreen.UnderConstructionScreen.prototype;
  dart.addTypeTests(underConstructionScreen.UnderConstructionScreen);
  dart.addTypeCaches(underConstructionScreen.UnderConstructionScreen);
  dart.setMethodSignature(underConstructionScreen.UnderConstructionScreen, () => ({
    __proto__: dart.getMethods(underConstructionScreen.UnderConstructionScreen.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(underConstructionScreen.UnderConstructionScreen, I[5]);
  const userType$ = BottomNavigator_userType;
  bottom_navigator.BottomNavigator = class BottomNavigator extends framework.StatefulWidget {
    get userType() {
      return this[userType$];
    }
    set userType(value) {
      super.userType = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let userType = opts && 'userType' in opts ? opts.userType : null;
      return new bottom_navigator.BottomNavigator.new({key: key, userType: userType});
    }
    createState() {
      return new bottom_navigator._BottomNavigatorState.new();
    }
  };
  (bottom_navigator.BottomNavigator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let userType = opts && 'userType' in opts ? opts.userType : null;
    this[userType$] = userType;
    bottom_navigator.BottomNavigator.__proto__.new.call(this, {key: key});
    ;
  }).prototype = bottom_navigator.BottomNavigator.prototype;
  dart.addTypeTests(bottom_navigator.BottomNavigator);
  dart.addTypeCaches(bottom_navigator.BottomNavigator);
  dart.setMethodSignature(bottom_navigator.BottomNavigator, () => ({
    __proto__: dart.getMethods(bottom_navigator.BottomNavigator.__proto__),
    createState: dart.fnType(framework.State$(bottom_navigator.BottomNavigator), [])
  }));
  dart.setLibraryUri(bottom_navigator.BottomNavigator, I[6]);
  dart.setFieldSignature(bottom_navigator.BottomNavigator, () => ({
    __proto__: dart.getFields(bottom_navigator.BottomNavigator.__proto__),
    userType: dart.finalFieldType(core.String)
  }));
  var _selectedIndex = dart.privateName(bottom_navigator, "_selectedIndex");
  var ___BottomNavigatorState__pages = dart.privateName(bottom_navigator, "_#_BottomNavigatorState#_pages");
  var _pages = dart.privateName(bottom_navigator, "_pages");
  var _getPagesBasedOnUserType = dart.privateName(bottom_navigator, "_getPagesBasedOnUserType");
  var _onItemTapped = dart.privateName(bottom_navigator, "_onItemTapped");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var BottomNavigationBarItem_tooltip = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.tooltip");
  var BottomNavigationBarItem_backgroundColor = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.backgroundColor");
  var BottomNavigationBarItem_label = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.label");
  var BottomNavigationBarItem_activeIcon = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.activeIcon");
  var BottomNavigationBarItem_icon = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.icon");
  bottom_navigator._BottomNavigatorState = class _BottomNavigatorState extends framework.State$(bottom_navigator.BottomNavigator) {
    get [_pages]() {
      let t2;
      t2 = this[___BottomNavigatorState__pages];
      return t2 == null ? dart.throw(new _internal.LateError.fieldNI("_pages")) : t2;
    }
    set [_pages](_pages$35param) {
      if (this[___BottomNavigatorState__pages] == null)
        this[___BottomNavigatorState__pages] = _pages$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("_pages"));
    }
    initState() {
      super.initState();
      this[_pages] = this[_getPagesBasedOnUserType](this.widget.userType);
    }
    [_getPagesBasedOnUserType](userType) {
      if (userType === "userApi") {
        return T.JSArrayOfWidget().of([C[67] || CT.C67, new book_collection.SearchScreen.new(), C[68] || CT.C68, C[69] || CT.C69]);
      } else if (userType === "userSapi_1") {
        return T.JSArrayOfWidget().of([C[67] || CT.C67, new book_collection.SearchScreen.new(), C[68] || CT.C68, C[70] || CT.C70]);
      } else if (userType === "userSapi_2") {
        return T.JSArrayOfWidget().of([C[67] || CT.C67, new book_collection.SearchScreen.new(), C[68] || CT.C68, C[69] || CT.C69]);
      } else {
        return T.JSArrayOfWidget().of([C[67] || CT.C67, new $32bookListScreen.BookListScreen.new(), C[68] || CT.C68, C[69] || CT.C69]);
      }
    }
    [_onItemTapped](index) {
      this.setState(dart.fn(() => {
        this[_selectedIndex] = index;
      }, T.VoidTovoid()));
    }
    build(context) {
      return new scaffold.Scaffold.new({body: new basic.Stack.new({children: T.JSArrayOfWidget().of([new animated_switcher.AnimatedSwitcher.new({duration: C[71] || CT.C71, child: this[_pages][$_get](this[_selectedIndex])}), new basic.Positioned.new({left: 15, right: 15, bottom: 15, child: new basic.ClipRRect.new({borderRadius: new border_radius.BorderRadius.circular(30), child: new container.Container.new({child: new bottom_navigation_bar.BottomNavigationBar.new({backgroundColor: colors.Colors.blue, items: C[72] || CT.C72, currentIndex: this[_selectedIndex], selectedItemColor: colors.Colors.white, unselectedItemColor: new ui.Color.fromARGB(170, 255, 255, 255), showUnselectedLabels: true, onTap: dart.bind(this, _onItemTapped), type: bottom_navigation_bar.BottomNavigationBarType.fixed})})})})])})});
    }
    static ['_#new#tearOff']() {
      return new bottom_navigator._BottomNavigatorState.new();
    }
  };
  (bottom_navigator._BottomNavigatorState.new = function() {
    this[_selectedIndex] = 0;
    this[___BottomNavigatorState__pages] = null;
    bottom_navigator._BottomNavigatorState.__proto__.new.call(this);
    ;
  }).prototype = bottom_navigator._BottomNavigatorState.prototype;
  dart.addTypeTests(bottom_navigator._BottomNavigatorState);
  dart.addTypeCaches(bottom_navigator._BottomNavigatorState);
  dart.setMethodSignature(bottom_navigator._BottomNavigatorState, () => ({
    __proto__: dart.getMethods(bottom_navigator._BottomNavigatorState.__proto__),
    [_getPagesBasedOnUserType]: dart.fnType(core.List$(framework.Widget), [core.String]),
    [_onItemTapped]: dart.fnType(dart.void, [core.int]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(bottom_navigator._BottomNavigatorState, () => ({
    __proto__: dart.getGetters(bottom_navigator._BottomNavigatorState.__proto__),
    [_pages]: core.List$(framework.Widget)
  }));
  dart.setSetterSignature(bottom_navigator._BottomNavigatorState, () => ({
    __proto__: dart.getSetters(bottom_navigator._BottomNavigatorState.__proto__),
    [_pages]: core.List$(framework.Widget)
  }));
  dart.setLibraryUri(bottom_navigator._BottomNavigatorState, I[6]);
  dart.setFieldSignature(bottom_navigator._BottomNavigatorState, () => ({
    __proto__: dart.getFields(bottom_navigator._BottomNavigatorState.__proto__),
    [_selectedIndex]: dart.fieldType(core.int),
    [___BottomNavigatorState__pages]: dart.fieldType(dart.nullable(core.List$(framework.Widget)))
  }));
  http.head = function head(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(response$.Response, dart.fn(client => client.head(url, {headers: headers}), T.ClientToFutureOfResponse()));
  };
  http.get = function get(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(response$.Response, dart.fn(client => client.get(url, {headers: headers}), T.ClientToFutureOfResponse()));
  };
  http.post = function post(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.post(url, {headers: headers, body: body, encoding: encoding}), T.ClientToFutureOfResponse()));
  };
  http.put = function put(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.put(url, {headers: headers, body: body, encoding: encoding}), T.ClientToFutureOfResponse()));
  };
  http.patch = function patch(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.patch(url, {headers: headers, body: body, encoding: encoding}), T.ClientToFutureOfResponse()));
  };
  http.delete = function $delete(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.delete(url, {headers: headers, body: body, encoding: encoding}), T.ClientToFutureOfResponse()));
  };
  http.read = function read(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(core.String, dart.fn(client => client.read(url, {headers: headers}), T.ClientToFutureOfString()));
  };
  http.readBytes = function readBytes(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(typed_data.Uint8List, dart.fn(client => client.readBytes(url, {headers: headers}), T.ClientToFutureOfUint8List()));
  };
  http._withClient = function _withClient(T, fn) {
    return async.async(T, function* _withClient() {
      let client = client$.Client.new();
      try {
        return yield fn(client);
      } finally {
        client.close();
      }
    });
  };
  home.HomeScreen = class HomeScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new home.HomeScreen.new({key: key});
    }
    createState() {
      return new home._HomeScreenState.new();
    }
  };
  (home.HomeScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    home.HomeScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = home.HomeScreen.prototype;
  dart.addTypeTests(home.HomeScreen);
  dart.addTypeCaches(home.HomeScreen);
  dart.setMethodSignature(home.HomeScreen, () => ({
    __proto__: dart.getMethods(home.HomeScreen.__proto__),
    createState: dart.fnType(home._HomeScreenState, [])
  }));
  dart.setLibraryUri(home.HomeScreen, I[7]);
  var ___HomeScreenState__pageController = dart.privateName(home, "_#_HomeScreenState#_pageController");
  var ___HomeScreenState__timer = dart.privateName(home, "_#_HomeScreenState#_timer");
  var _currentPage = dart.privateName(home, "_currentPage");
  var ___HomeScreenState__recommendedBooks = dart.privateName(home, "_#_HomeScreenState#_recommendedBooks");
  var _isRecommending = dart.privateName(home, "_isRecommending");
  var _pageController = dart.privateName(home, "_pageController");
  var _timer = dart.privateName(home, "_timer");
  var _recommendedBooks = dart.privateName(home, "_recommendedBooks");
  var _recommendations = dart.privateName(home, "_recommendations");
  var _buildCarouselItem = dart.privateName(home, "_buildCarouselItem");
  var ScrollPhysics_parent = dart.privateName(scroll_physics, "ScrollPhysics.parent");
  var _buildBlockItem = dart.privateName(home, "_buildBlockItem");
  home._HomeScreenState = class _HomeScreenState extends framework.State$(home.HomeScreen) {
    get [_pageController]() {
      let t2;
      t2 = this[___HomeScreenState__pageController];
      return t2 == null ? dart.throw(new _internal.LateError.fieldNI("_pageController")) : t2;
    }
    set [_pageController](_pageController$35param) {
      this[___HomeScreenState__pageController] = _pageController$35param;
    }
    get [_timer]() {
      let t2;
      t2 = this[___HomeScreenState__timer];
      return t2 == null ? dart.throw(new _internal.LateError.fieldNI("_timer")) : t2;
    }
    set [_timer](_timer$35param) {
      this[___HomeScreenState__timer] = _timer$35param;
    }
    get [_recommendedBooks]() {
      let t2;
      t2 = this[___HomeScreenState__recommendedBooks];
      return t2 == null ? dart.throw(new _internal.LateError.fieldNI("_recommendedBooks")) : t2;
    }
    set [_recommendedBooks](_recommendedBooks$35param) {
      this[___HomeScreenState__recommendedBooks] = _recommendedBooks$35param;
    }
    initState() {
      super.initState();
      this[_pageController] = new page_view.PageController.new();
      this[_recommendations]();
      this[_timer] = async.Timer.periodic(C[86] || CT.C86, dart.fn(timer => {
        if (this[_currentPage] < 2) {
          this[_currentPage] = this[_currentPage] + 1;
        } else {
          this[_currentPage] = 0;
        }
        this[_pageController].animateToPage(this[_currentPage], {duration: C[87] || CT.C87, curve: curves.Curves.easeInOut});
      }, T.TimerTovoid()));
    }
    [_recommendations]() {
      return async.async(dart.void, (function* _recommendations() {
        try {
          let bookRepository = new book_repository.BookRepository.new();
          let recommendedBooks = (yield bookRepository.recommendation("flutter"));
          this.setState(dart.fn(() => {
            this[_recommendedBooks] = recommendedBooks;
            this[_isRecommending] = false;
          }, T.VoidTovoid()));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("Erro ao carregar recomendações: " + dart.str(e));
            this.setState(dart.fn(() => {
              this[_isRecommending] = false;
            }, T.VoidTovoid()));
          } else
            throw e$;
        }
      }).bind(this));
    }
    dispose() {
      this[_timer].cancel();
      this[_pageController].dispose();
      super.dispose();
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: colors.Colors.blue, elevation: 0, title: new basic.Row.new({children: T.JSArrayOfWidget().of([new image.Image.asset("assets/images/logo_scripta.png", {height: 25})])}), actions: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: C[88] || CT.C88, onPressed: dart.fn(() => {
                core.print("Notificação pressionada!");
              }, T.VoidTovoid())}), new icon_button.IconButton.new({icon: C[90] || CT.C90, onPressed: dart.fn(() => {
                navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[92] || CT.C92, T.BuildContextToUserScreen())}));
              }, T.VoidTovoid())})])}), body: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Column.new({children: T.JSArrayOfWidget().of([new container.Container.new({height: 220, decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.only({bottomLeft: new ui.Radius.circular(40), bottomRight: new ui.Radius.circular(40)}), boxShadow: T.JSArrayOfBoxShadow().of([new box_shadow.BoxShadow.new({color: new ui.Color.fromARGB(255, 33, 150, 243).withOpacity(0.4), blurRadius: 5, offset: new ui.Offset.new(0, 3)})])}), child: new basic.ClipRRect.new({borderRadius: new border_radius.BorderRadius.only({bottomLeft: new ui.Radius.circular(50), bottomRight: new ui.Radius.circular(50)}), child: new page_view.PageView.new({controller: this[_pageController], children: T.JSArrayOfWidget().of([this[_buildCarouselItem]({title: "Bem-vindo à sua Biblioteca Digital!", subtitle: "Explore, descubra e organize seu acervo de forma prática e intuitiva.", icon: icons.Icons.book}), this[_buildCarouselItem]({title: "Descubra Novos Títulos", subtitle: "Encontre facilmente livros e artigos relevantes para você.", icon: icons.Icons.search}), this[_buildCarouselItem]({title: "Sua Coleção, Suas Regras", subtitle: "Organize seu acervo da forma que preferir e sempre tenha o que precisa.", icon: icons.Icons.folder})])})})}), C[21] || CT.C21, new basic.Padding.new({padding: edge_insets.EdgeInsets.zero, child: new text.Text.new("Recomendados", {style: new text_style.TextStyle.new({fontSize: 16, color: new ui.Color.fromARGB(255, 108, 106, 106)})})}), C[16] || CT.C16, new container.Container.new({margin: C[93] || CT.C93, child: this[_isRecommending] ? new basic.Center.new({child: new progress_indicator.CircularProgressIndicator.new()}) : new scroll_view.ListView.builder({shrinkWrap: true, physics: C[94] || CT.C94, itemCount: this[_recommendedBooks][$length], itemBuilder: dart.fn((context, index) => this[_buildBlockItem]({book: this[_recommendedBooks][$_get](index)}), T.BuildContextAndintToWidget())})}), C[95] || CT.C95])})})});
    }
    [_buildCarouselItem](opts) {
      let title = opts && 'title' in opts ? opts.title : null;
      let subtitle = opts && 'subtitle' in opts ? opts.subtitle : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      return new container.Container.new({color: colors.Colors.blue, child: new basic.Padding.new({padding: C[96] || CT.C96, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new basic.Expanded.new({child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(title, {style: C[97] || CT.C97, maxLines: 2, overflow: text_painter.TextOverflow.ellipsis}), C[16] || CT.C16, new text.Text.new(subtitle, {style: C[98] || CT.C98, softWrap: true})])})}), new basic.Padding.new({padding: C[100] || CT.C100, child: new icon$.Icon.new(icon, {size: 70, color: colors.Colors.white})})])})})});
    }
    [_buildBlockItem](opts) {
      let book = opts && 'book' in opts ? opts.book : null;
      return new container.Container.new({margin: C[101] || CT.C101, padding: C[45] || CT.C45, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white, borderRadius: new border_radius.BorderRadius.circular(10), boxShadow: T.JSArrayOfBoxShadow().of([new box_shadow.BoxShadow.new({color: colors.Colors.grey.withOpacity(0.1), blurRadius: 10, offset: new ui.Offset.new(0, 4)})])}), child: new basic.Row.new({children: T.JSArrayOfWidget().of([new icon$.Icon.new(icons.Icons.book, {color: colors.Colors.blue.shade600, size: 50}), C[102] || CT.C102, new basic.Expanded.new({child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(book.title, {style: C[103] || CT.C103, maxLines: 2, overflow: text_painter.TextOverflow.ellipsis}), C[104] || CT.C104, new text.Text.new(book.author, {style: C[105] || CT.C105, maxLines: 1, overflow: text_painter.TextOverflow.ellipsis})])})})])})});
    }
    static ['_#new#tearOff']() {
      return new home._HomeScreenState.new();
    }
  };
  (home._HomeScreenState.new = function() {
    this[___HomeScreenState__pageController] = null;
    this[___HomeScreenState__timer] = null;
    this[_currentPage] = 0;
    this[___HomeScreenState__recommendedBooks] = null;
    this[_isRecommending] = true;
    home._HomeScreenState.__proto__.new.call(this);
    ;
  }).prototype = home._HomeScreenState.prototype;
  dart.addTypeTests(home._HomeScreenState);
  dart.addTypeCaches(home._HomeScreenState);
  dart.setMethodSignature(home._HomeScreenState, () => ({
    __proto__: dart.getMethods(home._HomeScreenState.__proto__),
    [_recommendations]: dart.fnType(async.Future$(dart.void), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildCarouselItem]: dart.fnType(framework.Widget, [], {}, {icon: icon_data.IconData, subtitle: core.String, title: core.String}),
    [_buildBlockItem]: dart.fnType(framework.Widget, [], {}, {book: bookmodel.BookModel})
  }));
  dart.setGetterSignature(home._HomeScreenState, () => ({
    __proto__: dart.getGetters(home._HomeScreenState.__proto__),
    [_pageController]: page_view.PageController,
    [_timer]: async.Timer,
    [_recommendedBooks]: core.List$(bookmodel.BookModel)
  }));
  dart.setSetterSignature(home._HomeScreenState, () => ({
    __proto__: dart.getSetters(home._HomeScreenState.__proto__),
    [_pageController]: page_view.PageController,
    [_timer]: async.Timer,
    [_recommendedBooks]: core.List$(bookmodel.BookModel)
  }));
  dart.setLibraryUri(home._HomeScreenState, I[7]);
  dart.setFieldSignature(home._HomeScreenState, () => ({
    __proto__: dart.getFields(home._HomeScreenState.__proto__),
    [___HomeScreenState__pageController]: dart.fieldType(dart.nullable(page_view.PageController)),
    [___HomeScreenState__timer]: dart.fieldType(dart.nullable(async.Timer)),
    [_currentPage]: dart.fieldType(core.int),
    [___HomeScreenState__recommendedBooks]: dart.fieldType(dart.nullable(core.List$(bookmodel.BookModel))),
    [_isRecommending]: dart.fieldType(core.bool)
  }));
  bookLoan.BookLoanScreen = class BookLoanScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new bookLoan.BookLoanScreen.new({key: key});
    }
    createState() {
      return new bookLoan._BookLoanScreenState.new();
    }
  };
  (bookLoan.BookLoanScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    bookLoan.BookLoanScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = bookLoan.BookLoanScreen.prototype;
  dart.addTypeTests(bookLoan.BookLoanScreen);
  dart.addTypeCaches(bookLoan.BookLoanScreen);
  dart.setMethodSignature(bookLoan.BookLoanScreen, () => ({
    __proto__: dart.getMethods(bookLoan.BookLoanScreen.__proto__),
    createState: dart.fnType(bookLoan._BookLoanScreenState, [])
  }));
  dart.setLibraryUri(bookLoan.BookLoanScreen, I[8]);
  var _emprestimos = dart.privateName(bookLoan, "_emprestimos");
  var _isLoading = dart.privateName(bookLoan, "_isLoading");
  var _loadEmprestimos = dart.privateName(bookLoan, "_loadEmprestimos");
  var _showRenewalSnackBar = dart.privateName(bookLoan, "_showRenewalSnackBar");
  var _showErrorSnackBar = dart.privateName(bookLoan, "_showErrorSnackBar");
  var _showLoanDetailsDialog = dart.privateName(bookLoan, "_showLoanDetailsDialog");
  bookLoan._BookLoanScreenState = class _BookLoanScreenState extends framework.State$(bookLoan.BookLoanScreen) {
    initState() {
      super.initState();
      this[_loadEmprestimos]();
    }
    [_loadEmprestimos]() {
      return async.async(dart.void, (function* _loadEmprestimos() {
        try {
          let emprestimos = (yield new loan_repository.LoanRepository.new().fetchEmprestimosByMatricula());
          this.setState(dart.fn(() => {
            this[_emprestimos] = emprestimos;
            this[_isLoading] = false;
          }, T.VoidTovoid()));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            this.setState(dart.fn(() => {
              this[_isLoading] = false;
            }, T.VoidTovoid()));
            core.print("Erro ao carregar os empréstimos: " + dart.str(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    [_showLoanDetailsDialog](emprestimo) {
      let dataAprovacao = emprestimo.dataAprovacao.toLocal().toString()[$split](" ")[$_get](0);
      let dataDevolucao = emprestimo.dataDevolucao.toLocal().toString()[$split](" ")[$_get](0);
      let mensagemErro = "";
      dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.Dialog.new({shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(16)}), elevation: 5, backgroundColor: colors.Colors.white, child: new basic.Padding.new({padding: C[106] || CT.C106, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.start, children: (() => {
                let t4 = T.JSArrayOfWidget().of([new text.Text.new("Detalhes do Empréstimo", {style: new text_style.TextStyle.new({fontSize: 22, fontWeight: ui.FontWeight.bold, color: colors.Colors.blue})}), new basic.SizedBox.new({height: 16}), new text.Text.new("Título: " + emprestimo.livro.titulo, {style: new text_style.TextStyle.new({fontWeight: ui.FontWeight.bold, fontSize: 16})}), new basic.SizedBox.new({height: 5}), new text.Text.new("Autor: " + emprestimo.livro.autor, {style: new text_style.TextStyle.new({fontSize: 14})}), new basic.SizedBox.new({height: 14}), new text.Text.new("Data de Aprovação: " + dataAprovacao, {style: new text_style.TextStyle.new({fontSize: 14})}), new basic.SizedBox.new({height: 8}), new text.Text.new("Data de Devolução: " + dataDevolucao, {style: new text_style.TextStyle.new({fontSize: 14})}), new basic.SizedBox.new({height: 24})]);
                if (mensagemErro[$isNotEmpty]) t4.push(new basic.Padding.new({padding: C[17] || CT.C17, child: new text.Text.new(mensagemErro, {style: new text_style.TextStyle.new({color: colors.Colors.red, fontWeight: ui.FontWeight.bold})})}));
                t4.push(new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => async.async(dart.void, (function*() {
                        let sucesso = (yield new loan_repository.LoanRepository.new().renovarEmprestimo(emprestimo.emprestimoID));
                        if (sucesso) {
                          navigator.Navigator.of(context).pop(T.ObjectN());
                          yield this[_loadEmprestimos]();
                          this[_showRenewalSnackBar]();
                        } else {
                          navigator.Navigator.of(context).pop(T.ObjectN());
                          this[_showErrorSnackBar]();
                        }
                      }).bind(this)), T.VoidToFutureOfvoid()), style: elevated_button.ElevatedButton.styleFrom({primary: colors.Colors.blue, onPrimary: colors.Colors.white, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(12)}), padding: new edge_insets.EdgeInsets.symmetric({horizontal: 20, vertical: 10})}), child: new text.Text.new("Renovar")}), new text_button.TextButton.new({onPressed: dart.fn(() => {
                        navigator.Navigator.of(context).pop(T.ObjectN());
                      }, T.VoidTovoid()), style: text_button.TextButton.styleFrom({primary: colors.Colors.blue}), child: new text.Text.new("Fechar")})])}));
                return t4;
              })()})})}), T.BuildContextToDialog())});
    }
    [_showErrorSnackBar]() {
      let snackBar = new snack_bar.SnackBar.new({content: new container.Container.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: 15, horizontal: 15}), decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.red.shade200, borderRadius: new border_radius.BorderRadius.circular(10), border: box_border.Border.all({color: colors.Colors.red.shade800, width: 2})}), child: new text.Text.new("Falha ao renovar o empréstimo.", {style: new text_style.TextStyle.new({fontSize: 16, color: colors.Colors.black, fontWeight: ui.FontWeight.bold})})}), behavior: snack_bar_theme.SnackBarBehavior.floating, backgroundColor: new ui.Color.fromARGB(0, 214, 213, 213), margin: new edge_insets.EdgeInsets.symmetric({horizontal: 5, vertical: 70}), duration: new core.Duration.new({seconds: 3})});
      scaffold.ScaffoldMessenger.of(this.context).showSnackBar(snackBar);
    }
    [_showRenewalSnackBar]() {
      let snackBar = new snack_bar.SnackBar.new({content: new container.Container.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: 15, horizontal: 15}), decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.blue.shade200, borderRadius: new border_radius.BorderRadius.circular(10), border: box_border.Border.all({color: colors.Colors.blue.shade800, width: 2})}), child: new text.Text.new("Renovação aprovada!", {style: new text_style.TextStyle.new({fontSize: 16, color: colors.Colors.black, fontWeight: ui.FontWeight.bold})})}), behavior: snack_bar_theme.SnackBarBehavior.floating, backgroundColor: colors.Colors.transparent, margin: new edge_insets.EdgeInsets.symmetric({horizontal: 5, vertical: 70}), duration: new core.Duration.new({seconds: 3})});
      scaffold.ScaffoldMessenger.of(this.context).showSnackBar(snackBar);
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: colors.Colors.blue, elevation: 0, title: new text.Text.new("Empréstimos de Livros", {style: new text_style.TextStyle.new({fontSize: 20, fontWeight: ui.FontWeight.bold, color: colors.Colors.white, letterSpacing: 1.2})})}), body: new basic.Padding.new({padding: C[107] || CT.C107, child: new basic.Padding.new({padding: C[108] || CT.C108, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([C[46] || CT.C46, new text.Text.new("Aqui você pode visualizar todos os livros emprestados. Acompanhe os prazos de devolução e gerencie seus empréstimos.", {style: new text_style.TextStyle.new({fontSize: 16, color: colors.Colors.grey.shade600})}), C[14] || CT.C14, this[_isLoading] ? new basic.Center.new({child: new progress_indicator.CircularProgressIndicator.new()}) : this[_emprestimos][$isEmpty] ? new basic.Center.new({child: new text.Text.new("Você ainda não tem empréstimos.", {style: new text_style.TextStyle.new({fontSize: 18, color: new ui.Color.fromARGB(255, 51, 65, 92), fontWeight: ui.FontWeight.bold})})}) : new basic.Expanded.new({child: new scroll_view.ListView.builder({itemCount: this[_emprestimos][$length], itemBuilder: dart.fn((context, index) => {
                      let emprestimo = this[_emprestimos][$_get](index);
                      let dataAprovacao = emprestimo.dataAprovacao.toLocal().toString()[$split](" ")[$_get](0);
                      let dataDevolucao = emprestimo.dataDevolucao.toLocal().toString()[$split](" ")[$_get](0);
                      let emAtraso = new core.DateTime.now().isAfter(emprestimo.dataDevolucao);
                      return new card.Card.new({margin: C[109] || CT.C109, elevation: 6, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(20)}), color: colors.Colors.blue.shade50, child: new list_tile.ListTile.new({contentPadding: C[110] || CT.C110, leading: new container.Container.new({width: 70, height: 70, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.blue.shade200, borderRadius: new border_radius.BorderRadius.circular(10)}), alignment: alignment.Alignment.center, child: new icon$.Icon.new(icons.Icons.book, {color: colors.Colors.white, size: 45})}), title: new text.Text.new(emprestimo.livro.titulo, {style: new text_style.TextStyle.new({fontSize: 18, fontWeight: ui.FontWeight.bold, color: colors.Colors.blue.shade700})}), subtitle: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: (() => {
                              let t5 = T.JSArrayOfWidget().of([C[111] || CT.C111, new text.Text.new(emprestimo.livro.autor, {style: new text_style.TextStyle.new({color: colors.Colors.grey.shade600, fontSize: 14})}), C[111] || CT.C111, new text.Text.new("Devolução: " + dataDevolucao, {style: new text_style.TextStyle.new({color: colors.Colors.grey.shade600, fontSize: 14})})]);
                              if (emAtraso) t5.push(new basic.Padding.new({padding: C[112] || CT.C112, child: new container.Container.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: 4, horizontal: 8}), decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.red.shade400, borderRadius: new border_radius.BorderRadius.circular(10)}), child: new text.Text.new("Em atraso", {style: new text_style.TextStyle.new({fontSize: 12, color: colors.Colors.white, fontWeight: ui.FontWeight.bold, letterSpacing: 1.3})})})}));
                              return t5;
                            })()}), trailing: new icon$.Icon.new(icons.Icons.arrow_forward_ios, {size: 18, color: colors.Colors.blue.shade700}), onTap: dart.fn(() => {
                            this[_showLoanDetailsDialog](emprestimo);
                          }, T.VoidTovoid())})});
                    }, T.BuildContextAndintToCard())})})])})})})});
    }
    static ['_#new#tearOff']() {
      return new bookLoan._BookLoanScreenState.new();
    }
  };
  (bookLoan._BookLoanScreenState.new = function() {
    this[_emprestimos] = T.JSArrayOfLoanModel().of([]);
    this[_isLoading] = true;
    bookLoan._BookLoanScreenState.__proto__.new.call(this);
    ;
  }).prototype = bookLoan._BookLoanScreenState.prototype;
  dart.addTypeTests(bookLoan._BookLoanScreenState);
  dart.addTypeCaches(bookLoan._BookLoanScreenState);
  dart.setMethodSignature(bookLoan._BookLoanScreenState, () => ({
    __proto__: dart.getMethods(bookLoan._BookLoanScreenState.__proto__),
    [_loadEmprestimos]: dart.fnType(async.Future$(dart.void), []),
    [_showLoanDetailsDialog]: dart.fnType(dart.void, [loanModel.LoanModel]),
    [_showErrorSnackBar]: dart.fnType(dart.void, []),
    [_showRenewalSnackBar]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bookLoan._BookLoanScreenState, I[8]);
  dart.setFieldSignature(bookLoan._BookLoanScreenState, () => ({
    __proto__: dart.getFields(bookLoan._BookLoanScreenState.__proto__),
    [_emprestimos]: dart.fieldType(core.List$(loanModel.LoanModel)),
    [_isLoading]: dart.fieldType(core.bool)
  }));
  $32bookListScreen.BookListScreen = class BookListScreen extends framework.StatefulWidget {
    createState() {
      return new $32bookListScreen._BookListScreenState.new();
    }
    static ['_#new#tearOff']() {
      return new $32bookListScreen.BookListScreen.new();
    }
  };
  ($32bookListScreen.BookListScreen.new = function() {
    $32bookListScreen.BookListScreen.__proto__.new.call(this);
    ;
  }).prototype = $32bookListScreen.BookListScreen.prototype;
  dart.addTypeTests($32bookListScreen.BookListScreen);
  dart.addTypeCaches($32bookListScreen.BookListScreen);
  dart.setMethodSignature($32bookListScreen.BookListScreen, () => ({
    __proto__: dart.getMethods($32bookListScreen.BookListScreen.__proto__),
    createState: dart.fnType($32bookListScreen._BookListScreenState, [])
  }));
  dart.setLibraryUri($32bookListScreen.BookListScreen, I[9]);
  var _controller = dart.privateName($32bookListScreen, "_controller");
  var ___BookListScreenState_books = dart.privateName($32bookListScreen, "_#_BookListScreenState#books");
  $32bookListScreen._BookListScreenState = class _BookListScreenState extends framework.State$($32bookListScreen.BookListScreen) {
    get books() {
      let t6;
      t6 = this[___BookListScreenState_books];
      return t6 == null ? dart.throw(new _internal.LateError.fieldNI("books")) : t6;
    }
    set books(books$35param) {
      this[___BookListScreenState_books] = books$35param;
    }
    searchBooks(query) {
      this.setState(dart.fn(() => {
        this.books = new book_repository.BookRepository.new().fetchBooks(query);
      }, T.VoidTovoid()));
    }
    initState() {
      super.initState();
      this.books = T.FutureOfListOfBookModel().value(T.JSArrayOfBookModel().of([]));
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Pesquisa de Livros")}), body: new basic.Padding.new({padding: C[45] || CT.C45, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new text_field.TextField.new({controller: this[_controller], decoration: new input_decorator.InputDecoration.new({labelText: "Digite o termo de pesquisa", suffixIcon: new icon_button.IconButton.new({icon: new icon$.Icon.new(icons.Icons.search), onPressed: dart.fn(() => {
                      this.searchBooks(this[_controller].text);
                    }, T.VoidTovoid())})})}), new basic.SizedBox.new({height: 16}), new basic.Expanded.new({child: new (T.FutureBuilderOfListOfBookModel()).new({future: this.books, builder: dart.fn((context, snapshot) => {
                    if (snapshot.connectionState === async$.ConnectionState.waiting) {
                      return new basic.Center.new({child: new progress_indicator.CircularProgressIndicator.new()});
                    } else if (snapshot.hasError) {
                      return new basic.Center.new({child: new text.Text.new("Erro: " + dart.str(snapshot.error))});
                    } else if (!snapshot.hasData || dart.nullCheck(snapshot.data)[$isEmpty]) {
                      return new basic.Center.new({child: new text.Text.new("Nenhum livro encontrado.")});
                    } else {
                      let bookList = dart.nullCheck(snapshot.data);
                      return new scroll_view.ListView.builder({itemCount: bookList[$length], itemBuilder: dart.fn((context, index) => {
                          let book = bookList[$_get](index);
                          return new list_tile.ListTile.new({contentPadding: new edge_insets.EdgeInsets.symmetric({vertical: 8}), title: new text.Text.new(book.title), subtitle: new text.Text.new(book.author)});
                        }, T.BuildContextAndintToListTile())});
                    }
                  }, T.BuildContextAndAsyncSnapshotOfListOfBookModelToWidget())})})])})})});
    }
    static ['_#new#tearOff']() {
      return new $32bookListScreen._BookListScreenState.new();
    }
  };
  ($32bookListScreen._BookListScreenState.new = function() {
    this[_controller] = new editable_text.TextEditingController.new();
    this[___BookListScreenState_books] = null;
    $32bookListScreen._BookListScreenState.__proto__.new.call(this);
    ;
  }).prototype = $32bookListScreen._BookListScreenState.prototype;
  dart.addTypeTests($32bookListScreen._BookListScreenState);
  dart.addTypeCaches($32bookListScreen._BookListScreenState);
  dart.setMethodSignature($32bookListScreen._BookListScreenState, () => ({
    __proto__: dart.getMethods($32bookListScreen._BookListScreenState.__proto__),
    searchBooks: dart.fnType(dart.void, [core.String]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature($32bookListScreen._BookListScreenState, () => ({
    __proto__: dart.getGetters($32bookListScreen._BookListScreenState.__proto__),
    books: async.Future$(core.List$(bookmodel.BookModel))
  }));
  dart.setSetterSignature($32bookListScreen._BookListScreenState, () => ({
    __proto__: dart.getSetters($32bookListScreen._BookListScreenState.__proto__),
    books: async.Future$(core.List$(bookmodel.BookModel))
  }));
  dart.setLibraryUri($32bookListScreen._BookListScreenState, I[9]);
  dart.setFieldSignature($32bookListScreen._BookListScreenState, () => ({
    __proto__: dart.getFields($32bookListScreen._BookListScreenState.__proto__),
    [_controller]: dart.finalFieldType(editable_text.TextEditingController),
    [___BookListScreenState_books]: dart.fieldType(dart.nullable(async.Future$(core.List$(bookmodel.BookModel))))
  }));
  pendency.PendencyWidget = class PendencyWidget extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new pendency.PendencyWidget.new({key: key});
    }
    createState() {
      return new pendency._PendencyWidgetState.new();
    }
  };
  (pendency.PendencyWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    pendency.PendencyWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = pendency.PendencyWidget.prototype;
  dart.addTypeTests(pendency.PendencyWidget);
  dart.addTypeCaches(pendency.PendencyWidget);
  dart.setMethodSignature(pendency.PendencyWidget, () => ({
    __proto__: dart.getMethods(pendency.PendencyWidget.__proto__),
    createState: dart.fnType(framework.State$(pendency.PendencyWidget), [])
  }));
  dart.setLibraryUri(pendency.PendencyWidget, I[10]);
  var BoxDecoration_shape = dart.privateName(box_decoration, "BoxDecoration.shape");
  var BoxDecoration_backgroundBlendMode = dart.privateName(box_decoration, "BoxDecoration.backgroundBlendMode");
  var BoxDecoration_gradient = dart.privateName(box_decoration, "BoxDecoration.gradient");
  var BoxDecoration_boxShadow = dart.privateName(box_decoration, "BoxDecoration.boxShadow");
  var BoxDecoration_borderRadius = dart.privateName(box_decoration, "BoxDecoration.borderRadius");
  var BoxDecoration_border = dart.privateName(box_decoration, "BoxDecoration.border");
  var BoxDecoration_image = dart.privateName(box_decoration, "BoxDecoration.image");
  var BoxDecoration_color = dart.privateName(box_decoration, "BoxDecoration.color");
  var _showPaymentModal = dart.privateName(pendency, "_showPaymentModal");
  var BorderSide_strokeAlign = dart.privateName(borders, "BorderSide.strokeAlign");
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  var OutlinedBorder_side = dart.privateName(borders, "OutlinedBorder.side");
  var RoundedRectangleBorder_borderRadius = dart.privateName(rounded_rectangle_border, "RoundedRectangleBorder.borderRadius");
  var _generateAndShowPaymentCode = dart.privateName(pendency, "_generateAndShowPaymentCode");
  var _generateRandomCode = dart.privateName(pendency, "_generateRandomCode");
  var SnackBar_clipBehavior = dart.privateName(snack_bar, "SnackBar.clipBehavior");
  var SnackBar_dismissDirection = dart.privateName(snack_bar, "SnackBar.dismissDirection");
  var SnackBar_onVisible = dart.privateName(snack_bar, "SnackBar.onVisible");
  var SnackBar_animation = dart.privateName(snack_bar, "SnackBar.animation");
  var SnackBar_duration = dart.privateName(snack_bar, "SnackBar.duration");
  var SnackBar_closeIconColor = dart.privateName(snack_bar, "SnackBar.closeIconColor");
  var SnackBar_showCloseIcon = dart.privateName(snack_bar, "SnackBar.showCloseIcon");
  var SnackBar_action = dart.privateName(snack_bar, "SnackBar.action");
  var SnackBar_behavior = dart.privateName(snack_bar, "SnackBar.behavior");
  var SnackBar_shape = dart.privateName(snack_bar, "SnackBar.shape");
  var SnackBar_width = dart.privateName(snack_bar, "SnackBar.width");
  var SnackBar_padding = dart.privateName(snack_bar, "SnackBar.padding");
  var SnackBar_margin = dart.privateName(snack_bar, "SnackBar.margin");
  var SnackBar_elevation = dart.privateName(snack_bar, "SnackBar.elevation");
  var SnackBar_backgroundColor = dart.privateName(snack_bar, "SnackBar.backgroundColor");
  var SnackBar_content = dart.privateName(snack_bar, "SnackBar.content");
  pendency._PendencyWidgetState = class _PendencyWidgetState extends framework.State$(pendency.PendencyWidget) {
    build(context) {
      return new scaffold.Scaffold.new({backgroundColor: C[113] || CT.C113, appBar: new app_bar.AppBar.new({backgroundColor: C[114] || CT.C114, title: C[115] || CT.C115, elevation: 0}), body: new safe_area.SafeArea.new({child: new basic.Column.new({children: T.JSArrayOfWidget().of([new container.Container.new({width: 1 / 0, padding: C[117] || CT.C117, decoration: C[118] || CT.C118, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: C[122] || CT.C122})}), C[46] || CT.C46, new basic.Expanded.new({child: new scroll_view.ListView.builder({padding: C[93] || CT.C93, itemCount: this.pendencies[$length], itemBuilder: dart.fn((context, index) => {
                    let pendency = this.pendencies[$_get](index);
                    return new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
                        this[_showPaymentModal](context, pendency);
                      }, T.VoidTovoid()), child: new card.Card.new({margin: C[125] || CT.C125, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(12)}), elevation: 2, child: new basic.Padding.new({padding: C[45] || CT.C45, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([C[126] || CT.C126, new text.Text.new("R$ " + dart.str(dart.dsend(pendency[$_get]("value"), 'toStringAsFixed', [2])), {style: C[127] || CT.C127})])}), C[140] || CT.C140, new text.Text.new(core.String.as(pendency[$_get]("title")), {style: C[51] || CT.C51})])})})})});
                  }, T.BuildContextAndintToGestureDetector())})})])})})});
    }
    [_showPaymentModal](context, pendency) {
      bottom_sheet.showModalBottomSheet(dart.dynamic, {context: context, shape: C[141] || CT.C141, builder: dart.fn(context => new basic.Padding.new({padding: C[117] || CT.C117, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(core.String.as(pendency[$_get]("title")), {style: C[146] || CT.C146}), C[140] || CT.C140, new text.Text.new("Autor: " + dart.str(pendency[$_get]("author")), {style: C[51] || CT.C51}), C[46] || CT.C46, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([C[147] || CT.C147, new text.Text.new("R$ " + dart.str(dart.dsend(pendency[$_get]("value"), 'toStringAsFixed', [2])), {style: C[148] || CT.C148})])}), C[46] || CT.C46, new basic.Row.new({children: T.JSArrayOfWidget().of([new basic.Expanded.new({child: new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                        this[_generateAndShowPaymentCode](context, "PIX");
                      }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: C[114] || CT.C114, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(8)})}), child: C[149] || CT.C149})}), C[150] || CT.C150, new basic.Expanded.new({child: new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                        this[_generateAndShowPaymentCode](context, "Boleto");
                      }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: colors.Colors.grey.shade400, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(8)})}), child: C[151] || CT.C151})})])})])})}), T.BuildContextToPadding())});
    }
    [_generateAndShowPaymentCode](context, method) {
      let randomCode = this[_generateRandomCode]();
      dialog.showDialog(dart.dynamic, {context: context, builder: dart.fn(dialogContext => new dialog.AlertDialog.new({title: new text.Text.new("Código de pagamento (" + method + ")"), content: new selectable_text.SelectableText.new(randomCode), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => {
                clipboard.Clipboard.setData(new clipboard.ClipboardData.new({text: randomCode}));
                navigator.Navigator.pop(T.ObjectN(), dialogContext);
                scaffold.ScaffoldMessenger.of(context).showSnackBar(C[152] || CT.C152);
              }, T.VoidTovoid()), child: C[157] || CT.C157}), new text_button.TextButton.new({onPressed: dart.fn(() => navigator.Navigator.pop(T.ObjectN(), dialogContext), T.VoidTovoid()), child: C[158] || CT.C158})])}), T.BuildContextToAlertDialog())});
    }
    [_generateRandomCode]() {
      let random = math.Random.new();
      return T.ListOfint().generate(15, dart.fn(_ => random.nextInt(10), T.intToint()))[$join]();
    }
    static ['_#new#tearOff']() {
      return new pendency._PendencyWidgetState.new();
    }
  };
  (pendency._PendencyWidgetState.new = function() {
    this.pendencies = T.JSArrayOfMapOfString$dynamic().of([new (T.IdentityMapOfString$dynamic()).from(["title", "A Dictionary of Music and Musicians", "author", "George Grove", "value", 3]), new (T.IdentityMapOfString$dynamic()).from(["title", "A manual of the mollusca", "author", "S. P. Woodward", "value", 11])]);
    pendency._PendencyWidgetState.__proto__.new.call(this);
    ;
  }).prototype = pendency._PendencyWidgetState.prototype;
  dart.addTypeTests(pendency._PendencyWidgetState);
  dart.addTypeCaches(pendency._PendencyWidgetState);
  dart.setMethodSignature(pendency._PendencyWidgetState, () => ({
    __proto__: dart.getMethods(pendency._PendencyWidgetState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_showPaymentModal]: dart.fnType(dart.void, [framework.BuildContext, core.Map$(core.String, dart.dynamic)]),
    [_generateAndShowPaymentCode]: dart.fnType(dart.void, [framework.BuildContext, core.String]),
    [_generateRandomCode]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(pendency._PendencyWidgetState, I[10]);
  dart.setFieldSignature(pendency._PendencyWidgetState, () => ({
    __proto__: dart.getFields(pendency._PendencyWidgetState.__proto__),
    pendencies: dart.finalFieldType(core.List$(core.Map$(core.String, dart.dynamic)))
  }));
  without_pendency.WithoutPendencyWidget = class WithoutPendencyWidget extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new without_pendency.WithoutPendencyWidget.new({key: key});
    }
    createState() {
      return new without_pendency._WithoutPendencyWidgetState.new();
    }
  };
  (without_pendency.WithoutPendencyWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    without_pendency.WithoutPendencyWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = without_pendency.WithoutPendencyWidget.prototype;
  dart.addTypeTests(without_pendency.WithoutPendencyWidget);
  dart.addTypeCaches(without_pendency.WithoutPendencyWidget);
  dart.setMethodSignature(without_pendency.WithoutPendencyWidget, () => ({
    __proto__: dart.getMethods(without_pendency.WithoutPendencyWidget.__proto__),
    createState: dart.fnType(framework.State$(without_pendency.WithoutPendencyWidget), [])
  }));
  dart.setLibraryUri(without_pendency.WithoutPendencyWidget, I[11]);
  without_pendency._WithoutPendencyWidgetState = class _WithoutPendencyWidgetState extends framework.State$(without_pendency.WithoutPendencyWidget) {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[159] || CT.C159, centerTitle: false, backgroundColor: colors.Colors.blue, elevation: 2}), backgroundColor: C[113] || CT.C113, body: new safe_area.SafeArea.new({child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.max, children: T.JSArrayOfWidget().of([new basic.Align.new({alignment: alignment.Alignment.center, child: new basic.Padding.new({padding: C[161] || CT.C161, child: new basic.ClipRRect.new({borderRadius: new border_radius.BorderRadius.circular(8), child: new image.Image.asset("assets/images/no_content.jpg", {width: 200, height: 200, fit: box_fit.BoxFit.cover})})})}), new basic.Padding.new({padding: C[162] || CT.C162, child: C[163] || CT.C163}), new basic.Padding.new({padding: C[165] || CT.C165, child: C[166] || CT.C166}), new basic.Padding.new({padding: C[169] || CT.C169, child: new basic.SizedBox.new({width: 270, height: 40, child: new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                      navigator.Navigator.pushReplacement(dart.dynamic, T.ObjectN(), context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[2] || CT.C2, T.BuildContextToBottomNavigator())}));
                    }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: C[114] || CT.C114, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(8)})}), child: C[170] || CT.C170})})})])})})});
    }
    static ['_#new#tearOff']() {
      return new without_pendency._WithoutPendencyWidgetState.new();
    }
  };
  (without_pendency._WithoutPendencyWidgetState.new = function() {
    without_pendency._WithoutPendencyWidgetState.__proto__.new.call(this);
    ;
  }).prototype = without_pendency._WithoutPendencyWidgetState.prototype;
  dart.addTypeTests(without_pendency._WithoutPendencyWidgetState);
  dart.addTypeCaches(without_pendency._WithoutPendencyWidgetState);
  dart.setMethodSignature(without_pendency._WithoutPendencyWidgetState, () => ({
    __proto__: dart.getMethods(without_pendency._WithoutPendencyWidgetState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(without_pendency._WithoutPendencyWidgetState, I[11]);
  book_collection.SearchScreen = class SearchScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new book_collection.SearchScreen.new({key: key});
    }
    createState() {
      return new book_collection._SearchScreenState.new();
    }
  };
  (book_collection.SearchScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    book_collection.SearchScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = book_collection.SearchScreen.prototype;
  dart.addTypeTests(book_collection.SearchScreen);
  dart.addTypeCaches(book_collection.SearchScreen);
  dart.setMethodSignature(book_collection.SearchScreen, () => ({
    __proto__: dart.getMethods(book_collection.SearchScreen.__proto__),
    createState: dart.fnType(book_collection._SearchScreenState, [])
  }));
  dart.setLibraryUri(book_collection.SearchScreen, I[12]);
  var _searchController = dart.privateName(book_collection, "_searchController");
  var _allBooks = dart.privateName(book_collection, "_allBooks");
  var _filteredBooks = dart.privateName(book_collection, "_filteredBooks");
  var _isLoading$ = dart.privateName(book_collection, "_isLoading");
  var _noResultsFound = dart.privateName(book_collection, "_noResultsFound");
  var _loadBooks = dart.privateName(book_collection, "_loadBooks");
  var _filterBooks = dart.privateName(book_collection, "_filterBooks");
  var Align_heightFactor = dart.privateName(basic, "Align.heightFactor");
  var Align_widthFactor = dart.privateName(basic, "Align.widthFactor");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var Align_alignment = dart.privateName(basic, "Align.alignment");
  var Padding_padding = dart.privateName(basic, "Padding.padding");
  var ProgressIndicator_semanticsValue = dart.privateName(progress_indicator, "ProgressIndicator.semanticsValue");
  var ProgressIndicator_semanticsLabel = dart.privateName(progress_indicator, "ProgressIndicator.semanticsLabel");
  var ProgressIndicator_valueColor = dart.privateName(progress_indicator, "ProgressIndicator.valueColor");
  var ProgressIndicator_color = dart.privateName(progress_indicator, "ProgressIndicator.color");
  var ProgressIndicator_backgroundColor = dart.privateName(progress_indicator, "ProgressIndicator.backgroundColor");
  var ProgressIndicator_value = dart.privateName(progress_indicator, "ProgressIndicator.value");
  var CircularProgressIndicator_strokeWidth = dart.privateName(progress_indicator, "CircularProgressIndicator.strokeWidth");
  var CircularProgressIndicator__indicatorType = dart.privateName(progress_indicator, "CircularProgressIndicator._indicatorType");
  book_collection._SearchScreenState = class _SearchScreenState extends framework.State$(book_collection.SearchScreen) {
    initState() {
      super.initState();
      this[_loadBooks]();
      this[_searchController].addListener(dart.bind(this, _filterBooks));
    }
    dispose() {
      this[_searchController].dispose();
      super.dispose();
    }
    [_loadBooks]() {
      return async.async(dart.void, (function* _loadBooks() {
        try {
          let books = (yield new book_repository.BookRepository.new().fetchBooks("a"));
          let filteredBooks = books[$where](dart.fn(book => book.language[$toLowerCase]() === "pt", T.BookModelTobool()))[$toList]();
          this.setState(dart.fn(() => {
            this[_allBooks] = filteredBooks;
            this[_filteredBooks] = filteredBooks;
            this[_isLoading$] = false;
          }, T.VoidTovoid()));
        } catch (e) {
          let error = dart.getThrown(e);
          if (core.Object.is(error)) {
            this.setState(dart.fn(() => {
              this[_isLoading$] = false;
            }, T.VoidTovoid()));
            scaffold.ScaffoldMessenger.of(this.context).showSnackBar(new snack_bar.SnackBar.new({content: new text.Text.new("Erro ao carregar livros: " + dart.str(error))}));
          } else
            throw e;
        }
      }).bind(this));
    }
    [_filterBooks]() {
      let query = this[_searchController].text[$toLowerCase]();
      if (query[$isEmpty]) {
        this.setState(dart.fn(() => {
          this[_filteredBooks] = this[_allBooks];
          this[_noResultsFound] = false;
        }, T.VoidTovoid()));
      } else {
        let filtered = this[_allBooks][$where](dart.fn(book => book.title[$toLowerCase]()[$contains](query) || book.author[$toLowerCase]()[$contains](query), T.BookModelTobool()))[$toList]();
        this.setState(dart.fn(() => {
          this[_filteredBooks] = filtered;
          this[_noResultsFound] = filtered[$isEmpty];
        }, T.VoidTovoid()));
      }
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: colors.Colors.blue, title: C[172] || CT.C172}), body: new basic.Column.new({children: (() => {
            let t7 = T.JSArrayOfWidget().of([new basic.Padding.new({padding: C[45] || CT.C45, child: new text_field.TextField.new({controller: this[_searchController], decoration: new input_decorator.InputDecoration.new({hintText: "Digite o título ou autor...", prefixIcon: C[173] || CT.C173, border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(12)})})})})]);
            if (!this[_isLoading$] && !this[_noResultsFound]) t7.push(C[174] || CT.C174);
            t7.push(new basic.Expanded.new({child: this[_isLoading$] ? C[181] || CT.C181 : this[_noResultsFound] ? C[185] || CT.C185 : new scroll_view.ListView.builder({itemCount: this[_filteredBooks][$length], itemBuilder: dart.fn((context, index) => {
                  let book = this[_filteredBooks][$_get](index);
                  return new card.Card.new({margin: C[180] || CT.C180, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(12)}), elevation: 2, child: new list_tile.ListTile.new({leading: new icon$.Icon.new(icons.Icons.book, {color: colors.Colors.blue, size: 40}), title: new text.Text.new(book.title, {style: C[187] || CT.C187}), subtitle: new text.Text.new(book.author), trailing: C[188] || CT.C188, onTap: dart.fn(() => {
                        navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => new book_profile.BookProfileWidget.new({title: book.title, author: book.author, categories: book.categories, description: book.description, thumbnail: book.thumbnail, language: book.language, publisher: book.publisher, pageCount: book.pageCount, averageRating: book.averageRating}), T.BuildContextToBookProfileWidget())}));
                      }, T.VoidTovoid())})});
                }, T.BuildContextAndintToCard())})}));
            return t7;
          })()})});
    }
    static ['_#new#tearOff']() {
      return new book_collection._SearchScreenState.new();
    }
  };
  (book_collection._SearchScreenState.new = function() {
    this[_searchController] = new editable_text.TextEditingController.new();
    this[_allBooks] = T.JSArrayOfBookModel().of([]);
    this[_filteredBooks] = T.JSArrayOfBookModel().of([]);
    this[_isLoading$] = true;
    this[_noResultsFound] = false;
    book_collection._SearchScreenState.__proto__.new.call(this);
    ;
  }).prototype = book_collection._SearchScreenState.prototype;
  dart.addTypeTests(book_collection._SearchScreenState);
  dart.addTypeCaches(book_collection._SearchScreenState);
  dart.setMethodSignature(book_collection._SearchScreenState, () => ({
    __proto__: dart.getMethods(book_collection._SearchScreenState.__proto__),
    [_loadBooks]: dart.fnType(async.Future$(dart.void), []),
    [_filterBooks]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(book_collection._SearchScreenState, I[12]);
  dart.setFieldSignature(book_collection._SearchScreenState, () => ({
    __proto__: dart.getFields(book_collection._SearchScreenState.__proto__),
    [_searchController]: dart.finalFieldType(editable_text.TextEditingController),
    [_allBooks]: dart.fieldType(core.List$(bookmodel.BookModel)),
    [_filteredBooks]: dart.fieldType(core.List$(bookmodel.BookModel)),
    [_isLoading$]: dart.fieldType(core.bool),
    [_noResultsFound]: dart.fieldType(core.bool)
  }));
  client$.Client = class Client extends core.Object {
    static new() {
      let t8;
      t8 = client$.zoneClient;
      return t8 == null ? browser_client.createClient() : t8;
    }
    static ['_#new#tearOff']() {
      return client$.Client.new();
    }
  };
  (client$.Client[dart.mixinNew] = function() {
  }).prototype = client$.Client.prototype;
  dart.addTypeTests(client$.Client);
  dart.addTypeCaches(client$.Client);
  dart.setStaticMethodSignature(client$.Client, () => ['new']);
  dart.setLibraryUri(client$.Client, I[13]);
  var _clientToken = dart.privateName(client$, "_clientToken");
  client$.runWithClient = function runWithClient(R, body, clientFactory, opts) {
    let zoneSpecification = opts && 'zoneSpecification' in opts ? opts.zoneSpecification : null;
    return async.runZoned(R, body, {zoneValues: new (T.LinkedMapOfObjectN$ObjectN()).from([C[190] || CT.C190, async.Zone.current.bindCallback(client$.Client, clientFactory)]), zoneSpecification: zoneSpecification});
  };
  dart.copyProperties(client$, {
    get zoneClient() {
      let client = async.Zone.current._get(C[190] || CT.C190);
      return client == null ? null : T.VoidToClient().as(client)();
    }
  });
  var message$ = dart.privateName(exception, "ClientException.message");
  var uri$ = dart.privateName(exception, "ClientException.uri");
  exception.ClientException = class ClientException extends core.Object {
    get message() {
      return this[message$];
    }
    set message(value) {
      super.message = value;
    }
    get uri() {
      return this[uri$];
    }
    set uri(value) {
      super.uri = value;
    }
    static ['_#new#tearOff'](message, uri = null) {
      return new exception.ClientException.new(message, uri);
    }
    toString() {
      return this.message;
    }
  };
  (exception.ClientException.new = function(message, uri = null) {
    this[message$] = message;
    this[uri$] = uri;
    ;
  }).prototype = exception.ClientException.prototype;
  dart.addTypeTests(exception.ClientException);
  dart.addTypeCaches(exception.ClientException);
  exception.ClientException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(exception.ClientException, I[14]);
  dart.setFieldSignature(exception.ClientException, () => ({
    __proto__: dart.getFields(exception.ClientException.__proto__),
    message: dart.finalFieldType(core.String),
    uri: dart.finalFieldType(dart.nullable(core.Uri))
  }));
  dart.defineExtensionMethods(exception.ClientException, ['toString']);
  var _defaultEncoding = dart.privateName(request$, "_defaultEncoding");
  var _bodyBytes = dart.privateName(request$, "_bodyBytes");
  var _contentType = dart.privateName(request$, "_contentType");
  var _checkFinalized = dart.privateName(request$, "_checkFinalized");
  var method$ = dart.privateName(base_request, "BaseRequest.method");
  var url$ = dart.privateName(base_request, "BaseRequest.url");
  var headers = dart.privateName(base_request, "BaseRequest.headers");
  var _contentLength = dart.privateName(base_request, "_contentLength");
  var _persistentConnection = dart.privateName(base_request, "_persistentConnection");
  var _followRedirects = dart.privateName(base_request, "_followRedirects");
  var _maxRedirects = dart.privateName(base_request, "_maxRedirects");
  var _finalized = dart.privateName(base_request, "_finalized");
  var _checkFinalized$ = dart.privateName(base_request, "_checkFinalized");
  var StreamView__stream = dart.privateName(async, "StreamView._stream");
  base_request.BaseRequest = class BaseRequest extends core.Object {
    get method() {
      return this[method$];
    }
    set method(value) {
      super.method = value;
    }
    get url() {
      return this[url$];
    }
    set url(value) {
      super.url = value;
    }
    get headers() {
      return this[headers];
    }
    set headers(value) {
      super.headers = value;
    }
    get contentLength() {
      return this[_contentLength];
    }
    set contentLength(value) {
      if (value != null && dart.notNull(value) < 0) {
        dart.throw(new core.ArgumentError.new("Invalid content length " + dart.str(value) + "."));
      }
      this[_checkFinalized$]();
      this[_contentLength] = value;
    }
    get persistentConnection() {
      return this[_persistentConnection];
    }
    set persistentConnection(value) {
      this[_checkFinalized$]();
      this[_persistentConnection] = value;
    }
    get followRedirects() {
      return this[_followRedirects];
    }
    set followRedirects(value) {
      this[_checkFinalized$]();
      this[_followRedirects] = value;
    }
    get maxRedirects() {
      return this[_maxRedirects];
    }
    set maxRedirects(value) {
      this[_checkFinalized$]();
      this[_maxRedirects] = value;
    }
    get finalized() {
      return this[_finalized];
    }
    static _validateMethod(method) {
      if (!base_request.BaseRequest._tokenRE.hasMatch(method)) {
        dart.throw(new core.ArgumentError.value(method, "method", "Not a valid method"));
      }
      return method;
    }
    finalize() {
      if (this.finalized) dart.throw(new core.StateError.new("Can't finalize a finalized Request."));
      this[_finalized] = true;
      return C[191] || CT.C191;
    }
    send() {
      return async.async(streamed_response.StreamedResponse, (function* send() {
        let client = client$.Client.new();
        try {
          let response = (yield client.send(this));
          let stream = utils.onDone(T.ListOfint(), response.stream, dart.bind(client, 'close'));
          return new streamed_response.StreamedResponse.new(new byte_stream.ByteStream.new(stream), response.statusCode, {contentLength: response.contentLength, request: response.request, headers: response.headers, isRedirect: response.isRedirect, persistentConnection: response.persistentConnection, reasonPhrase: response.reasonPhrase});
        } catch (e) {
          let _ = dart.getThrown(e);
          if (core.Object.is(_)) {
            client.close();
            dart.rethrow(e);
          } else
            throw e;
        }
      }).bind(this));
    }
    [_checkFinalized$]() {
      if (!this.finalized) return;
      dart.throw(new core.StateError.new("Can't modify a finalized Request."));
    }
    toString() {
      return this.method + " " + dart.str(this.url);
    }
  };
  (base_request.BaseRequest.new = function(method, url) {
    this[_contentLength] = null;
    this[_persistentConnection] = true;
    this[_followRedirects] = true;
    this[_maxRedirects] = 5;
    this[_finalized] = false;
    this[url$] = url;
    this[method$] = base_request.BaseRequest._validateMethod(method);
    this[headers] = T.LinkedHashMapOfString$String().new({equals: dart.fn((key1, key2) => key1[$toLowerCase]() === key2[$toLowerCase](), T.StringAndStringTobool()), hashCode: dart.fn(key => key[$toLowerCase]()[$hashCode], T.StringToint())});
    ;
  }).prototype = base_request.BaseRequest.prototype;
  dart.addTypeTests(base_request.BaseRequest);
  dart.addTypeCaches(base_request.BaseRequest);
  dart.setMethodSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getMethods(base_request.BaseRequest.__proto__),
    finalize: dart.fnType(byte_stream.ByteStream, []),
    send: dart.fnType(async.Future$(streamed_response.StreamedResponse), []),
    [_checkFinalized$]: dart.fnType(dart.void, [])
  }));
  dart.setStaticMethodSignature(base_request.BaseRequest, () => ['_validateMethod']);
  dart.setGetterSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getGetters(base_request.BaseRequest.__proto__),
    contentLength: dart.nullable(core.int),
    persistentConnection: core.bool,
    followRedirects: core.bool,
    maxRedirects: core.int,
    finalized: core.bool
  }));
  dart.setSetterSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getSetters(base_request.BaseRequest.__proto__),
    contentLength: dart.nullable(core.int),
    persistentConnection: core.bool,
    followRedirects: core.bool,
    maxRedirects: core.int
  }));
  dart.setLibraryUri(base_request.BaseRequest, I[15]);
  dart.setFieldSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getFields(base_request.BaseRequest.__proto__),
    method: dart.finalFieldType(core.String),
    url: dart.finalFieldType(core.Uri),
    [_contentLength]: dart.fieldType(dart.nullable(core.int)),
    [_persistentConnection]: dart.fieldType(core.bool),
    [_followRedirects]: dart.fieldType(core.bool),
    [_maxRedirects]: dart.fieldType(core.int),
    headers: dart.finalFieldType(core.Map$(core.String, core.String)),
    [_finalized]: dart.fieldType(core.bool)
  }));
  dart.setStaticFieldSignature(base_request.BaseRequest, () => ['_tokenRE']);
  dart.defineExtensionMethods(base_request.BaseRequest, ['toString']);
  dart.defineLazy(base_request.BaseRequest, {
    /*base_request.BaseRequest._tokenRE*/get _tokenRE() {
      return core.RegExp.new("^[\\w!#%&'*+\\-.^`|~]+$");
    }
  }, false);
  request$.Request = class Request extends base_request.BaseRequest {
    get contentLength() {
      return this.bodyBytes[$length];
    }
    set contentLength(value) {
      dart.throw(new core.UnsupportedError.new("Cannot set the contentLength property of " + "non-streaming Request objects."));
    }
    get encoding() {
      if (this[_contentType] == null || !dart.nullCheck(this[_contentType]).parameters[$containsKey]("charset")) {
        return this[_defaultEncoding];
      }
      return utils.requiredEncodingForCharset(dart.nullCheck(dart.nullCheck(this[_contentType]).parameters[$_get]("charset")));
    }
    set encoding(value) {
      this[_checkFinalized]();
      this[_defaultEncoding] = value;
      let contentType = this[_contentType];
      if (contentType == null) return;
      this[_contentType] = contentType.change({parameters: new (T.IdentityMapOfString$String()).from(["charset", value.name])});
    }
    get bodyBytes() {
      return this[_bodyBytes];
    }
    set bodyBytes(value) {
      this[_checkFinalized]();
      this[_bodyBytes] = utils.toUint8List(value);
    }
    get body() {
      return this.encoding.decode(this.bodyBytes);
    }
    set body(value) {
      this.bodyBytes = this.encoding.encode(value);
      let contentType = this[_contentType];
      if (contentType == null) {
        this[_contentType] = new media_type.MediaType.new("text", "plain", new (T.IdentityMapOfString$String()).from(["charset", this.encoding.name]));
      } else if (!contentType.parameters[$containsKey]("charset")) {
        this[_contentType] = contentType.change({parameters: new (T.IdentityMapOfString$String()).from(["charset", this.encoding.name])});
      }
    }
    get bodyFields() {
      let contentType = this[_contentType];
      if (contentType == null || contentType.mimeType !== "application/x-www-form-urlencoded") {
        dart.throw(new core.StateError.new("Cannot access the body fields of a Request without " + "content-type \"application/x-www-form-urlencoded\"."));
      }
      return core.Uri.splitQueryString(this.body, {encoding: this.encoding});
    }
    set bodyFields(fields) {
      let contentType = this[_contentType];
      if (contentType == null) {
        this[_contentType] = new media_type.MediaType.new("application", "x-www-form-urlencoded");
      } else if (contentType.mimeType !== "application/x-www-form-urlencoded") {
        dart.throw(new core.StateError.new("Cannot set the body fields of a Request with " + "content-type \"" + contentType.mimeType + "\"."));
      }
      this.body = utils.mapToQuery(fields, {encoding: this.encoding});
    }
    static ['_#new#tearOff'](method, url) {
      return new request$.Request.new(method, url);
    }
    finalize() {
      super.finalize();
      return byte_stream.ByteStream.fromBytes(this.bodyBytes);
    }
    get [_contentType]() {
      let contentType = this.headers[$_get]("content-type");
      if (contentType == null) return null;
      return media_type.MediaType.parse(contentType);
    }
    set [_contentType](value) {
      if (value == null) {
        this.headers[$remove]("content-type");
      } else {
        this.headers[$_set]("content-type", dart.toString(value));
      }
    }
    [_checkFinalized]() {
      if (!this.finalized) return;
      dart.throw(new core.StateError.new("Can't modify a finalized Request."));
    }
  };
  (request$.Request.new = function(method, url) {
    this[_defaultEncoding] = convert.utf8;
    this[_bodyBytes] = _native_typed_data.NativeUint8List.new(0);
    request$.Request.__proto__.new.call(this, method, url);
    ;
  }).prototype = request$.Request.prototype;
  dart.addTypeTests(request$.Request);
  dart.addTypeCaches(request$.Request);
  dart.setMethodSignature(request$.Request, () => ({
    __proto__: dart.getMethods(request$.Request.__proto__),
    [_checkFinalized]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(request$.Request, () => ({
    __proto__: dart.getGetters(request$.Request.__proto__),
    contentLength: core.int,
    encoding: convert.Encoding,
    bodyBytes: typed_data.Uint8List,
    body: core.String,
    bodyFields: core.Map$(core.String, core.String),
    [_contentType]: dart.nullable(media_type.MediaType)
  }));
  dart.setSetterSignature(request$.Request, () => ({
    __proto__: dart.getSetters(request$.Request.__proto__),
    encoding: convert.Encoding,
    bodyBytes: core.List$(core.int),
    body: core.String,
    bodyFields: core.Map$(core.String, core.String),
    [_contentType]: dart.nullable(media_type.MediaType)
  }));
  dart.setLibraryUri(request$.Request, I[16]);
  dart.setFieldSignature(request$.Request, () => ({
    __proto__: dart.getFields(request$.Request.__proto__),
    [_defaultEncoding]: dart.fieldType(convert.Encoding),
    [_bodyBytes]: dart.fieldType(typed_data.Uint8List)
  }));
  var bodyBytes$ = dart.privateName(response$, "Response.bodyBytes");
  var request$0 = dart.privateName(base_response, "BaseResponse.request");
  var statusCode$ = dart.privateName(base_response, "BaseResponse.statusCode");
  var reasonPhrase$ = dart.privateName(base_response, "BaseResponse.reasonPhrase");
  var contentLength$ = dart.privateName(base_response, "BaseResponse.contentLength");
  var headers$ = dart.privateName(base_response, "BaseResponse.headers");
  var isRedirect$ = dart.privateName(base_response, "BaseResponse.isRedirect");
  var persistentConnection$ = dart.privateName(base_response, "BaseResponse.persistentConnection");
  base_response.BaseResponse = class BaseResponse extends core.Object {
    get request() {
      return this[request$0];
    }
    set request(value) {
      super.request = value;
    }
    get statusCode() {
      return this[statusCode$];
    }
    set statusCode(value) {
      super.statusCode = value;
    }
    get reasonPhrase() {
      return this[reasonPhrase$];
    }
    set reasonPhrase(value) {
      super.reasonPhrase = value;
    }
    get contentLength() {
      return this[contentLength$];
    }
    set contentLength(value) {
      super.contentLength = value;
    }
    get headers() {
      return this[headers$];
    }
    set headers(value) {
      super.headers = value;
    }
    get isRedirect() {
      return this[isRedirect$];
    }
    set isRedirect(value) {
      super.isRedirect = value;
    }
    get persistentConnection() {
      return this[persistentConnection$];
    }
    set persistentConnection(value) {
      super.persistentConnection = value;
    }
  };
  (base_response.BaseResponse.new = function(statusCode, opts) {
    let contentLength = opts && 'contentLength' in opts ? opts.contentLength : null;
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[193] || CT.C193;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    this[statusCode$] = statusCode;
    this[contentLength$] = contentLength;
    this[request$0] = request;
    this[headers$] = headers;
    this[isRedirect$] = isRedirect;
    this[persistentConnection$] = persistentConnection;
    this[reasonPhrase$] = reasonPhrase;
    if (this.statusCode < 100) {
      dart.throw(new core.ArgumentError.new("Invalid status code " + dart.str(this.statusCode) + "."));
    } else if (this.contentLength != null && dart.nullCheck(this.contentLength) < 0) {
      dart.throw(new core.ArgumentError.new("Invalid content length " + dart.str(this.contentLength) + "."));
    }
  }).prototype = base_response.BaseResponse.prototype;
  dart.addTypeTests(base_response.BaseResponse);
  dart.addTypeCaches(base_response.BaseResponse);
  dart.setLibraryUri(base_response.BaseResponse, I[17]);
  dart.setFieldSignature(base_response.BaseResponse, () => ({
    __proto__: dart.getFields(base_response.BaseResponse.__proto__),
    request: dart.finalFieldType(dart.nullable(base_request.BaseRequest)),
    statusCode: dart.finalFieldType(core.int),
    reasonPhrase: dart.finalFieldType(dart.nullable(core.String)),
    contentLength: dart.finalFieldType(dart.nullable(core.int)),
    headers: dart.finalFieldType(core.Map$(core.String, core.String)),
    isRedirect: dart.finalFieldType(core.bool),
    persistentConnection: dart.finalFieldType(core.bool)
  }));
  response$.Response = class Response extends base_response.BaseResponse {
    get bodyBytes() {
      return this[bodyBytes$];
    }
    set bodyBytes(value) {
      super.bodyBytes = value;
    }
    get body() {
      return response$._encodingForHeaders(this.headers).decode(this.bodyBytes);
    }
    static ['_#new#tearOff'](body, statusCode, opts) {
      let request = opts && 'request' in opts ? opts.request : null;
      let headers = opts && 'headers' in opts ? opts.headers : C[193] || CT.C193;
      let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
      let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
      let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
      return new response$.Response.new(body, statusCode, {request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    }
    static ['_#bytes#tearOff'](bodyBytes, statusCode, opts) {
      let request = opts && 'request' in opts ? opts.request : null;
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : null;
      let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : null;
      let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
      return new response$.Response.bytes(bodyBytes, statusCode, {request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    }
    static fromStream(response) {
      return async.async(response$.Response, function* fromStream() {
        let body = (yield response.stream.toBytes());
        return new response$.Response.bytes(body, response.statusCode, {request: response.request, headers: response.headers, isRedirect: response.isRedirect, persistentConnection: response.persistentConnection, reasonPhrase: response.reasonPhrase});
      });
    }
  };
  (response$.Response.new = function(body, statusCode, opts) {
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[193] || CT.C193;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    response$.Response.bytes.call(this, response$._encodingForHeaders(headers).encode(body), statusCode, {request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
  }).prototype = response$.Response.prototype;
  (response$.Response.bytes = function(bodyBytes, statusCode, opts) {
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[193] || CT.C193;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    this[bodyBytes$] = utils.toUint8List(bodyBytes);
    response$.Response.__proto__.new.call(this, statusCode, {contentLength: bodyBytes[$length], request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    ;
  }).prototype = response$.Response.prototype;
  dart.addTypeTests(response$.Response);
  dart.addTypeCaches(response$.Response);
  dart.setStaticMethodSignature(response$.Response, () => ['fromStream']);
  dart.setGetterSignature(response$.Response, () => ({
    __proto__: dart.getGetters(response$.Response.__proto__),
    body: core.String
  }));
  dart.setLibraryUri(response$.Response, I[18]);
  dart.setFieldSignature(response$.Response, () => ({
    __proto__: dart.getFields(response$.Response.__proto__),
    bodyBytes: dart.finalFieldType(typed_data.Uint8List)
  }));
  response$._encodingForHeaders = function _encodingForHeaders(headers) {
    return utils.encodingForCharset(response$._contentTypeForHeaders(headers).parameters[$_get]("charset"));
  };
  response$._contentTypeForHeaders = function _contentTypeForHeaders(headers) {
    let contentType = headers[$_get]("content-type");
    if (contentType != null) return media_type.MediaType.parse(contentType);
    return new media_type.MediaType.new("application", "octet-stream");
  };
  var _controller$ = dart.privateName(streamed_request, "_controller");
  streamed_request.StreamedRequest = class StreamedRequest extends base_request.BaseRequest {
    get sink() {
      return this[_controller$].sink;
    }
    static ['_#new#tearOff'](method, url) {
      return new streamed_request.StreamedRequest.new(method, url);
    }
    finalize() {
      super.finalize();
      return new byte_stream.ByteStream.new(this[_controller$].stream);
    }
  };
  (streamed_request.StreamedRequest.new = function(method, url) {
    this[_controller$] = T.StreamControllerOfListOfint().new({sync: true});
    streamed_request.StreamedRequest.__proto__.new.call(this, method, url);
    ;
  }).prototype = streamed_request.StreamedRequest.prototype;
  dart.addTypeTests(streamed_request.StreamedRequest);
  dart.addTypeCaches(streamed_request.StreamedRequest);
  dart.setGetterSignature(streamed_request.StreamedRequest, () => ({
    __proto__: dart.getGetters(streamed_request.StreamedRequest.__proto__),
    sink: async.EventSink$(core.List$(core.int))
  }));
  dart.setLibraryUri(streamed_request.StreamedRequest, I[19]);
  dart.setFieldSignature(streamed_request.StreamedRequest, () => ({
    __proto__: dart.getFields(streamed_request.StreamedRequest.__proto__),
    [_controller$]: dart.finalFieldType(async.StreamController$(core.List$(core.int)))
  }));
  var _sendUnstreamed = dart.privateName(base_client, "_sendUnstreamed");
  var _checkResponseSuccess = dart.privateName(base_client, "_checkResponseSuccess");
  base_client.BaseClient = class BaseClient extends core.Object {
    head(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return this[_sendUnstreamed]("HEAD", url, headers);
    }
    get(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return this[_sendUnstreamed]("GET", url, headers);
    }
    post(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[_sendUnstreamed]("POST", url, headers, body, encoding);
    }
    put(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[_sendUnstreamed]("PUT", url, headers, body, encoding);
    }
    patch(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[_sendUnstreamed]("PATCH", url, headers, body, encoding);
    }
    delete(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[_sendUnstreamed]("DELETE", url, headers, body, encoding);
    }
    read(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return async.async(core.String, (function* read() {
        let response = (yield this.get(url, {headers: headers}));
        this[_checkResponseSuccess](url, response);
        return response.body;
      }).bind(this));
    }
    readBytes(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return async.async(typed_data.Uint8List, (function* readBytes() {
        let response = (yield this.get(url, {headers: headers}));
        this[_checkResponseSuccess](url, response);
        return response.bodyBytes;
      }).bind(this));
    }
    [_sendUnstreamed](method, url, headers, body = null, encoding = null) {
      return async.async(response$.Response, (function* _sendUnstreamed() {
        let request = new request$.Request.new(method, url);
        if (headers != null) request.headers[$addAll](headers);
        if (encoding != null) request.encoding = encoding;
        if (body != null) {
          if (typeof body == 'string') {
            request.body = body;
          } else if (core.List.is(body)) {
            request.bodyBytes = body[$cast](core.int);
          } else if (core.Map.is(body)) {
            request.bodyFields = body[$cast](core.String, core.String);
          } else {
            dart.throw(new core.ArgumentError.new("Invalid request body \"" + dart.str(body) + "\"."));
          }
        }
        return response$.Response.fromStream(yield this.send(request));
      }).bind(this));
    }
    [_checkResponseSuccess](url, response) {
      if (response.statusCode < 400) return;
      let message = "Request to " + dart.str(url) + " failed with status " + dart.str(response.statusCode);
      if (response.reasonPhrase != null) {
        message = message + ": " + dart.str(response.reasonPhrase);
      }
      dart.throw(new exception.ClientException.new(message + ".", url));
    }
    close() {
    }
  };
  (base_client.BaseClient.new = function() {
    ;
  }).prototype = base_client.BaseClient.prototype;
  dart.addTypeTests(base_client.BaseClient);
  dart.addTypeCaches(base_client.BaseClient);
  base_client.BaseClient[dart.implements] = () => [client$.Client];
  dart.setMethodSignature(base_client.BaseClient, () => ({
    __proto__: dart.getMethods(base_client.BaseClient.__proto__),
    head: dart.fnType(async.Future$(response$.Response), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    get: dart.fnType(async.Future$(response$.Response), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    post: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    put: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    patch: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    delete: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    read: dart.fnType(async.Future$(core.String), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    readBytes: dart.fnType(async.Future$(typed_data.Uint8List), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    [_sendUnstreamed]: dart.fnType(async.Future$(response$.Response), [core.String, core.Uri, dart.nullable(core.Map$(core.String, core.String))], [dart.nullable(core.Object), dart.nullable(convert.Encoding)]),
    [_checkResponseSuccess]: dart.fnType(dart.void, [core.Uri, response$.Response]),
    close: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(base_client.BaseClient, I[20]);
  var Utf8Codec__allowMalformed = dart.privateName(convert, "Utf8Codec._allowMalformed");
  byte_stream.ByteStream = class ByteStream extends async.StreamView$(core.List$(core.int)) {
    static ['_#new#tearOff'](stream) {
      return new byte_stream.ByteStream.new(stream);
    }
    static fromBytes(bytes) {
      return new byte_stream.ByteStream.new(T.StreamOfListOfint().value(bytes));
    }
    static ['_#fromBytes#tearOff'](bytes) {
      return byte_stream.ByteStream.fromBytes(bytes);
    }
    toBytes() {
      let completer = T.CompleterOfUint8List().new();
      let sink = new convert._ByteCallbackSink.new(dart.fn(bytes => completer.complete(_native_typed_data.NativeUint8List.fromList(bytes)), T.ListOfintTovoid()));
      this.listen(T.ListOfintTovoid().as(dart.bind(sink, 'add')), {onError: dart.bind(completer, 'completeError'), onDone: dart.bind(sink, 'close'), cancelOnError: true});
      return completer.future;
    }
    bytesToString(encoding = C[194] || CT.C194) {
      return encoding.decodeStream(this);
    }
    toStringStream(encoding = C[194] || CT.C194) {
      return encoding.decoder.bind(this);
    }
  };
  (byte_stream.ByteStream.new = function(stream) {
    byte_stream.ByteStream.__proto__.new.call(this, stream);
    ;
  }).prototype = byte_stream.ByteStream.prototype;
  dart.addTypeTests(byte_stream.ByteStream);
  dart.addTypeCaches(byte_stream.ByteStream);
  dart.setMethodSignature(byte_stream.ByteStream, () => ({
    __proto__: dart.getMethods(byte_stream.ByteStream.__proto__),
    toBytes: dart.fnType(async.Future$(typed_data.Uint8List), []),
    bytesToString: dart.fnType(async.Future$(core.String), [], [convert.Encoding]),
    toStringStream: dart.fnType(async.Stream$(core.String), [], [convert.Encoding])
  }));
  dart.setStaticMethodSignature(byte_stream.ByteStream, () => ['fromBytes']);
  dart.setLibraryUri(byte_stream.ByteStream, I[21]);
  var field$ = dart.privateName(multipart_file, "MultipartFile.field");
  var length$ = dart.privateName(multipart_file, "MultipartFile.length");
  var filename$ = dart.privateName(multipart_file, "MultipartFile.filename");
  var contentType$ = dart.privateName(multipart_file, "MultipartFile.contentType");
  var _isFinalized = dart.privateName(multipart_file, "_isFinalized");
  var _stream = dart.privateName(multipart_file, "_stream");
  multipart_file.MultipartFile = class MultipartFile extends core.Object {
    get field() {
      return this[field$];
    }
    set field(value) {
      super.field = value;
    }
    get length() {
      return this[length$];
    }
    set length(value) {
      super.length = value;
    }
    get filename() {
      return this[filename$];
    }
    set filename(value) {
      super.filename = value;
    }
    get contentType() {
      return this[contentType$];
    }
    set contentType(value) {
      super.contentType = value;
    }
    get isFinalized() {
      return this[_isFinalized];
    }
    static ['_#new#tearOff'](field, stream, length, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return new multipart_file.MultipartFile.new(field, stream, length, {filename: filename, contentType: contentType});
    }
    static fromBytes(field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let stream = byte_stream.ByteStream.fromBytes(value);
      return new multipart_file.MultipartFile.new(field, stream, value[$length], {filename: filename, contentType: contentType});
    }
    static ['_#fromBytes#tearOff'](field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return multipart_file.MultipartFile.fromBytes(field, value, {filename: filename, contentType: contentType});
    }
    static fromString(field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      contentType == null ? contentType = new media_type.MediaType.new("text", "plain") : null;
      let encoding = utils.encodingForCharset(contentType.parameters[$_get]("charset"), convert.utf8);
      contentType = contentType.change({parameters: new (T.IdentityMapOfString$String()).from(["charset", encoding.name])});
      return multipart_file.MultipartFile.fromBytes(field, encoding.encode(value), {filename: filename, contentType: contentType});
    }
    static ['_#fromString#tearOff'](field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return multipart_file.MultipartFile.fromString(field, value, {filename: filename, contentType: contentType});
    }
    static fromPath(field, filePath, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return multipart_file_stub.multipartFileFromPath(field, filePath, {filename: filename, contentType: contentType});
    }
    finalize() {
      if (this.isFinalized) {
        dart.throw(new core.StateError.new("Can't finalize a finalized MultipartFile."));
      }
      this[_isFinalized] = true;
      return this[_stream];
    }
  };
  (multipart_file.MultipartFile.new = function(field, stream, length, opts) {
    let t9;
    let filename = opts && 'filename' in opts ? opts.filename : null;
    let contentType = opts && 'contentType' in opts ? opts.contentType : null;
    this[_isFinalized] = false;
    this[field$] = field;
    this[length$] = length;
    this[filename$] = filename;
    this[_stream] = utils.toByteStream(stream);
    this[contentType$] = (t9 = contentType, t9 == null ? new media_type.MediaType.new("application", "octet-stream") : t9);
    ;
  }).prototype = multipart_file.MultipartFile.prototype;
  dart.addTypeTests(multipart_file.MultipartFile);
  dart.addTypeCaches(multipart_file.MultipartFile);
  dart.setMethodSignature(multipart_file.MultipartFile, () => ({
    __proto__: dart.getMethods(multipart_file.MultipartFile.__proto__),
    finalize: dart.fnType(byte_stream.ByteStream, [])
  }));
  dart.setStaticMethodSignature(multipart_file.MultipartFile, () => ['fromBytes', 'fromString', 'fromPath']);
  dart.setGetterSignature(multipart_file.MultipartFile, () => ({
    __proto__: dart.getGetters(multipart_file.MultipartFile.__proto__),
    isFinalized: core.bool
  }));
  dart.setLibraryUri(multipart_file.MultipartFile, I[22]);
  dart.setFieldSignature(multipart_file.MultipartFile, () => ({
    __proto__: dart.getFields(multipart_file.MultipartFile.__proto__),
    field: dart.finalFieldType(core.String),
    length: dart.finalFieldType(core.int),
    filename: dart.finalFieldType(dart.nullable(core.String)),
    contentType: dart.finalFieldType(media_type.MediaType),
    [_stream]: dart.finalFieldType(byte_stream.ByteStream),
    [_isFinalized]: dart.fieldType(core.bool)
  }));
  var fields = dart.privateName(multipart_request, "MultipartRequest.fields");
  var files = dart.privateName(multipart_request, "MultipartRequest.files");
  var _headerForField = dart.privateName(multipart_request, "_headerForField");
  var _headerForFile = dart.privateName(multipart_request, "_headerForFile");
  var _boundaryString = dart.privateName(multipart_request, "_boundaryString");
  var _finalize = dart.privateName(multipart_request, "_finalize");
  var _browserEncode = dart.privateName(multipart_request, "_browserEncode");
  multipart_request.MultipartRequest = class MultipartRequest extends base_request.BaseRequest {
    get fields() {
      return this[fields];
    }
    set fields(value) {
      super.fields = value;
    }
    get files() {
      return this[files];
    }
    set files(value) {
      super.files = value;
    }
    static ['_#new#tearOff'](method, url) {
      return new multipart_request.MultipartRequest.new(method, url);
    }
    get contentLength() {
      let length = 0;
      this.fields[$forEach](dart.fn((name, value) => {
        length = length + ("--".length + 70 + "\r\n".length + convert.utf8.encode(this[_headerForField](name, value))[$length] + convert.utf8.encode(value)[$length] + "\r\n".length);
      }, T.StringAndStringTovoid()));
      for (let file of this.files) {
        length = length + ("--".length + 70 + "\r\n".length + convert.utf8.encode(this[_headerForFile](file))[$length] + file.length + "\r\n".length);
      }
      return length + "--".length + 70 + "--\r\n".length;
    }
    set contentLength(value) {
      dart.throw(new core.UnsupportedError.new("Cannot set the contentLength property of " + "multipart requests."));
    }
    finalize() {
      let boundary = this[_boundaryString]();
      this.headers[$_set]("content-type", "multipart/form-data; boundary=" + boundary);
      super.finalize();
      return new byte_stream.ByteStream.new(this[_finalize](boundary));
    }
    [_finalize](boundary) {
      return new (T._AsyncStarImplOfListOfint()).new((function* _finalize(stream) {
        let line = C[195] || CT.C195;
        let separator = convert.utf8.encode("--" + boundary + "\r\n");
        let close = convert.utf8.encode("--" + boundary + "--\r\n");
        for (let field of this.fields[$entries]) {
          if (stream.add(separator)) return;
          yield;
          if (stream.add(convert.utf8.encode(this[_headerForField](field.key, field.value)))) return;
          yield;
          if (stream.add(convert.utf8.encode(field.value))) return;
          yield;
          if (stream.add(line)) return;
          yield;
        }
        for (let file of this.files) {
          if (stream.add(separator)) return;
          yield;
          if (stream.add(convert.utf8.encode(this[_headerForFile](file)))) return;
          yield;
          if (stream.addStream(file.finalize())) return;
          yield;
          if (stream.add(line)) return;
          yield;
        }
        if (stream.add(close)) return;
        yield;
      }).bind(this)).stream;
    }
    [_headerForField](name, value) {
      let header = "content-disposition: form-data; name=\"" + this[_browserEncode](name) + "\"";
      if (!utils.isPlainAscii(value)) {
        header = header + "\r\n" + "content-type: text/plain; charset=utf-8\r\n" + "content-transfer-encoding: binary";
      }
      return header + "\r\n\r\n";
    }
    [_headerForFile](file) {
      let header = "content-type: " + dart.str(file.contentType) + "\r\n" + "content-disposition: form-data; name=\"" + this[_browserEncode](file.field) + "\"";
      if (file.filename != null) {
        header = header + "; filename=\"" + this[_browserEncode](dart.nullCheck(file.filename)) + "\"";
      }
      return header + "\r\n\r\n";
    }
    [_browserEncode](value) {
      return value[$replaceAll](multipart_request._newlineRegExp, "%0D%0A")[$replaceAll]("\"", "%22");
    }
    [_boundaryString]() {
      let prefix = "dart-http-boundary-";
      let list = T.ListOfint().generate(70 - prefix.length, dart.fn(index => boundary_characters.boundaryCharacters[$_get](multipart_request.MultipartRequest._random.nextInt(boundary_characters.boundaryCharacters[$length])), T.intToint()), {growable: false});
      return prefix + core.String.fromCharCodes(list);
    }
  };
  (multipart_request.MultipartRequest.new = function(method, url) {
    this[fields] = new (T.IdentityMapOfString$String()).new();
    this[files] = T.JSArrayOfMultipartFile().of([]);
    multipart_request.MultipartRequest.__proto__.new.call(this, method, url);
    ;
  }).prototype = multipart_request.MultipartRequest.prototype;
  dart.addTypeTests(multipart_request.MultipartRequest);
  dart.addTypeCaches(multipart_request.MultipartRequest);
  dart.setMethodSignature(multipart_request.MultipartRequest, () => ({
    __proto__: dart.getMethods(multipart_request.MultipartRequest.__proto__),
    [_finalize]: dart.fnType(async.Stream$(core.List$(core.int)), [core.String]),
    [_headerForField]: dart.fnType(core.String, [core.String, core.String]),
    [_headerForFile]: dart.fnType(core.String, [multipart_file.MultipartFile]),
    [_browserEncode]: dart.fnType(core.String, [core.String]),
    [_boundaryString]: dart.fnType(core.String, [])
  }));
  dart.setGetterSignature(multipart_request.MultipartRequest, () => ({
    __proto__: dart.getGetters(multipart_request.MultipartRequest.__proto__),
    contentLength: core.int
  }));
  dart.setLibraryUri(multipart_request.MultipartRequest, I[23]);
  dart.setFieldSignature(multipart_request.MultipartRequest, () => ({
    __proto__: dart.getFields(multipart_request.MultipartRequest.__proto__),
    fields: dart.finalFieldType(core.Map$(core.String, core.String)),
    files: dart.finalFieldType(core.List$(multipart_file.MultipartFile))
  }));
  dart.setStaticFieldSignature(multipart_request.MultipartRequest, () => ['_boundaryLength', '_random']);
  dart.defineLazy(multipart_request.MultipartRequest, {
    /*multipart_request.MultipartRequest._boundaryLength*/get _boundaryLength() {
      return 70;
    },
    /*multipart_request.MultipartRequest._random*/get _random() {
      return math.Random.new();
    }
  }, false);
  dart.defineLazy(multipart_request, {
    /*multipart_request._newlineRegExp*/get _newlineRegExp() {
      return core.RegExp.new("\\r\\n|\\r|\\n");
    }
  }, false);
  var stream$ = dart.privateName(streamed_response, "StreamedResponse.stream");
  streamed_response.StreamedResponse = class StreamedResponse extends base_response.BaseResponse {
    get stream() {
      return this[stream$];
    }
    set stream(value) {
      super.stream = value;
    }
    static ['_#new#tearOff'](stream, statusCode, opts) {
      let contentLength = opts && 'contentLength' in opts ? opts.contentLength : null;
      let request = opts && 'request' in opts ? opts.request : null;
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : null;
      let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : null;
      let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
      return new streamed_response.StreamedResponse.new(stream, statusCode, {contentLength: contentLength, request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    }
  };
  (streamed_response.StreamedResponse.new = function(stream, statusCode, opts) {
    let contentLength = opts && 'contentLength' in opts ? opts.contentLength : null;
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[193] || CT.C193;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    this[stream$] = utils.toByteStream(stream);
    streamed_response.StreamedResponse.__proto__.new.call(this, statusCode, {contentLength: contentLength, request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    ;
  }).prototype = streamed_response.StreamedResponse.prototype;
  dart.addTypeTests(streamed_response.StreamedResponse);
  dart.addTypeCaches(streamed_response.StreamedResponse);
  dart.setLibraryUri(streamed_response.StreamedResponse, I[24]);
  dart.setFieldSignature(streamed_response.StreamedResponse, () => ({
    __proto__: dart.getFields(streamed_response.StreamedResponse.__proto__),
    stream: dart.finalFieldType(byte_stream.ByteStream)
  }));
  var Spacer_flex = dart.privateName(spacer, "Spacer.flex");
  user.UserScreen = class UserScreen extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new user.UserScreen.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: C[36] || CT.C36, title: C[196] || CT.C196, leading: new icon_button.IconButton.new({icon: C[197] || CT.C197, onPressed: dart.fn(() => {
              navigator.Navigator.pop(T.ObjectN(), context);
            }, T.VoidTovoid())}), elevation: 0}), body: new basic.Stack.new({children: T.JSArrayOfWidget().of([new basic.Positioned.fill({child: new basic.CustomPaint.new({painter: new user.WavePainter.new()})}), new basic.Padding.new({padding: C[45] || CT.C45, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([C[46] || CT.C46, new user.InfoCard.new({title: "Empréstimos Ativos", value: "x livros"}), C[198] || CT.C198, new user.InfoCard.new({title: "Histórico de Empréstimos", value: "x livros"}), C[198] || CT.C198, new user.InfoCard.new({title: "Total de Livros Emprestados", value: "x livros"}), C[199] || CT.C199])})}), new basic.Align.new({alignment: alignment.Alignment.bottomCenter, child: new basic.Padding.new({padding: C[200] || CT.C200, child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                        navigator.Navigator.pushAndRemoveUntil(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[44] || CT.C44, T.BuildContextToLoginScreen())}), dart.fn(route => false, T.RouteTobool()));
                      }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({primary: colors.Colors.blue, onPrimary: colors.Colors.white, padding: C[201] || CT.C201, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(30)}), shadowColor: colors.Colors.blue.withOpacity(0.5), elevation: 15, side: new borders.BorderSide.new({color: colors.Colors.white, width: 2})}), child: C[202] || CT.C202})])})})})])})});
    }
  };
  (user.UserScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    user.UserScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = user.UserScreen.prototype;
  dart.addTypeTests(user.UserScreen);
  dart.addTypeCaches(user.UserScreen);
  dart.setMethodSignature(user.UserScreen, () => ({
    __proto__: dart.getMethods(user.UserScreen.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(user.UserScreen, I[25]);
  var title$ = dart.privateName(user, "InfoCard.title");
  var value$ = dart.privateName(user, "InfoCard.value");
  user.InfoCard = class InfoCard extends framework.StatelessWidget {
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    get value() {
      return this[value$];
    }
    set value(value) {
      super.value = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let value = opts && 'value' in opts ? opts.value : null;
      return new user.InfoCard.new({key: key, title: title, value: value});
    }
    build(context) {
      return new container.Container.new({padding: C[45] || CT.C45, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white, borderRadius: new border_radius.BorderRadius.circular(15), boxShadow: T.JSArrayOfBoxShadow().of([new box_shadow.BoxShadow.new({color: colors.Colors.grey.withOpacity(0.1), blurRadius: 5, spreadRadius: 2})])}), child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new text.Text.new(this.title, {style: C[105] || CT.C105}), new text.Text.new(this.value, {style: C[204] || CT.C204})])})});
    }
  };
  (user.InfoCard.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let value = opts && 'value' in opts ? opts.value : null;
    this[title$] = title;
    this[value$] = value;
    user.InfoCard.__proto__.new.call(this, {key: key});
    ;
  }).prototype = user.InfoCard.prototype;
  dart.addTypeTests(user.InfoCard);
  dart.addTypeCaches(user.InfoCard);
  dart.setMethodSignature(user.InfoCard, () => ({
    __proto__: dart.getMethods(user.InfoCard.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(user.InfoCard, I[25]);
  dart.setFieldSignature(user.InfoCard, () => ({
    __proto__: dart.getFields(user.InfoCard.__proto__),
    title: dart.finalFieldType(core.String),
    value: dart.finalFieldType(core.String)
  }));
  user.WavePainter = class WavePainter extends custom_paint.CustomPainter {
    paint(canvas, size) {
      let t9, t9$;
      let paint = (t9 = ui.Paint.new(), (() => {
        t9.color = C[36] || CT.C36;
        t9.style = ui.PaintingStyle.fill;
        return t9;
      })());
      let path = (t9$ = ui.Path.new(), (() => {
        t9$.lineTo(0, 0);
        t9$.lineTo(0, size.height * 0.45);
        t9$.quadraticBezierTo(size.width * 0.25, size.height * 0.55, size.width * 0.5, size.height * 0.5);
        t9$.quadraticBezierTo(size.width * 0.75, size.height * 0.45, size.width, size.height * 0.5);
        t9$.lineTo(size.width, 0);
        t9$.close();
        return t9$;
      })());
      canvas.drawPath(path, paint);
    }
    shouldRepaint(oldDelegate) {
      custom_paint.CustomPainter.as(oldDelegate);
      return false;
    }
    static ['_#new#tearOff']() {
      return new user.WavePainter.new();
    }
  };
  (user.WavePainter.new = function() {
    user.WavePainter.__proto__.new.call(this);
    ;
  }).prototype = user.WavePainter.prototype;
  dart.addTypeTests(user.WavePainter);
  dart.addTypeCaches(user.WavePainter);
  dart.setMethodSignature(user.WavePainter, () => ({
    __proto__: dart.getMethods(user.WavePainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(user.WavePainter, I[25]);
  var id$ = dart.privateName(bookmodel, "BookModel.id");
  var title$0 = dart.privateName(bookmodel, "BookModel.title");
  var author$ = dart.privateName(bookmodel, "BookModel.author");
  var categories$ = dart.privateName(bookmodel, "BookModel.categories");
  var description$ = dart.privateName(bookmodel, "BookModel.description");
  var language$ = dart.privateName(bookmodel, "BookModel.language");
  var publisher$ = dart.privateName(bookmodel, "BookModel.publisher");
  var averageRating$ = dart.privateName(bookmodel, "BookModel.averageRating");
  var pageCount$ = dart.privateName(bookmodel, "BookModel.pageCount");
  var thumbnail$ = dart.privateName(bookmodel, "BookModel.thumbnail");
  bookmodel.BookModel = class BookModel extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    get title() {
      return this[title$0];
    }
    set title(value) {
      super.title = value;
    }
    get author() {
      return this[author$];
    }
    set author(value) {
      super.author = value;
    }
    get categories() {
      return this[categories$];
    }
    set categories(value) {
      super.categories = value;
    }
    get description() {
      return this[description$];
    }
    set description(value) {
      super.description = value;
    }
    get language() {
      return this[language$];
    }
    set language(value) {
      super.language = value;
    }
    get publisher() {
      return this[publisher$];
    }
    set publisher(value) {
      super.publisher = value;
    }
    get averageRating() {
      return this[averageRating$];
    }
    set averageRating(value) {
      super.averageRating = value;
    }
    get pageCount() {
      return this[pageCount$];
    }
    set pageCount(value) {
      super.pageCount = value;
    }
    get thumbnail() {
      return this[thumbnail$];
    }
    set thumbnail(value) {
      super.thumbnail = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let author = opts && 'author' in opts ? opts.author : null;
      let categories = opts && 'categories' in opts ? opts.categories : null;
      let description = opts && 'description' in opts ? opts.description : null;
      let language = opts && 'language' in opts ? opts.language : null;
      let publisher = opts && 'publisher' in opts ? opts.publisher : null;
      let averageRating = opts && 'averageRating' in opts ? opts.averageRating : null;
      let pageCount = opts && 'pageCount' in opts ? opts.pageCount : null;
      let thumbnail = opts && 'thumbnail' in opts ? opts.thumbnail : null;
      return new bookmodel.BookModel.new({id: id, title: title, author: author, categories: categories, description: description, language: language, publisher: publisher, averageRating: averageRating, pageCount: pageCount, thumbnail: thumbnail});
    }
    static fromJson(json) {
      let t9, t9$, t9$0, t9$1, t9$2, t9$3, t9$4;
      return new bookmodel.BookModel.new({id: core.String.as((t9 = json[$_get]("id"), t9 == null ? "ID não disponível" : t9)), title: core.String.as((t9$ = dart.dsend(json[$_get]("volumeInfo"), '_get', ["title"]), t9$ == null ? "Título não disponível" : t9$)), author: core.String.as(dart.dsend(json[$_get]("volumeInfo"), '_get', ["authors"]) != null ? dart.dsend(dart.dsend(json[$_get]("volumeInfo"), '_get', ["authors"]), 'join', [", "]) : "Autor não disponível"), categories: dart.dsend(json[$_get]("volumeInfo"), '_get', ["categories"]) != null ? T.ListOfString().from(core.Iterable.as(dart.dsend(json[$_get]("volumeInfo"), '_get', ["categories"])))[$take](4)[$toList]() : T.JSArrayOfString().of([]), description: core.String.as((t9$0 = dart.dsend(json[$_get]("volumeInfo"), '_get', ["description"]), t9$0 == null ? "Descrição não disponível" : t9$0)), language: core.String.as((t9$1 = dart.dsend(json[$_get]("volumeInfo"), '_get', ["language"]), t9$1 == null ? "não disponível" : t9$1)), publisher: core.String.as((t9$2 = dart.dsend(json[$_get]("volumeInfo"), '_get', ["publisher"]), t9$2 == null ? "não disponível" : t9$2)), averageRating: dart.dsend(json[$_get]("volumeInfo"), '_get', ["averageRating"]) != null && typeof dart.dsend(json[$_get]("volumeInfo"), '_get', ["averageRating"]) == 'number' ? core.num.as(dart.dsend(json[$_get]("volumeInfo"), '_get', ["averageRating"]))[$toDouble]() : 0, pageCount: core.int.as((t9$3 = dart.dsend(json[$_get]("volumeInfo"), '_get', ["pageCount"]), t9$3 == null ? 0 : t9$3)), thumbnail: T.StringN().as((t9$4 = dart.dsend(json[$_get]("volumeInfo"), '_get', ["imageLinks"]), t9$4 == null ? null : dart.dsend(t9$4, '_get', ["medium"])))});
    }
    static ['_#fromJson#tearOff'](json) {
      return bookmodel.BookModel.fromJson(json);
    }
    toJson() {
      return new (T.IdentityMapOfString$dynamic()).from(["title", this.title, "author", this.author, "categories", this.categories, "description", this.description, "language", this.language, "publisher", this.publisher, "averageRating", this.averageRating, "pageCount", this.pageCount]);
    }
  };
  (bookmodel.BookModel.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let author = opts && 'author' in opts ? opts.author : null;
    let categories = opts && 'categories' in opts ? opts.categories : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let language = opts && 'language' in opts ? opts.language : null;
    let publisher = opts && 'publisher' in opts ? opts.publisher : null;
    let averageRating = opts && 'averageRating' in opts ? opts.averageRating : null;
    let pageCount = opts && 'pageCount' in opts ? opts.pageCount : null;
    let thumbnail = opts && 'thumbnail' in opts ? opts.thumbnail : null;
    this[id$] = id;
    this[title$0] = title;
    this[author$] = author;
    this[categories$] = categories;
    this[description$] = description;
    this[language$] = language;
    this[publisher$] = publisher;
    this[averageRating$] = averageRating;
    this[pageCount$] = pageCount;
    this[thumbnail$] = thumbnail;
    ;
  }).prototype = bookmodel.BookModel.prototype;
  dart.addTypeTests(bookmodel.BookModel);
  dart.addTypeCaches(bookmodel.BookModel);
  dart.setMethodSignature(bookmodel.BookModel, () => ({
    __proto__: dart.getMethods(bookmodel.BookModel.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setStaticMethodSignature(bookmodel.BookModel, () => ['fromJson']);
  dart.setLibraryUri(bookmodel.BookModel, I[26]);
  dart.setFieldSignature(bookmodel.BookModel, () => ({
    __proto__: dart.getFields(bookmodel.BookModel.__proto__),
    id: dart.finalFieldType(core.String),
    title: dart.finalFieldType(core.String),
    author: dart.finalFieldType(core.String),
    categories: dart.finalFieldType(core.List$(core.String)),
    description: dart.finalFieldType(core.String),
    language: dart.finalFieldType(core.String),
    publisher: dart.finalFieldType(core.String),
    averageRating: dart.finalFieldType(core.double),
    pageCount: dart.finalFieldType(core.int),
    thumbnail: dart.finalFieldType(dart.nullable(core.String))
  }));
  var baseUrl$ = dart.privateName(book_repository, "BookRepository.baseUrl");
  book_repository.BookRepository = class BookRepository extends core.Object {
    get baseUrl() {
      return this[baseUrl$];
    }
    set baseUrl(value) {
      super.baseUrl = value;
    }
    fetchBooks(query) {
      return async.async(T.ListOfBookModel(), (function* fetchBooks() {
        let t9;
        let response = (yield http.get(core.Uri.parse(this.baseUrl + "?q=" + query + "&maxResults=40")));
        if (response.statusCode === 200) {
          let data = convert.jsonDecode(response.body);
          let books = core.List.as((t9 = dart.dsend(data, '_get', ["items"]), t9 == null ? [] : t9));
          return books[$map](bookmodel.BookModel, dart.fn(item => bookmodel.BookModel.fromJson(T.MapOfString$dynamic().as(item)), T.dynamicToBookModel()))[$where](dart.fn(book => book.language === "pt", T.BookModelTobool()))[$toList]();
        } else {
          dart.throw(core.Exception.new("Falha ao carregar livros"));
        }
      }).bind(this));
    }
    getBookById(bookId) {
      return async.async(bookmodel.BookModel, (function* getBookById() {
        let response = (yield http.get(core.Uri.parse(this.baseUrl + "/" + bookId)));
        if (response.statusCode === 200) {
          let data = convert.jsonDecode(response.body);
          return bookmodel.BookModel.fromJson(T.MapOfString$dynamic().as(data));
        } else {
          dart.throw(core.Exception.new("Falha ao carregar o livro"));
        }
      }).bind(this));
    }
    recommendation(query) {
      return async.async(T.ListOfBookModel(), (function* recommendation() {
        let t9;
        let response = (yield http.get(core.Uri.parse(this.baseUrl + "?q=" + query + "&maxResults=5")));
        if (response.statusCode === 200) {
          let data = convert.jsonDecode(response.body);
          let books = core.List.as((t9 = dart.dsend(data, '_get', ["items"]), t9 == null ? [] : t9));
          return books[$map](bookmodel.BookModel, dart.fn(item => bookmodel.BookModel.fromJson(T.MapOfString$dynamic().as(item)), T.dynamicToBookModel()))[$toList]();
        } else {
          dart.throw(core.Exception.new("Falha ao carregar livros"));
        }
      }).bind(this));
    }
    printBookThumbnail(bookId) {
      return async.async(dart.void, (function* printBookThumbnail() {
        let t9;
        try {
          let book = (yield this.getBookById(bookId));
          core.print((t9 = book.thumbnail, t9 == null ? "Capa indisponível" : t9));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("Erro: " + dart.str(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    static ['_#new#tearOff']() {
      return new book_repository.BookRepository.new();
    }
  };
  (book_repository.BookRepository.new = function() {
    this[baseUrl$] = "https://www.googleapis.com/books/v1/volumes";
    ;
  }).prototype = book_repository.BookRepository.prototype;
  dart.addTypeTests(book_repository.BookRepository);
  dart.addTypeCaches(book_repository.BookRepository);
  dart.setMethodSignature(book_repository.BookRepository, () => ({
    __proto__: dart.getMethods(book_repository.BookRepository.__proto__),
    fetchBooks: dart.fnType(async.Future$(core.List$(bookmodel.BookModel)), [core.String]),
    getBookById: dart.fnType(async.Future$(bookmodel.BookModel), [core.String]),
    recommendation: dart.fnType(async.Future$(core.List$(bookmodel.BookModel)), [core.String]),
    printBookThumbnail: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setLibraryUri(book_repository.BookRepository, I[27]);
  dart.setFieldSignature(book_repository.BookRepository, () => ({
    __proto__: dart.getFields(book_repository.BookRepository.__proto__),
    baseUrl: dart.finalFieldType(core.String)
  }));
  var emprestimoID$ = dart.privateName(loanModel, "LoanModel.emprestimoID");
  var usuario$ = dart.privateName(loanModel, "LoanModel.usuario");
  var livro$ = dart.privateName(loanModel, "LoanModel.livro");
  var dataAprovacao$ = dart.privateName(loanModel, "LoanModel.dataAprovacao");
  var dataDevolucao$ = dart.privateName(loanModel, "LoanModel.dataDevolucao");
  loanModel.LoanModel = class LoanModel extends core.Object {
    get emprestimoID() {
      return this[emprestimoID$];
    }
    set emprestimoID(value) {
      super.emprestimoID = value;
    }
    get usuario() {
      return this[usuario$];
    }
    set usuario(value) {
      super.usuario = value;
    }
    get livro() {
      return this[livro$];
    }
    set livro(value) {
      super.livro = value;
    }
    get dataAprovacao() {
      return this[dataAprovacao$];
    }
    set dataAprovacao(value) {
      super.dataAprovacao = value;
    }
    get dataDevolucao() {
      return this[dataDevolucao$];
    }
    set dataDevolucao(value) {
      super.dataDevolucao = value;
    }
    static ['_#new#tearOff'](opts) {
      let emprestimoID = opts && 'emprestimoID' in opts ? opts.emprestimoID : null;
      let usuario = opts && 'usuario' in opts ? opts.usuario : null;
      let livro = opts && 'livro' in opts ? opts.livro : null;
      let dataAprovacao = opts && 'dataAprovacao' in opts ? opts.dataAprovacao : null;
      let dataDevolucao = opts && 'dataDevolucao' in opts ? opts.dataDevolucao : null;
      return new loanModel.LoanModel.new({emprestimoID: emprestimoID, usuario: usuario, livro: livro, dataAprovacao: dataAprovacao, dataDevolucao: dataDevolucao});
    }
    static fromJson(json) {
      let dataAprovacaoString = core.String.as(json[$_get]("dataAprovacao"));
      let dataDevolucaoString = core.String.as(json[$_get]("dataDevolucao"));
      dataAprovacaoString = dataAprovacaoString[$replaceAll]("@", " ");
      dataDevolucaoString = dataDevolucaoString[$replaceAll]("@", " ");
      let format = new date_format.DateFormat.new("dd/MM/yyyy HH:mm:ss");
      let dataAprovacao = format.parse(dataAprovacaoString);
      let dataDevolucao = format.parse(dataDevolucaoString);
      return new loanModel.LoanModel.new({emprestimoID: core.int.as(json[$_get]("emprestimoID")), usuario: userModel.UserModel.fromJson(T.MapOfString$dynamic().as(json[$_get]("usuario"))), livro: livromodelapi.LivroModelApi.fromJson(T.MapOfString$dynamic().as(json[$_get]("livro"))), dataAprovacao: dataAprovacao, dataDevolucao: dataDevolucao});
    }
    static ['_#fromJson#tearOff'](json) {
      return loanModel.LoanModel.fromJson(json);
    }
  };
  (loanModel.LoanModel.new = function(opts) {
    let emprestimoID = opts && 'emprestimoID' in opts ? opts.emprestimoID : null;
    let usuario = opts && 'usuario' in opts ? opts.usuario : null;
    let livro = opts && 'livro' in opts ? opts.livro : null;
    let dataAprovacao = opts && 'dataAprovacao' in opts ? opts.dataAprovacao : null;
    let dataDevolucao = opts && 'dataDevolucao' in opts ? opts.dataDevolucao : null;
    this[emprestimoID$] = emprestimoID;
    this[usuario$] = usuario;
    this[livro$] = livro;
    this[dataAprovacao$] = dataAprovacao;
    this[dataDevolucao$] = dataDevolucao;
    ;
  }).prototype = loanModel.LoanModel.prototype;
  dart.addTypeTests(loanModel.LoanModel);
  dart.addTypeCaches(loanModel.LoanModel);
  dart.setStaticMethodSignature(loanModel.LoanModel, () => ['fromJson']);
  dart.setLibraryUri(loanModel.LoanModel, I[28]);
  dart.setFieldSignature(loanModel.LoanModel, () => ({
    __proto__: dart.getFields(loanModel.LoanModel.__proto__),
    emprestimoID: dart.finalFieldType(core.int),
    usuario: dart.finalFieldType(userModel.UserModel),
    livro: dart.finalFieldType(livromodelapi.LivroModelApi),
    dataAprovacao: dart.finalFieldType(core.DateTime),
    dataDevolucao: dart.finalFieldType(core.DateTime)
  }));
  var baseUrl$0 = dart.privateName(loan_repository, "LoanRepository.baseUrl");
  loan_repository.LoanRepository = class LoanRepository extends core.Object {
    get baseUrl() {
      return this[baseUrl$0];
    }
    set baseUrl(value) {
      super.baseUrl = value;
    }
    fetchEmprestimosByMatricula() {
      return async.async(T.ListOfLoanModel(), (function* fetchEmprestimosByMatricula() {
        let response = (yield http.get(core.Uri.parse(this.baseUrl + "/list/" + "0001242")));
        if (response.statusCode === 200) {
          try {
            let utf8DecodedResponse = convert.utf8.decode(response.bodyBytes);
            let data = core.List.as(convert.json.decode(utf8DecodedResponse));
            return data[$map](loanModel.LoanModel, dart.fn(emprestimoJson => loanModel.LoanModel.fromJson(T.MapOfString$dynamic().as(emprestimoJson)), T.dynamicToLoanModel()))[$toList]();
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Object.is(e)) {
              core.print("Erro ao decodificar a resposta JSON: " + dart.str(e));
              dart.throw(core.Exception.new("Erro ao processar os dados recebidos"));
            } else
              throw e$;
          }
        } else {
          core.print("Erro na requisição: " + dart.str(response.statusCode));
          core.print("Corpo da resposta: " + response.body);
          dart.throw(core.Exception.new("Falha ao carregar empréstimos"));
        }
      }).bind(this));
    }
    renovarEmprestimo(emprestimoID) {
      return async.async(core.bool, function* renovarEmprestimo() {
        try {
          let url = "http://localhost:8080/api/emprestimos";
          let response = (yield http.put(core.Uri.parse(url + "/" + dart.str(emprestimoID) + "/renovar")));
          if (response.statusCode === 200) {
            core.print("Empréstimo renovado com sucesso!");
            return true;
          } else {
            core.print("Falha ao renovar o empréstimo. Status: " + dart.str(response.statusCode));
            core.print("Corpo da resposta: " + response.body);
            return false;
          }
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print("Erro ao renovar o empréstimo: " + dart.str(e));
            return false;
          } else
            throw e$;
        }
      });
    }
    static ['_#new#tearOff']() {
      return new loan_repository.LoanRepository.new();
    }
  };
  (loan_repository.LoanRepository.new = function() {
    this[baseUrl$0] = "http://localhost:8080/api/emprestimos";
    ;
  }).prototype = loan_repository.LoanRepository.prototype;
  dart.addTypeTests(loan_repository.LoanRepository);
  dart.addTypeCaches(loan_repository.LoanRepository);
  dart.setMethodSignature(loan_repository.LoanRepository, () => ({
    __proto__: dart.getMethods(loan_repository.LoanRepository.__proto__),
    fetchEmprestimosByMatricula: dart.fnType(async.Future$(core.List$(loanModel.LoanModel)), []),
    renovarEmprestimo: dart.fnType(async.Future$(core.bool), [core.int])
  }));
  dart.setLibraryUri(loan_repository.LoanRepository, I[29]);
  dart.setFieldSignature(loan_repository.LoanRepository, () => ({
    __proto__: dart.getFields(loan_repository.LoanRepository.__proto__),
    baseUrl: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(loan_repository.LoanRepository, () => ['matricula']);
  dart.defineLazy(loan_repository.LoanRepository, {
    /*loan_repository.LoanRepository.matricula*/get matricula() {
      return "0001242";
    }
  }, false);
  var title$1 = dart.privateName(book_profile, "BookProfileWidget.title");
  var author$0 = dart.privateName(book_profile, "BookProfileWidget.author");
  var categories$0 = dart.privateName(book_profile, "BookProfileWidget.categories");
  var description$0 = dart.privateName(book_profile, "BookProfileWidget.description");
  var thumbnail$0 = dart.privateName(book_profile, "BookProfileWidget.thumbnail");
  var language$0 = dart.privateName(book_profile, "BookProfileWidget.language");
  var publisher$0 = dart.privateName(book_profile, "BookProfileWidget.publisher");
  var pageCount$0 = dart.privateName(book_profile, "BookProfileWidget.pageCount");
  var averageRating$0 = dart.privateName(book_profile, "BookProfileWidget.averageRating");
  book_profile.BookProfileWidget = class BookProfileWidget extends framework.StatefulWidget {
    get title() {
      return this[title$1];
    }
    set title(value) {
      super.title = value;
    }
    get author() {
      return this[author$0];
    }
    set author(value) {
      super.author = value;
    }
    get categories() {
      return this[categories$0];
    }
    set categories(value) {
      super.categories = value;
    }
    get description() {
      return this[description$0];
    }
    set description(value) {
      super.description = value;
    }
    get thumbnail() {
      return this[thumbnail$0];
    }
    set thumbnail(value) {
      super.thumbnail = value;
    }
    get language() {
      return this[language$0];
    }
    set language(value) {
      super.language = value;
    }
    get publisher() {
      return this[publisher$0];
    }
    set publisher(value) {
      super.publisher = value;
    }
    get pageCount() {
      return this[pageCount$0];
    }
    set pageCount(value) {
      super.pageCount = value;
    }
    get averageRating() {
      return this[averageRating$0];
    }
    set averageRating(value) {
      super.averageRating = value;
    }
    static ['_#new#tearOff'](opts) {
      let title = opts && 'title' in opts ? opts.title : null;
      let author = opts && 'author' in opts ? opts.author : null;
      let categories = opts && 'categories' in opts ? opts.categories : null;
      let description = opts && 'description' in opts ? opts.description : null;
      let thumbnail = opts && 'thumbnail' in opts ? opts.thumbnail : null;
      let language = opts && 'language' in opts ? opts.language : null;
      let publisher = opts && 'publisher' in opts ? opts.publisher : null;
      let pageCount = opts && 'pageCount' in opts ? opts.pageCount : null;
      let averageRating = opts && 'averageRating' in opts ? opts.averageRating : null;
      let key = opts && 'key' in opts ? opts.key : null;
      return new book_profile.BookProfileWidget.new({title: title, author: author, categories: categories, description: description, thumbnail: thumbnail, language: language, publisher: publisher, pageCount: pageCount, averageRating: averageRating, key: key});
    }
    createState() {
      return new book_profile._BookProfileWidgetState.new();
    }
  };
  (book_profile.BookProfileWidget.new = function(opts) {
    let title = opts && 'title' in opts ? opts.title : null;
    let author = opts && 'author' in opts ? opts.author : null;
    let categories = opts && 'categories' in opts ? opts.categories : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let thumbnail = opts && 'thumbnail' in opts ? opts.thumbnail : null;
    let language = opts && 'language' in opts ? opts.language : null;
    let publisher = opts && 'publisher' in opts ? opts.publisher : null;
    let pageCount = opts && 'pageCount' in opts ? opts.pageCount : null;
    let averageRating = opts && 'averageRating' in opts ? opts.averageRating : null;
    let key = opts && 'key' in opts ? opts.key : null;
    this[title$1] = title;
    this[author$0] = author;
    this[categories$0] = categories;
    this[description$0] = description;
    this[thumbnail$0] = thumbnail;
    this[language$0] = language;
    this[publisher$0] = publisher;
    this[pageCount$0] = pageCount;
    this[averageRating$0] = averageRating;
    book_profile.BookProfileWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = book_profile.BookProfileWidget.prototype;
  dart.addTypeTests(book_profile.BookProfileWidget);
  dart.addTypeCaches(book_profile.BookProfileWidget);
  dart.setMethodSignature(book_profile.BookProfileWidget, () => ({
    __proto__: dart.getMethods(book_profile.BookProfileWidget.__proto__),
    createState: dart.fnType(framework.State$(book_profile.BookProfileWidget), [])
  }));
  dart.setLibraryUri(book_profile.BookProfileWidget, I[30]);
  dart.setFieldSignature(book_profile.BookProfileWidget, () => ({
    __proto__: dart.getFields(book_profile.BookProfileWidget.__proto__),
    title: dart.finalFieldType(core.String),
    author: dart.finalFieldType(core.String),
    categories: dart.finalFieldType(core.List$(core.String)),
    description: dart.finalFieldType(core.String),
    thumbnail: dart.finalFieldType(dart.nullable(core.String)),
    language: dart.finalFieldType(core.String),
    publisher: dart.finalFieldType(core.String),
    pageCount: dart.finalFieldType(core.int),
    averageRating: dart.finalFieldType(core.double)
  }));
  var _isExpanded = dart.privateName(book_profile, "_isExpanded");
  var _infoRow = dart.privateName(book_profile, "_infoRow");
  book_profile._BookProfileWidgetState = class _BookProfileWidgetState extends framework.State$(book_profile.BookProfileWidget) {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: C[205] || CT.C205, elevation: 0, leading: new icon_button.IconButton.new({icon: C[206] || CT.C206, onPressed: dart.fn(() => {
              navigator.Navigator.of(context).pop(T.ObjectN());
            }, T.VoidTovoid())}), centerTitle: true}), backgroundColor: colors.Colors.white, body: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new container.Container.new({width: 1 / 0, height: 200, decoration: new box_decoration.BoxDecoration.new({color: C[205] || CT.C205, image: this.widget.thumbnail != null ? new decoration_image.DecorationImage.new({image: new _network_image_web.NetworkImage.new(dart.nullCheck(this.widget.thumbnail)), fit: box_fit.BoxFit.cover}) : null}), child: this.widget.thumbnail == null ? C[207] || CT.C207 : null}), C[46] || CT.C46, new basic.Padding.new({padding: C[93] || CT.C93, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(this.widget.title, {style: C[146] || CT.C146}), C[111] || CT.C111, new text.Text.new("Autor: " + this.widget.author, {style: C[209] || CT.C209}), C[16] || CT.C16, new basic.Row.new({children: T.ListOfWidget().generate(5, dart.fn(index => new icon$.Icon.new(index < this.widget.averageRating[$round]() ? icons.Icons.star : icons.Icons.star_border, {color: colors.Colors.amber}), T.intToIcon()))})])})}), C[46] || CT.C46, new divider.Divider.new({color: colors.Colors.grey._get(300), thickness: 1}), C[16] || CT.C16, new basic.Padding.new({padding: C[93] || CT.C93, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([this[_infoRow](icons.Icons.language, "Idioma", this.widget.language), C[16] || CT.C16, this[_infoRow](icons.Icons.account_balance, "Editora", this.widget.publisher), C[16] || CT.C16, this[_infoRow](icons.Icons.menu_book, "Páginas", this.widget.pageCount[$toString]()), C[16] || CT.C16, this[_infoRow](icons.Icons.star, "Avaliação", this.widget.averageRating[$toStringAsFixed](1))])})}), C[46] || CT.C46, C[16] || CT.C16, new basic.Padding.new({padding: C[93] || CT.C93, child: new basic.Wrap.new({spacing: 8, runSpacing: 8, alignment: wrap.WrapAlignment.start, children: this.widget.categories[$map](chip.Chip, dart.fn(category => new chip.Chip.new({label: new text.Text.new(category), backgroundColor: colors.Colors.lightBlueAccent}), T.StringToChip()))[$toList]()})}), C[46] || CT.C46, new basic.Padding.new({padding: C[93] || CT.C93, child: new text.Text.new("Descrição", {style: C[103] || CT.C103})}), C[16] || CT.C16, new basic.Padding.new({padding: C[93] || CT.C93, child: new container.Container.new({padding: C[211] || CT.C211, decoration: new box_decoration.BoxDecoration.new({color: C[55] || CT.C55, borderRadius: new border_radius.BorderRadius.circular(10)}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: (() => {
                      let t12 = T.JSArrayOfWidget().of([new text.Text.new(this[_isExpanded] ? this.widget.description : this.widget.description.length > 200 ? this.widget.description[$substring](0, 200) + "..." : this.widget.description, {style: C[20] || CT.C20})]);
                      if (this.widget.description.length > 200) t12.push(new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
                          this.setState(dart.fn(() => {
                            this[_isExpanded] = !this[_isExpanded];
                          }, T.VoidTovoid()));
                        }, T.VoidTovoid()), child: new text.Text.new(this[_isExpanded] ? "Ler menos" : "Ler mais", {style: C[212] || CT.C212})}));
                      return t12;
                    })()})})})])})})});
    }
    [_infoRow](icon, label, value) {
      return new basic.Row.new({children: T.JSArrayOfWidget().of([new icon$.Icon.new(icon, {color: colors.Colors.grey}), C[150] || CT.C150, new text.Text.new(label + ": ", {style: C[187] || CT.C187}), new basic.Expanded.new({child: new text.Text.new(value, {style: C[213] || CT.C213, overflow: text_painter.TextOverflow.ellipsis})})])});
    }
    static ['_#new#tearOff']() {
      return new book_profile._BookProfileWidgetState.new();
    }
  };
  (book_profile._BookProfileWidgetState.new = function() {
    this[_isExpanded] = false;
    book_profile._BookProfileWidgetState.__proto__.new.call(this);
    ;
  }).prototype = book_profile._BookProfileWidgetState.prototype;
  dart.addTypeTests(book_profile._BookProfileWidgetState);
  dart.addTypeCaches(book_profile._BookProfileWidgetState);
  dart.setMethodSignature(book_profile._BookProfileWidgetState, () => ({
    __proto__: dart.getMethods(book_profile._BookProfileWidgetState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_infoRow]: dart.fnType(framework.Widget, [icon_data.IconData, core.String, core.String])
  }));
  dart.setLibraryUri(book_profile._BookProfileWidgetState, I[30]);
  dart.setFieldSignature(book_profile._BookProfileWidgetState, () => ({
    __proto__: dart.getFields(book_profile._BookProfileWidgetState.__proto__),
    [_isExpanded]: dart.fieldType(core.bool)
  }));
  var withCredentials = dart.privateName(browser_client, "BrowserClient.withCredentials");
  var _xhrs = dart.privateName(browser_client, "_xhrs");
  var _isClosed = dart.privateName(browser_client, "_isClosed");
  browser_client.BrowserClient = class BrowserClient extends base_client.BaseClient {
    get withCredentials() {
      return this[withCredentials];
    }
    set withCredentials(value) {
      this[withCredentials] = value;
    }
    send(request) {
      return async.async(streamed_response.StreamedResponse, (function* send() {
        let t13;
        if (this[_isClosed]) {
          dart.throw(new exception.ClientException.new("HTTP request failed. Client is already closed.", request.url));
        }
        let bytes = (yield request.finalize().toBytes());
        let xhr = html.HttpRequest.new();
        this[_xhrs].add(xhr);
        t13 = xhr;
        (() => {
          t13.open(request.method, dart.str(request.url), {async: true});
          t13[$responseType] = "arraybuffer";
          t13.withCredentials = this.withCredentials;
          return t13;
        })();
        request.headers[$forEach](dart.bind(xhr, 'setRequestHeader'));
        let completer = T.CompleterOfStreamedResponse().new();
        async.unawaited(xhr[$onLoad].first.then(dart.void, dart.fn(_ => {
          let body = typed_data.ByteBuffer.as(xhr[$response])[$asUint8List]();
          completer.complete(new streamed_response.StreamedResponse.new(byte_stream.ByteStream.fromBytes(body), dart.nullCheck(xhr.status), {contentLength: body[$length], request: request, headers: xhr[$responseHeaders], reasonPhrase: xhr.statusText}));
        }, T.ProgressEventToNull())));
        async.unawaited(xhr[$onError].first.then(dart.void, dart.fn(_ => {
          completer.completeError(new exception.ClientException.new("XMLHttpRequest error.", request.url), core.StackTrace.current);
        }, T.ProgressEventToNull())));
        xhr.send(bytes);
        try {
          return yield completer.future;
        } finally {
          this[_xhrs].remove(xhr);
        }
      }).bind(this));
    }
    close() {
      this[_isClosed] = true;
      for (let xhr of this[_xhrs]) {
        xhr.abort();
      }
      this[_xhrs].clear();
    }
    static ['_#new#tearOff']() {
      return new browser_client.BrowserClient.new();
    }
  };
  (browser_client.BrowserClient.new = function() {
    this[_xhrs] = T.LinkedHashSetOfHttpRequest().new();
    this[withCredentials] = false;
    this[_isClosed] = false;
    ;
  }).prototype = browser_client.BrowserClient.prototype;
  dart.addTypeTests(browser_client.BrowserClient);
  dart.addTypeCaches(browser_client.BrowserClient);
  dart.setMethodSignature(browser_client.BrowserClient, () => ({
    __proto__: dart.getMethods(browser_client.BrowserClient.__proto__),
    send: dart.fnType(async.Future$(streamed_response.StreamedResponse), [base_request.BaseRequest])
  }));
  dart.setLibraryUri(browser_client.BrowserClient, I[31]);
  dart.setFieldSignature(browser_client.BrowserClient, () => ({
    __proto__: dart.getFields(browser_client.BrowserClient.__proto__),
    [_xhrs]: dart.finalFieldType(core.Set$(html.HttpRequest)),
    withCredentials: dart.fieldType(core.bool),
    [_isClosed]: dart.fieldType(core.bool)
  }));
  browser_client.createClient = function createClient() {
    ;
    return new browser_client.BrowserClient.new();
  };
  var Latin1Codec__allowInvalid = dart.privateName(convert, "Latin1Codec._allowInvalid");
  utils.mapToQuery = function mapToQuery(map, opts) {
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    let pairs = T.JSArrayOfListOfString().of([]);
    map[$forEach](dart.fn((key, value) => {
      let t13, t13$;
      return pairs[$add](T.JSArrayOfString().of([core.Uri.encodeQueryComponent(key, {encoding: (t13 = encoding, t13 == null ? convert.utf8 : t13)}), core.Uri.encodeQueryComponent(value, {encoding: (t13$ = encoding, t13$ == null ? convert.utf8 : t13$)})]));
    }, T.StringAndStringTovoid()));
    return pairs[$map](core.String, dart.fn(pair => pair[$_get](0) + "=" + pair[$_get](1), T.ListOfStringToString()))[$join]("&");
  };
  utils.encodingForCharset = function encodingForCharset(charset, fallback = C[214] || CT.C214) {
    let t13;
    if (charset == null) return fallback;
    t13 = convert.Encoding.getByName(charset);
    return t13 == null ? fallback : t13;
  };
  utils.requiredEncodingForCharset = function requiredEncodingForCharset(charset) {
    let t13;
    t13 = convert.Encoding.getByName(charset);
    return t13 == null ? dart.throw(new core.FormatException.new("Unsupported encoding \"" + charset + "\".")) : t13;
  };
  utils.isPlainAscii = function isPlainAscii(string) {
    return utils._asciiOnly.hasMatch(string);
  };
  utils.toUint8List = function toUint8List(input) {
    if (typed_data.Uint8List.is(input)) return input;
    if (typed_data.TypedData.is(input)) {
      return typed_data.Uint8List.view(typed_data.TypedData.as(input)[$buffer]);
    }
    return _native_typed_data.NativeUint8List.fromList(input);
  };
  utils.toByteStream = function toByteStream(stream) {
    if (byte_stream.ByteStream.is(stream)) return stream;
    return new byte_stream.ByteStream.new(stream);
  };
  utils.onDone = function onDone(T, stream, onDone) {
    return stream.transform(T, new (async._StreamHandlerTransformer$(T, T)).new({handleDone: dart.fn(sink => {
        sink.close();
        onDone();
      }, dart.fnType(dart.void, [async.EventSink$(T)]))}));
  };
  dart.defineLazy(utils, {
    /*utils._asciiOnly*/get _asciiOnly() {
      return core.RegExp.new("^[\\x00-\\x7F]+$");
    }
  }, false);
  multipart_file_stub.multipartFileFromPath = function multipartFileFromPath(field, filePath, opts) {
    let filename = opts && 'filename' in opts ? opts.filename : null;
    let contentType = opts && 'contentType' in opts ? opts.contentType : null;
    return dart.throw(new core.UnsupportedError.new("MultipartFile is only supported where dart:io is available."));
  };
  dart.defineLazy(boundary_characters, {
    /*boundary_characters.boundaryCharacters*/get boundaryCharacters() {
      return C[215] || CT.C215;
    }
  }, false);
  var titulo$ = dart.privateName(livromodelapi, "LivroModelApi.titulo");
  var autor$ = dart.privateName(livromodelapi, "LivroModelApi.autor");
  livromodelapi.LivroModelApi = class LivroModelApi extends core.Object {
    get titulo() {
      return this[titulo$];
    }
    set titulo(value) {
      super.titulo = value;
    }
    get autor() {
      return this[autor$];
    }
    set autor(value) {
      super.autor = value;
    }
    static ['_#new#tearOff'](opts) {
      let titulo = opts && 'titulo' in opts ? opts.titulo : null;
      let autor = opts && 'autor' in opts ? opts.autor : null;
      return new livromodelapi.LivroModelApi.new({titulo: titulo, autor: autor});
    }
    static fromJson(json) {
      let t13, t13$;
      return new livromodelapi.LivroModelApi.new({titulo: core.String.as((t13 = json[$_get]("titulo"), t13 == null ? "Título não disponível" : t13)), autor: core.String.as((t13$ = json[$_get]("autor"), t13$ == null ? "Autor não disponível" : t13$))});
    }
    static ['_#fromJson#tearOff'](json) {
      return livromodelapi.LivroModelApi.fromJson(json);
    }
    toJson() {
      return new (T.IdentityMapOfString$dynamic()).from(["title", this.titulo, "author", this.autor]);
    }
  };
  (livromodelapi.LivroModelApi.new = function(opts) {
    let titulo = opts && 'titulo' in opts ? opts.titulo : null;
    let autor = opts && 'autor' in opts ? opts.autor : null;
    this[titulo$] = titulo;
    this[autor$] = autor;
    ;
  }).prototype = livromodelapi.LivroModelApi.prototype;
  dart.addTypeTests(livromodelapi.LivroModelApi);
  dart.addTypeCaches(livromodelapi.LivroModelApi);
  dart.setMethodSignature(livromodelapi.LivroModelApi, () => ({
    __proto__: dart.getMethods(livromodelapi.LivroModelApi.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setStaticMethodSignature(livromodelapi.LivroModelApi, () => ['fromJson']);
  dart.setLibraryUri(livromodelapi.LivroModelApi, I[32]);
  dart.setFieldSignature(livromodelapi.LivroModelApi, () => ({
    __proto__: dart.getFields(livromodelapi.LivroModelApi.__proto__),
    titulo: dart.finalFieldType(core.String),
    autor: dart.finalFieldType(core.String)
  }));
  var scheme$ = dart.privateName(authentication_challenge, "AuthenticationChallenge.scheme");
  var parameters$ = dart.privateName(authentication_challenge, "AuthenticationChallenge.parameters");
  authentication_challenge.AuthenticationChallenge = class AuthenticationChallenge extends core.Object {
    get scheme() {
      return this[scheme$];
    }
    set scheme(value) {
      super.scheme = value;
    }
    get parameters() {
      return this[parameters$];
    }
    set parameters(value) {
      super.parameters = value;
    }
    static parseHeader(header) {
      return utils$.wrapFormatException(T.ListOfAuthenticationChallenge(), "authentication header", header, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(header);
        scanner.scan(scan.whitespace);
        let challenges = scan.parseList(authentication_challenge.AuthenticationChallenge, scanner, dart.fn(() => {
          let scheme = authentication_challenge.AuthenticationChallenge._scanScheme(scanner, {whitespaceName: "\" \" or \"=\""});
          let params = new (T.IdentityMapOfString$String()).new();
          while (scanner.scan(",")) {
            scanner.scan(scan.whitespace);
          }
          authentication_challenge.AuthenticationChallenge._scanAuthParam(scanner, params);
          let beforeComma = scanner.position;
          while (scanner.scan(",")) {
            scanner.scan(scan.whitespace);
            if (scanner.matches(",") || scanner.isDone) continue;
            scanner.expect(scan.token, {name: "a token"});
            let name = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
            scanner.scan(scan.whitespace);
            if (!scanner.scan("=")) {
              scanner.position = beforeComma;
              break;
            }
            scanner.scan(scan.whitespace);
            if (scanner.scan(scan.token)) {
              params[$_set](name, dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)));
            } else {
              params[$_set](name, scan.expectQuotedString(scanner, {name: "a token or a quoted string"}));
            }
            scanner.scan(scan.whitespace);
            beforeComma = scanner.position;
          }
          return new authentication_challenge.AuthenticationChallenge.new(scheme, params);
        }, T.VoidToAuthenticationChallenge()));
        scanner.expectDone();
        return challenges;
      }, T.VoidToListOfAuthenticationChallenge()));
    }
    static parse(challenge) {
      return utils$.wrapFormatException(authentication_challenge.AuthenticationChallenge, "authentication challenge", challenge, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(challenge);
        scanner.scan(scan.whitespace);
        let scheme = authentication_challenge.AuthenticationChallenge._scanScheme(scanner);
        let params = new (T.IdentityMapOfString$String()).new();
        scan.parseList(dart.void, scanner, dart.fn(() => authentication_challenge.AuthenticationChallenge._scanAuthParam(scanner, params), T.VoidTovoid()));
        scanner.expectDone();
        return new authentication_challenge.AuthenticationChallenge.new(scheme, params);
      }, T.VoidToAuthenticationChallenge()));
    }
    static ['_#parse#tearOff'](challenge) {
      return authentication_challenge.AuthenticationChallenge.parse(challenge);
    }
    static _scanScheme(scanner, opts) {
      let whitespaceName = opts && 'whitespaceName' in opts ? opts.whitespaceName : null;
      scanner.expect(scan.token, {name: "a token"});
      let scheme = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))[$toLowerCase]();
      scanner.scan(scan.whitespace);
      if (scanner.lastMatch == null || !dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))[$contains](" ")) {
        scanner.expect(" ", {name: whitespaceName});
      }
      return scheme;
    }
    static _scanAuthParam(scanner, params) {
      scanner.expect(scan.token, {name: "a token"});
      let name = dart.nullCheck(scanner.lastMatch)._get(0);
      scanner.scan(scan.whitespace);
      scanner.expect("=");
      scanner.scan(scan.whitespace);
      if (scanner.scan(scan.token)) {
        params[$_set](name, dart.nullCheck(scanner.lastMatch)._get(0));
      } else {
        params[$_set](name, scan.expectQuotedString(scanner, {name: "a token or a quoted string"}));
      }
      scanner.scan(scan.whitespace);
    }
    static ['_#new#tearOff'](scheme, parameters) {
      return new authentication_challenge.AuthenticationChallenge.new(scheme, parameters);
    }
  };
  (authentication_challenge.AuthenticationChallenge.new = function(scheme, parameters) {
    this[scheme$] = scheme;
    this[parameters$] = new (T.UnmodifiableMapViewOfString$String()).new(new (T.CaseInsensitiveMapOfString()).from(parameters));
    ;
  }).prototype = authentication_challenge.AuthenticationChallenge.prototype;
  dart.addTypeTests(authentication_challenge.AuthenticationChallenge);
  dart.addTypeCaches(authentication_challenge.AuthenticationChallenge);
  dart.setStaticMethodSignature(authentication_challenge.AuthenticationChallenge, () => ['parseHeader', 'parse', '_scanScheme', '_scanAuthParam']);
  dart.setLibraryUri(authentication_challenge.AuthenticationChallenge, I[33]);
  dart.setFieldSignature(authentication_challenge.AuthenticationChallenge, () => ({
    __proto__: dart.getFields(authentication_challenge.AuthenticationChallenge.__proto__),
    scheme: dart.finalFieldType(core.String),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  const _is_CaseInsensitiveMap_default = Symbol('_is_CaseInsensitiveMap_default');
  case_insensitive_map.CaseInsensitiveMap$ = dart.generic(V => {
    class CaseInsensitiveMap extends canonicalized_map.CanonicalizedMap$(core.String, core.String, V) {
      static ['_#new#tearOff'](V) {
        return new (case_insensitive_map.CaseInsensitiveMap$(V)).new();
      }
      static ['_#from#tearOff'](V, other) {
        return new (case_insensitive_map.CaseInsensitiveMap$(V)).from(other);
      }
    }
    (CaseInsensitiveMap.new = function() {
      CaseInsensitiveMap.__proto__.new.call(this, dart.fn(key => key[$toLowerCase](), T.StringToString()));
      ;
    }).prototype = CaseInsensitiveMap.prototype;
    (CaseInsensitiveMap.from = function(other) {
      CaseInsensitiveMap.__proto__.from.call(this, other, dart.fn(key => key[$toLowerCase](), T.StringToString()));
      ;
    }).prototype = CaseInsensitiveMap.prototype;
    dart.addTypeTests(CaseInsensitiveMap);
    CaseInsensitiveMap.prototype[_is_CaseInsensitiveMap_default] = true;
    dart.addTypeCaches(CaseInsensitiveMap);
    dart.setLibraryUri(CaseInsensitiveMap, I[34]);
    return CaseInsensitiveMap;
  });
  case_insensitive_map.CaseInsensitiveMap = case_insensitive_map.CaseInsensitiveMap$();
  dart.addTypeTests(case_insensitive_map.CaseInsensitiveMap, _is_CaseInsensitiveMap_default);
  chunked_coding.ChunkedCodingCodec = class ChunkedCodingCodec extends convert.Codec$(core.List$(core.int), core.List$(core.int)) {
    get encoder() {
      return encoder.chunkedCodingEncoder;
    }
    get decoder() {
      return decoder.chunkedCodingDecoder;
    }
    static ['_#_#tearOff']() {
      return new chunked_coding.ChunkedCodingCodec.__();
    }
  };
  (chunked_coding.ChunkedCodingCodec.__ = function() {
    chunked_coding.ChunkedCodingCodec.__proto__.new.call(this);
    ;
  }).prototype = chunked_coding.ChunkedCodingCodec.prototype;
  dart.addTypeTests(chunked_coding.ChunkedCodingCodec);
  dart.addTypeCaches(chunked_coding.ChunkedCodingCodec);
  dart.setGetterSignature(chunked_coding.ChunkedCodingCodec, () => ({
    __proto__: dart.getGetters(chunked_coding.ChunkedCodingCodec.__proto__),
    encoder: encoder.ChunkedCodingEncoder,
    decoder: decoder.ChunkedCodingDecoder
  }));
  dart.setLibraryUri(chunked_coding.ChunkedCodingCodec, I[35]);
  dart.defineLazy(chunked_coding, {
    /*chunked_coding.chunkedCoding*/get chunkedCoding() {
      return C[216] || CT.C216;
    }
  }, false);
  http_date.formatHttpDate = function formatHttpDate(date) {
    let t13;
    date = date.toUtc();
    let buffer = (t13 = new core.StringBuffer.new(), (() => {
      t13.write(http_date._weekdays[$_get](date.weekday - 1));
      t13.write(", ");
      t13.write(date.day <= 9 ? "0" : "");
      t13.write(date.day[$toString]());
      t13.write(" ");
      t13.write(http_date._months[$_get](date.month - 1));
      t13.write(" ");
      t13.write(date.year[$toString]());
      t13.write(date.hour <= 9 ? " 0" : " ");
      t13.write(date.hour[$toString]());
      t13.write(date.minute <= 9 ? ":0" : ":");
      t13.write(date.minute[$toString]());
      t13.write(date.second <= 9 ? ":0" : ":");
      t13.write(date.second[$toString]());
      t13.write(" GMT");
      return t13;
    })());
    return buffer.toString();
  };
  http_date.parseHttpDate = function parseHttpDate(date) {
    return utils$.wrapFormatException(core.DateTime, "HTTP date", date, dart.fn(() => {
      let scanner = new string_scanner.StringScanner.new(date);
      if (scanner.scan(http_date._longWeekdayRegExp)) {
        scanner.expect(", ");
        let day = http_date._parseInt(scanner, 2);
        scanner.expect("-");
        let month = http_date._parseMonth(scanner);
        scanner.expect("-");
        let year = 1900 + http_date._parseInt(scanner, 2);
        scanner.expect(" ");
        let time = http_date._parseTime(scanner);
        scanner.expect(" GMT");
        scanner.expectDone();
        return http_date._makeDateTime(year, month, day, time);
      }
      scanner.expect(http_date._shortWeekdayRegExp);
      if (scanner.scan(", ")) {
        let day = http_date._parseInt(scanner, 2);
        scanner.expect(" ");
        let month = http_date._parseMonth(scanner);
        scanner.expect(" ");
        let year = http_date._parseInt(scanner, 4);
        scanner.expect(" ");
        let time = http_date._parseTime(scanner);
        scanner.expect(" GMT");
        scanner.expectDone();
        return http_date._makeDateTime(year, month, day, time);
      }
      scanner.expect(" ");
      let month = http_date._parseMonth(scanner);
      scanner.expect(" ");
      let day = scanner.scan(" ") ? http_date._parseInt(scanner, 1) : http_date._parseInt(scanner, 2);
      scanner.expect(" ");
      let time = http_date._parseTime(scanner);
      scanner.expect(" ");
      let year = http_date._parseInt(scanner, 4);
      scanner.expectDone();
      return http_date._makeDateTime(year, month, day, time);
    }, T.VoidToDateTime()));
  };
  http_date._parseMonth = function _parseMonth(scanner) {
    scanner.expect(http_date._monthRegExp);
    return http_date._months[$indexOf](dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))) + 1;
  };
  http_date._parseInt = function _parseInt(scanner, digits) {
    scanner.expect(http_date._digitRegExp);
    if (dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)).length !== digits) {
      scanner.error("expected a " + dart.str(digits) + "-digit number.");
    }
    return core.int.parse(dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)));
  };
  http_date._parseTime = function _parseTime(scanner) {
    let hours = http_date._parseInt(scanner, 2);
    if (hours >= 24) scanner.error("hours may not be greater than 24.");
    scanner.expect(":");
    let minutes = http_date._parseInt(scanner, 2);
    if (minutes >= 60) scanner.error("minutes may not be greater than 60.");
    scanner.expect(":");
    let seconds = http_date._parseInt(scanner, 2);
    if (seconds >= 60) scanner.error("seconds may not be greater than 60.");
    return new core.DateTime.new(1, 1, 1, hours, minutes, seconds);
  };
  http_date._makeDateTime = function _makeDateTime(year, month, day, time) {
    let dateTime = new core.DateTime.utc(year, month, day, time.hour, time.minute, time.second);
    if (dateTime.month !== month) {
      dart.throw(new core.FormatException.new("invalid day '" + dart.str(day) + "' for month '" + dart.str(month) + "'."));
    }
    return dateTime;
  };
  dart.defineLazy(http_date, {
    /*http_date._weekdays*/get _weekdays() {
      return C[217] || CT.C217;
    },
    /*http_date._months*/get _months() {
      return C[218] || CT.C218;
    },
    /*http_date._shortWeekdayRegExp*/get _shortWeekdayRegExp() {
      return core.RegExp.new("Mon|Tue|Wed|Thu|Fri|Sat|Sun");
    },
    /*http_date._longWeekdayRegExp*/get _longWeekdayRegExp() {
      return core.RegExp.new("Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday");
    },
    /*http_date._monthRegExp*/get _monthRegExp() {
      return core.RegExp.new("Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec");
    },
    /*http_date._digitRegExp*/get _digitRegExp() {
      return core.RegExp.new("\\d+");
    }
  }, false);
  var type$ = dart.privateName(media_type, "MediaType.type");
  var subtype$ = dart.privateName(media_type, "MediaType.subtype");
  var parameters$0 = dart.privateName(media_type, "MediaType.parameters");
  media_type.MediaType = class MediaType extends core.Object {
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get subtype() {
      return this[subtype$];
    }
    set subtype(value) {
      super.subtype = value;
    }
    get parameters() {
      return this[parameters$0];
    }
    set parameters(value) {
      super.parameters = value;
    }
    get mimeType() {
      return this.type + "/" + this.subtype;
    }
    static parse(mediaType) {
      return utils$.wrapFormatException(media_type.MediaType, "media type", mediaType, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(mediaType);
        scanner.scan(scan.whitespace);
        scanner.expect(scan.token);
        let type = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
        scanner.expect("/");
        scanner.expect(scan.token);
        let subtype = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
        scanner.scan(scan.whitespace);
        let parameters = new (T.IdentityMapOfString$String()).new();
        while (scanner.scan(";")) {
          scanner.scan(scan.whitespace);
          scanner.expect(scan.token);
          let attribute = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
          scanner.expect("=");
          let value = null;
          if (scanner.scan(scan.token)) {
            value = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
          } else {
            value = scan.expectQuotedString(scanner);
          }
          scanner.scan(scan.whitespace);
          parameters[$_set](attribute, value);
        }
        scanner.expectDone();
        return new media_type.MediaType.new(type, subtype, parameters);
      }, T.VoidToMediaType()));
    }
    static ['_#parse#tearOff'](mediaType) {
      return media_type.MediaType.parse(mediaType);
    }
    static ['_#new#tearOff'](type, subtype, parameters = null) {
      return new media_type.MediaType.new(type, subtype, parameters);
    }
    change(opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let subtype = opts && 'subtype' in opts ? opts.subtype : null;
      let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let clearParameters = opts && 'clearParameters' in opts ? opts.clearParameters : false;
      if (mimeType != null) {
        if (type != null) {
          dart.throw(new core.ArgumentError.new("You may not pass both [type] and [mimeType]."));
        } else if (subtype != null) {
          dart.throw(new core.ArgumentError.new("You may not pass both [subtype] and " + "[mimeType]."));
        }
        let segments = mimeType[$split]("/");
        if (segments[$length] !== 2) {
          dart.throw(new core.FormatException.new("Invalid mime type \"" + dart.str(mimeType) + "\"."));
        }
        type = segments[$_get](0);
        subtype = segments[$_get](1);
      }
      type == null ? type = this.type : null;
      subtype == null ? subtype = this.subtype : null;
      parameters == null ? parameters = new (T.IdentityMapOfString$String()).new() : null;
      if (!clearParameters) {
        let newParameters = parameters;
        parameters = T.LinkedHashMapOfString$String().from(this.parameters);
        parameters[$addAll](newParameters);
      }
      return new media_type.MediaType.new(type, subtype, parameters);
    }
    toString() {
      let t13;
      let buffer = (t13 = new core.StringBuffer.new(), (() => {
        t13.write(this.type);
        t13.write("/");
        t13.write(this.subtype);
        return t13;
      })());
      this.parameters[$forEach](dart.fn((attribute, value) => {
        let t13;
        buffer.write("; " + attribute + "=");
        if (scan.nonToken.hasMatch(value)) {
          t13 = buffer;
          (() => {
            t13.write("\"");
            t13.write(value[$replaceAllMapped](media_type._escapedChar, dart.fn(match => "\\" + dart.str(match._get(0)), T.MatchToString())));
            t13.write("\"");
            return t13;
          })();
        } else {
          buffer.write(value);
        }
      }, T.StringAndStringTovoid()));
      return buffer.toString();
    }
  };
  (media_type.MediaType.new = function(type, subtype, parameters = null) {
    this[type$] = type[$toLowerCase]();
    this[subtype$] = subtype[$toLowerCase]();
    this[parameters$0] = new (T.UnmodifiableMapViewOfString$String()).new(parameters == null ? new (T.IdentityMapOfString$String()).new() : new (T.CaseInsensitiveMapOfString()).from(parameters));
    ;
  }).prototype = media_type.MediaType.prototype;
  dart.addTypeTests(media_type.MediaType);
  dart.addTypeCaches(media_type.MediaType);
  dart.setMethodSignature(media_type.MediaType, () => ({
    __proto__: dart.getMethods(media_type.MediaType.__proto__),
    change: dart.fnType(media_type.MediaType, [], {clearParameters: core.bool, mimeType: dart.nullable(core.String), parameters: dart.nullable(core.Map$(core.String, core.String)), subtype: dart.nullable(core.String), type: dart.nullable(core.String)}, {})
  }));
  dart.setStaticMethodSignature(media_type.MediaType, () => ['parse']);
  dart.setGetterSignature(media_type.MediaType, () => ({
    __proto__: dart.getGetters(media_type.MediaType.__proto__),
    mimeType: core.String
  }));
  dart.setLibraryUri(media_type.MediaType, I[36]);
  dart.setFieldSignature(media_type.MediaType, () => ({
    __proto__: dart.getFields(media_type.MediaType.__proto__),
    type: dart.finalFieldType(core.String),
    subtype: dart.finalFieldType(core.String),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  dart.defineExtensionMethods(media_type.MediaType, ['toString']);
  dart.defineLazy(media_type, {
    /*media_type._escapedChar*/get _escapedChar() {
      return core.RegExp.new("[\"\\x00-\\x1F\\x7F]");
    }
  }, false);
  scan.parseList = function parseList(T, scanner, parseElement) {
    let result = _interceptors.JSArray$(T).of([]);
    while (scanner.scan(",")) {
      scanner.scan(scan.whitespace);
    }
    result[$add](parseElement());
    scanner.scan(scan.whitespace);
    while (scanner.scan(",")) {
      scanner.scan(scan.whitespace);
      if (scanner.matches(",") || scanner.isDone) continue;
      result[$add](parseElement());
      scanner.scan(scan.whitespace);
    }
    return result;
  };
  scan.expectQuotedString = function expectQuotedString(scanner, opts) {
    let name = opts && 'name' in opts ? opts.name : "quoted string";
    scanner.expect(scan._quotedString, {name: name});
    let string = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
    return string[$substring](1, string.length - 1)[$replaceAllMapped](scan._quotedPair, dart.fn(match => dart.nullCheck(match._get(1)), T.MatchToString()));
  };
  dart.defineLazy(scan, {
    /*scan.token*/get token() {
      return core.RegExp.new("[^()<>@,;:\"\\\\/[\\]?={} \\t\\x00-\\x1F\\x7F]+");
    },
    /*scan._lws*/get _lws() {
      return core.RegExp.new("(?:\\r\\n)?[ \\t]+");
    },
    /*scan._quotedString*/get _quotedString() {
      return core.RegExp.new("\"(?:[^\"\\x00-\\x1F\\x7F]|\\\\.)*\"");
    },
    /*scan._quotedPair*/get _quotedPair() {
      return core.RegExp.new("\\\\(.)");
    },
    /*scan.nonToken*/get nonToken() {
      return core.RegExp.new("[()<>@,;:\"\\\\/\\[\\]?={} \\t\\x00-\\x1F\\x7F]");
    },
    /*scan.whitespace*/get whitespace() {
      return core.RegExp.new("(?:" + scan._lws.pattern + ")*");
    }
  }, false);
  utils$.wrapFormatException = function wrapFormatException(T, name, value, body) {
    try {
      return body();
    } catch (e) {
      let ex = dart.getThrown(e);
      if (span_exception.SourceSpanFormatException.is(ex)) {
        let error = ex;
        dart.throw(new span_exception.SourceSpanFormatException.new("Invalid " + name + ": " + error.message, error.span, error.source));
      } else if (core.FormatException.is(ex)) {
        let error = ex;
        dart.throw(new core.FormatException.new("Invalid " + name + " \"" + value + "\": " + error.message, error.source, error.offset));
      } else
        throw e;
    }
  };
  var _decode = dart.privateName(decoder, "_decode");
  var _state = dart.privateName(decoder, "_state");
  decoder.ChunkedCodingDecoder = class ChunkedCodingDecoder extends convert.Converter$(core.List$(core.int), core.List$(core.int)) {
    static ['_#_#tearOff']() {
      return new decoder.ChunkedCodingDecoder.__();
    }
    convert(input) {
      T.ListOfint().as(input);
      let sink = new decoder._Sink.new(T.StreamControllerOfListOfint().new());
      let output = sink[_decode](input, 0, input[$length]);
      if (sink[_state][$_equals](decoder._State.end)) return output;
      dart.throw(new core.FormatException.new("Input ended unexpectedly.", input, input[$length]));
    }
    startChunkedConversion(sink) {
      T.SinkOfListOfint().as(sink);
      return new decoder._Sink.new(sink);
    }
  };
  (decoder.ChunkedCodingDecoder.__ = function() {
    decoder.ChunkedCodingDecoder.__proto__.new.call(this);
    ;
  }).prototype = decoder.ChunkedCodingDecoder.prototype;
  dart.addTypeTests(decoder.ChunkedCodingDecoder);
  dart.addTypeCaches(decoder.ChunkedCodingDecoder);
  dart.setMethodSignature(decoder.ChunkedCodingDecoder, () => ({
    __proto__: dart.getMethods(decoder.ChunkedCodingDecoder.__proto__),
    convert: dart.fnType(core.List$(core.int), [dart.nullable(core.Object)]),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(decoder.ChunkedCodingDecoder, I[37]);
  var ___Sink__size = dart.privateName(decoder, "_#_Sink#_size");
  var _sink$ = dart.privateName(decoder, "_sink");
  var _size = dart.privateName(decoder, "_size");
  var _close = dart.privateName(decoder, "_close");
  var _digitForByte = dart.privateName(decoder, "_digitForByte");
  var _State__name = dart.privateName(decoder, "_State._name");
  decoder._Sink = class _Sink extends convert.ByteConversionSinkBase {
    get [_size]() {
      let t15;
      t15 = this[___Sink__size];
      return t15 == null ? dart.throw(new _internal.LateError.fieldNI("_size")) : t15;
    }
    set [_size](_size$35param) {
      this[___Sink__size] = _size$35param;
    }
    static ['_#new#tearOff'](_sink) {
      return new decoder._Sink.new(_sink);
    }
    add(chunk) {
      T.ListOfint().as(chunk);
      return this.addSlice(chunk, 0, chunk[$length], false);
    }
    addSlice(chunk, start, end, isLast) {
      core.RangeError.checkValidRange(start, end, chunk[$length]);
      let output = this[_decode](chunk, start, end);
      if (output[$isNotEmpty]) this[_sink$].add(output);
      if (isLast) this[_close](chunk, end);
    }
    close() {
      return this[_close]();
    }
    [_close](chunk = null, index = null) {
      if (!this[_state][$_equals](decoder._State.end)) {
        dart.throw(new core.FormatException.new("Input ended unexpectedly.", chunk, index));
      }
      this[_sink$].close();
    }
    [_decode](bytes, start, end) {
      function assertCurrentChar(char, name) {
        if (bytes[$_get](start) !== char) {
          dart.throw(new core.FormatException.new("Expected " + name + ".", bytes, start));
        }
      }
      dart.fn(assertCurrentChar, T.intAndStringTovoid());
      let buffer = new typed_buffer.Uint8Buffer.new();
      while (start !== end) {
        switch (this[_state]) {
          case C[219] || CT.C219:
            {
              this[_size] = this[_digitForByte](bytes, start);
              this[_state] = decoder._State.size;
              start = start + 1;
              break;
            }
          case C[220] || CT.C220:
            {
              if (bytes[$_get](start) === 13) {
                this[_state] = decoder._State.sizeBeforeLF;
              } else {
                this[_size] = (this[_size] << 4 >>> 0) + this[_digitForByte](bytes, start);
              }
              start = start + 1;
              break;
            }
          case C[221] || CT.C221:
            {
              assertCurrentChar(10, "LF");
              this[_state] = this[_size] === 0 ? decoder._State.endBeforeCR : decoder._State.body;
              start = start + 1;
              break;
            }
          case C[222] || CT.C222:
            {
              let chunkEnd = math.min(core.int, end, start + this[_size]);
              buffer.addAll(bytes, start, chunkEnd);
              this[_size] = this[_size] - (chunkEnd - start);
              start = chunkEnd;
              if (this[_size] === 0) this[_state] = decoder._State.bodyBeforeCR;
              break;
            }
          case C[223] || CT.C223:
            {
              assertCurrentChar(13, "CR");
              this[_state] = decoder._State.bodyBeforeLF;
              start = start + 1;
              break;
            }
          case C[224] || CT.C224:
            {
              assertCurrentChar(10, "LF");
              this[_state] = decoder._State.boundary;
              start = start + 1;
              break;
            }
          case C[225] || CT.C225:
            {
              assertCurrentChar(13, "CR");
              this[_state] = decoder._State.endBeforeLF;
              start = start + 1;
              break;
            }
          case C[226] || CT.C226:
            {
              assertCurrentChar(10, "LF");
              this[_state] = decoder._State.end;
              start = start + 1;
              break;
            }
          case C[227] || CT.C227:
            {
              dart.throw(new core.FormatException.new("Expected no more data.", bytes, start));
            }
        }
      }
      return buffer.buffer[$asUint8List](0, buffer.length);
    }
    [_digitForByte](bytes, index) {
      let byte = bytes[$_get](index);
      let digit = (48 ^ byte) >>> 0;
      if (digit <= 9) {
        if (digit >= 0) return digit;
      } else {
        let letter = (32 | byte) >>> 0;
        if (97 <= letter && letter <= 102) return letter - 97 + 10;
      }
      dart.throw(new core.FormatException.new("Invalid hexadecimal byte 0x" + byte[$toRadixString](16)[$toUpperCase]() + ".", bytes, index));
    }
  };
  (decoder._Sink.new = function(_sink) {
    this[_state] = decoder._State.boundary;
    this[___Sink__size] = null;
    this[_sink$] = _sink;
    decoder._Sink.__proto__.new.call(this);
    ;
  }).prototype = decoder._Sink.prototype;
  dart.addTypeTests(decoder._Sink);
  dart.addTypeCaches(decoder._Sink);
  dart.setMethodSignature(decoder._Sink, () => ({
    __proto__: dart.getMethods(decoder._Sink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, []),
    [_close]: dart.fnType(dart.void, [], [dart.nullable(core.List$(core.int)), dart.nullable(core.int)]),
    [_decode]: dart.fnType(typed_data.Uint8List, [core.List$(core.int), core.int, core.int]),
    [_digitForByte]: dart.fnType(core.int, [core.List$(core.int), core.int])
  }));
  dart.setGetterSignature(decoder._Sink, () => ({
    __proto__: dart.getGetters(decoder._Sink.__proto__),
    [_size]: core.int
  }));
  dart.setSetterSignature(decoder._Sink, () => ({
    __proto__: dart.getSetters(decoder._Sink.__proto__),
    [_size]: core.int
  }));
  dart.setLibraryUri(decoder._Sink, I[37]);
  dart.setFieldSignature(decoder._Sink, () => ({
    __proto__: dart.getFields(decoder._Sink.__proto__),
    [_sink$]: dart.finalFieldType(core.Sink$(core.List$(core.int))),
    [_state]: dart.fieldType(decoder._State),
    [___Sink__size]: dart.fieldType(dart.nullable(core.int))
  }));
  var _name = dart.privateName(decoder, "_name");
  const _name$ = _State__name;
  decoder._State = class _State extends core.Object {
    get [_name]() {
      return this[_name$];
    }
    set [_name](value) {
      super[_name] = value;
    }
    static ['_#_#tearOff'](_name) {
      return new decoder._State.__(_name);
    }
    toString() {
      return this[_name];
    }
  };
  (decoder._State.__ = function(_name) {
    this[_name$] = _name;
    ;
  }).prototype = decoder._State.prototype;
  dart.addTypeTests(decoder._State);
  dart.addTypeCaches(decoder._State);
  dart.setLibraryUri(decoder._State, I[37]);
  dart.setFieldSignature(decoder._State, () => ({
    __proto__: dart.getFields(decoder._State.__proto__),
    [_name]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(decoder._State, () => ['boundary', 'size', 'sizeBeforeLF', 'body', 'bodyBeforeCR', 'bodyBeforeLF', 'endBeforeCR', 'endBeforeLF', 'end']);
  dart.defineExtensionMethods(decoder._State, ['toString']);
  dart.defineLazy(decoder._State, {
    /*decoder._State.boundary*/get boundary() {
      return C[219] || CT.C219;
    },
    /*decoder._State.size*/get size() {
      return C[220] || CT.C220;
    },
    /*decoder._State.sizeBeforeLF*/get sizeBeforeLF() {
      return C[221] || CT.C221;
    },
    /*decoder._State.body*/get body() {
      return C[222] || CT.C222;
    },
    /*decoder._State.bodyBeforeCR*/get bodyBeforeCR() {
      return C[223] || CT.C223;
    },
    /*decoder._State.bodyBeforeLF*/get bodyBeforeLF() {
      return C[224] || CT.C224;
    },
    /*decoder._State.endBeforeCR*/get endBeforeCR() {
      return C[225] || CT.C225;
    },
    /*decoder._State.endBeforeLF*/get endBeforeLF() {
      return C[226] || CT.C226;
    },
    /*decoder._State.end*/get end() {
      return C[227] || CT.C227;
    }
  }, false);
  dart.defineLazy(decoder, {
    /*decoder.chunkedCodingDecoder*/get chunkedCodingDecoder() {
      return C[228] || CT.C228;
    }
  }, false);
  encoder.ChunkedCodingEncoder = class ChunkedCodingEncoder extends convert.Converter$(core.List$(core.int), core.List$(core.int)) {
    static ['_#_#tearOff']() {
      return new encoder.ChunkedCodingEncoder.__();
    }
    convert(input) {
      T.ListOfint().as(input);
      return encoder._convert(input, 0, input[$length], {isLast: true});
    }
    startChunkedConversion(sink) {
      T.SinkOfListOfint().as(sink);
      return new encoder._Sink.new(sink);
    }
  };
  (encoder.ChunkedCodingEncoder.__ = function() {
    encoder.ChunkedCodingEncoder.__proto__.new.call(this);
    ;
  }).prototype = encoder.ChunkedCodingEncoder.prototype;
  dart.addTypeTests(encoder.ChunkedCodingEncoder);
  dart.addTypeCaches(encoder.ChunkedCodingEncoder);
  dart.setMethodSignature(encoder.ChunkedCodingEncoder, () => ({
    __proto__: dart.getMethods(encoder.ChunkedCodingEncoder.__proto__),
    convert: dart.fnType(core.List$(core.int), [dart.nullable(core.Object)]),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder.ChunkedCodingEncoder, I[38]);
  var _sink$0 = dart.privateName(encoder, "_sink");
  encoder._Sink = class _Sink extends convert.ByteConversionSinkBase {
    static ['_#new#tearOff'](_sink) {
      return new encoder._Sink.new(_sink);
    }
    add(chunk) {
      T.ListOfint().as(chunk);
      this[_sink$0].add(encoder._convert(chunk, 0, chunk[$length]));
    }
    addSlice(chunk, start, end, isLast) {
      core.RangeError.checkValidRange(start, end, chunk[$length]);
      this[_sink$0].add(encoder._convert(chunk, start, end, {isLast: isLast}));
      if (isLast) this[_sink$0].close();
    }
    close() {
      this[_sink$0].add(encoder._doneChunk);
      this[_sink$0].close();
    }
  };
  (encoder._Sink.new = function(_sink) {
    this[_sink$0] = _sink;
    encoder._Sink.__proto__.new.call(this);
    ;
  }).prototype = encoder._Sink.prototype;
  dart.addTypeTests(encoder._Sink);
  dart.addTypeCaches(encoder._Sink);
  dart.setMethodSignature(encoder._Sink, () => ({
    __proto__: dart.getMethods(encoder._Sink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(encoder._Sink, I[38]);
  dart.setFieldSignature(encoder._Sink, () => ({
    __proto__: dart.getFields(encoder._Sink.__proto__),
    [_sink$0]: dart.finalFieldType(core.Sink$(core.List$(core.int)))
  }));
  encoder._convert = function _convert(bytes, start, end, opts) {
    let t15, t15$, t15$0, t15$1;
    let isLast = opts && 'isLast' in opts ? opts.isLast : false;
    if (end === start) return isLast ? encoder._doneChunk : C[229] || CT.C229;
    let size = end - start;
    let sizeInHex = size[$toRadixString](16);
    let footerSize = isLast ? encoder._doneChunk[$length] : 0;
    let list = _native_typed_data.NativeUint8List.new(sizeInHex.length + 4 + size + footerSize);
    list[$setRange](0, sizeInHex.length, sizeInHex[$codeUnits]);
    let cursor = sizeInHex.length;
    list[$_set]((t15 = cursor, cursor = t15 + 1, t15), 13);
    list[$_set]((t15$ = cursor, cursor = t15$ + 1, t15$), 10);
    list[$setRange](cursor, cursor + end - start, bytes, start);
    cursor = cursor + (end - start);
    list[$_set]((t15$0 = cursor, cursor = t15$0 + 1, t15$0), 13);
    list[$_set]((t15$1 = cursor, cursor = t15$1 + 1, t15$1), 10);
    if (isLast) {
      list[$setRange](list[$length] - footerSize, list[$length], encoder._doneChunk);
    }
    return list;
  };
  dart.defineLazy(encoder, {
    /*encoder.chunkedCodingEncoder*/get chunkedCodingEncoder() {
      return C[230] || CT.C230;
    },
    /*encoder._doneChunk*/get _doneChunk() {
      return _native_typed_data.NativeUint8List.fromList(T.JSArrayOfint().of([48, 13, 10, 13, 10]));
    }
  }, false);
  dart.defineLazy(charcodes, {
    /*charcodes.$lf*/get $lf() {
      return 10;
    },
    /*charcodes.$cr*/get $cr() {
      return 13;
    },
    /*charcodes.$0*/get $0() {
      return 48;
    },
    /*charcodes.$1*/get $1() {
      return 49;
    },
    /*charcodes.$3*/get $3() {
      return 51;
    },
    /*charcodes.$4*/get $4() {
      return 52;
    },
    /*charcodes.$7*/get $7() {
      return 55;
    },
    /*charcodes.$A*/get $A() {
      return 65;
    },
    /*charcodes.$q*/get $q() {
      return 113;
    },
    /*charcodes.$a*/get $a() {
      return 97;
    },
    /*charcodes.$f*/get $f() {
      return 102;
    }
  }, false);
  var _table = dart.privateName(typed_queue, "_TypedQueue._table");
  var _head = dart.privateName(typed_queue, "_TypedQueue._head");
  var _tail = dart.privateName(typed_queue, "_TypedQueue._tail");
  var _table$ = dart.privateName(typed_queue, "_table");
  var _head$ = dart.privateName(typed_queue, "_head");
  var _tail$ = dart.privateName(typed_queue, "_tail");
  var _createBuffer = dart.privateName(typed_queue, "_createBuffer");
  var _createList = dart.privateName(typed_queue, "_createList");
  var _writeToList = dart.privateName(typed_queue, "_writeToList");
  var _growAtCapacity = dart.privateName(typed_queue, "_growAtCapacity");
  var _growTo = dart.privateName(typed_queue, "_growTo");
  var _defaultValue = dart.privateName(typed_queue, "_defaultValue");
  const _is__TypedQueue_default = Symbol('_is__TypedQueue_default');
  typed_queue._TypedQueue$ = dart.generic((E, L) => {
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(core.Iterable$(E)))();
    var __t$ListOfE = () => (__t$ListOfE = dart.constFn(core.List$(E)))();
    var __t$EN = () => (__t$EN = dart.constFn(dart.nullable(E)))();
    const Object_ListMixin$36 = class Object_ListMixin extends core.Object {};
    (Object_ListMixin$36.new = function() {
    }).prototype = Object_ListMixin$36.prototype;
    dart.applyMixin(Object_ListMixin$36, collection.ListMixin$(E));
    class _TypedQueue extends Object_ListMixin$36 {
      get [_table$]() {
        return this[_table];
      }
      set [_table$](value) {
        this[_table] = value;
      }
      get [_head$]() {
        return this[_head];
      }
      set [_head$](value) {
        this[_head] = value;
      }
      get [_tail$]() {
        return this[_tail];
      }
      set [_tail$](value) {
        this[_tail] = value;
      }
      get length() {
        return (this[_tail$] - this[_head$] & this[_table$][$length] - 1) >>> 0;
      }
      toList(opts) {
        let growable = opts && 'growable' in opts ? opts.growable : true;
        let list = growable ? this[_createBuffer](this.length) : this[_createList](this.length);
        this[_writeToList](list);
        return list;
      }
      cast(T) {
        if (queue_list.QueueList$(T).is(this)) return queue_list.QueueList$(T).as(this);
        dart.throw(new core.UnsupportedError.new(dart.str(this) + " cannot be cast to the desired type."));
      }
      retype(T) {
        return this.cast(T);
      }
      addLast(value) {
        E.as(value);
        this[_table$][$_set](this[_tail$], value);
        this[_tail$] = (this[_tail$] + 1 & this[_table$][$length] - 1) >>> 0;
        if (this[_head$] === this[_tail$]) this[_growAtCapacity]();
      }
      addFirst(value) {
        E.as(value);
        this[_head$] = (this[_head$] - 1 & this[_table$][$length] - 1) >>> 0;
        this[_table$][$_set](this[_head$], value);
        if (this[_head$] === this[_tail$]) this[_growAtCapacity]();
      }
      removeFirst() {
        if (this[_head$] === this[_tail$]) dart.throw(new core.StateError.new("No element"));
        let result = this[_table$][$_get](this[_head$]);
        this[_head$] = (this[_head$] + 1 & this[_table$][$length] - 1) >>> 0;
        return result;
      }
      removeLast() {
        if (this[_head$] === this[_tail$]) dart.throw(new core.StateError.new("No element"));
        this[_tail$] = (this[_tail$] - 1 & this[_table$][$length] - 1) >>> 0;
        return this[_table$][$_get](this[_tail$]);
      }
      add(value) {
        E.as(value);
        return this.addLast(value);
      }
      set length(value) {
        core.RangeError.checkNotNegative(value, "length");
        let delta = value - this.length;
        if (delta >= 0) {
          let needsToGrow = this[_table$][$length] <= value;
          if (needsToGrow) this[_growTo](value);
          this[_tail$] = (this[_tail$] + delta & this[_table$][$length] - 1) >>> 0;
          if (!needsToGrow) this.fillRange(value - delta, value, this[_defaultValue]);
        } else {
          this.removeRange(value, this.length);
        }
      }
      _get(index) {
        core.RangeError.checkValidIndex(index, this, null, this.length);
        return this[_table$][$_get]((this[_head$] + index & this[_table$][$length] - 1) >>> 0);
      }
      _set(index, value$) {
        let value = value$;
        E.as(value);
        core.RangeError.checkValidIndex(index, this);
        this[_table$][$_set]((this[_head$] + index & this[_table$][$length] - 1) >>> 0, value);
        return value$;
      }
      removeRange(start, end) {
        let length = this.length;
        core.RangeError.checkValidRange(start, end, length);
        if (start === 0) {
          this[_head$] = (this[_head$] + end & this[_table$][$length] - 1) >>> 0;
          return;
        }
        let elementsAfter = length - end;
        if (elementsAfter === 0) {
          this[_tail$] = (this[_head$] + start & this[_table$][$length] - 1) >>> 0;
          return;
        }
        let removedElements = end - start;
        if (start < elementsAfter) {
          this.setRange(removedElements, end, this);
          this[_head$] = (this[_head$] + removedElements & this[_table$][$length] - 1) >>> 0;
        } else {
          this.setRange(start, length - removedElements, this, end);
          this[_tail$] = (this[_tail$] - removedElements & this[_table$][$length] - 1) >>> 0;
        }
      }
      setRange(start, end, iterable, skipCount = 0) {
        __t$IterableOfE().as(iterable);
        core.RangeError.checkValidRange(start, end, this.length);
        if (start === end) return;
        let targetStart = (this[_head$] + start & this[_table$][$length] - 1) >>> 0;
        let targetEnd = (this[_head$] + end & this[_table$][$length] - 1) >>> 0;
        let targetIsContiguous = targetStart < targetEnd;
        if (iterable === this) {
          let sourceStart = (this[_head$] + skipCount & this[_table$][$length] - 1) >>> 0;
          let sourceEnd = (sourceStart + (end - start) & this[_table$][$length] - 1) >>> 0;
          if (sourceStart === targetStart) return;
          let sourceIsContiguous = sourceStart < sourceEnd;
          if (targetIsContiguous && sourceIsContiguous) {
            this[_table$][$setRange](targetStart, targetEnd, this[_table$], sourceStart);
          } else if (!targetIsContiguous && !sourceIsContiguous) {
            if (sourceStart > targetStart) {
              let startGap = sourceStart - targetStart;
              let firstEnd = this[_table$][$length] - startGap;
              this[_table$][$setRange](targetStart, firstEnd, this[_table$], sourceStart);
              this[_table$][$setRange](firstEnd, this[_table$][$length], this[_table$]);
              this[_table$][$setRange](0, targetEnd, this[_table$], startGap);
            } else if (sourceEnd < targetEnd) {
              let firstStart = targetEnd - sourceEnd;
              this[_table$][$setRange](firstStart, targetEnd, this[_table$]);
              this[_table$][$setRange](0, firstStart, this[_table$], this[_table$][$length] - firstStart);
              this[_table$][$setRange](targetStart, this[_table$][$length], this[_table$], sourceStart);
            }
          } else if (sourceStart < targetEnd) {
            if (sourceIsContiguous) {
              this[_table$][$setRange](targetStart, this[_table$][$length], this[_table$], sourceStart);
              this[_table$][$setRange](0, targetEnd, this[_table$], sourceStart + (this[_table$][$length] - targetStart));
            } else {
              let firstEnd = this[_table$][$length] - sourceStart;
              this[_table$][$setRange](targetStart, firstEnd, this[_table$], sourceStart);
              this[_table$][$setRange](firstEnd, targetEnd, this[_table$]);
            }
          } else {
            if (sourceIsContiguous) {
              this[_table$][$setRange](0, targetEnd, this[_table$], sourceStart + (this[_table$][$length] - targetStart));
              this[_table$][$setRange](targetStart, this[_table$][$length], this[_table$], sourceStart);
            } else {
              let firstStart = targetEnd - sourceEnd;
              this[_table$][$setRange](firstStart, targetEnd, this[_table$]);
              this[_table$][$setRange](targetStart, firstStart, this[_table$], sourceStart);
            }
          }
        } else if (targetIsContiguous) {
          this[_table$][$setRange](targetStart, targetEnd, iterable, skipCount);
        } else if (__t$ListOfE().is(iterable)) {
          this[_table$][$setRange](targetStart, this[_table$][$length], iterable, skipCount);
          this[_table$][$setRange](0, targetEnd, iterable, skipCount + (this[_table$][$length] - targetStart));
        } else {
          super.setRange(start, end, iterable, skipCount);
        }
      }
      fillRange(start, end, value = null) {
        __t$EN().as(value);
        let startInTable = (this[_head$] + start & this[_table$][$length] - 1) >>> 0;
        let endInTable = (this[_head$] + end & this[_table$][$length] - 1) >>> 0;
        if (startInTable <= endInTable) {
          this[_table$][$fillRange](startInTable, endInTable, value);
        } else {
          this[_table$][$fillRange](startInTable, this[_table$][$length], value);
          this[_table$][$fillRange](0, endInTable, value);
        }
      }
      sublist(start, end = null) {
        let length = this.length;
        let nonNullEnd = core.RangeError.checkValidRange(start, end, length);
        let list = this[_createList](nonNullEnd - start);
        this[_writeToList](list, start, nonNullEnd);
        return list;
      }
      [_writeToList](target, start = null, end = null) {
        start == null ? start = 0 : null;
        end == null ? end = this.length : null;
        if (!(target[$length] >= dart.notNull(end) - dart.notNull(start))) dart.assertFailed(null, I[39], 278, 12, "target.length >= end - start");
        if (!(dart.notNull(start) <= dart.notNull(end))) dart.assertFailed(null, I[39], 279, 12, "start <= end");
        let elementsToWrite = dart.notNull(end) - dart.notNull(start);
        let startInTable = (this[_head$] + dart.notNull(start) & this[_table$][$length] - 1) >>> 0;
        let endInTable = (this[_head$] + dart.notNull(end) & this[_table$][$length] - 1) >>> 0;
        if (startInTable <= endInTable) {
          target[$setRange](0, elementsToWrite, this[_table$], startInTable);
        } else {
          let firstPartSize = this[_table$][$length] - startInTable;
          target[$setRange](0, firstPartSize, this[_table$], startInTable);
          target[$setRange](firstPartSize, firstPartSize + endInTable, this[_table$], 0);
        }
        return elementsToWrite;
      }
      [_growAtCapacity]() {
        if (!(this[_head$] === this[_tail$])) dart.assertFailed(null, I[39], 297, 12, "_head == _tail");
        let newTable = this[_createList](this[_table$][$length] * 2);
        let partitionPoint = this[_table$][$length] - this[_head$];
        newTable[$setRange](0, partitionPoint, this[_table$], this[_head$]);
        if (partitionPoint !== this[_table$][$length]) {
          newTable[$setRange](partitionPoint, this[_table$][$length], this[_table$]);
        }
        this[_head$] = 0;
        this[_tail$] = this[_table$][$length];
        this[_table$] = newTable;
      }
      [_growTo](newElementCount) {
        if (!(newElementCount >= this.length)) dart.assertFailed(null, I[39], 316, 12, "newElementCount >= length");
        newElementCount = newElementCount + newElementCount[$rightShift](1);
        let newTable = this[_createList](typed_queue._nextPowerOf2(newElementCount));
        this[_tail$] = this[_writeToList](newTable);
        this[_table$] = newTable;
        this[_head$] = 0;
      }
    }
    (_TypedQueue.new = function(table) {
      this[_table] = L.as(table);
      this[_head] = 0;
      this[_tail] = 0;
      ;
    }).prototype = _TypedQueue.prototype;
    dart.addTypeTests(_TypedQueue);
    _TypedQueue.prototype[_is__TypedQueue_default] = true;
    dart.addTypeCaches(_TypedQueue);
    dart.setMethodSignature(_TypedQueue, () => ({
      __proto__: dart.getMethods(_TypedQueue.__proto__),
      cast: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      [$cast]: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      retype: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      addLast: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      addFirst: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      removeFirst: dart.fnType(E, []),
      _get: dart.fnType(E, [core.int]),
      [$_get]: dart.fnType(E, [core.int]),
      _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      sublist: dart.fnType(L, [core.int], [dart.nullable(core.int)]),
      [$sublist]: dart.fnType(L, [core.int], [dart.nullable(core.int)]),
      [_writeToList]: dart.fnType(core.int, [core.List$(E)], [dart.nullable(core.int), dart.nullable(core.int)]),
      [_growAtCapacity]: dart.fnType(dart.void, []),
      [_growTo]: dart.fnType(dart.void, [core.int])
    }));
    dart.setGetterSignature(_TypedQueue, () => ({
      __proto__: dart.getGetters(_TypedQueue.__proto__),
      length: core.int,
      [$length]: core.int
    }));
    dart.setSetterSignature(_TypedQueue, () => ({
      __proto__: dart.getSetters(_TypedQueue.__proto__),
      length: core.int,
      [$length]: core.int
    }));
    dart.setLibraryUri(_TypedQueue, I[40]);
    dart.setFieldSignature(_TypedQueue, () => ({
      __proto__: dart.getFields(_TypedQueue.__proto__),
      [_table$]: dart.fieldType(L),
      [_head$]: dart.fieldType(core.int),
      [_tail$]: dart.fieldType(core.int)
    }));
    dart.defineExtensionMethods(_TypedQueue, [
      'toList',
      'cast',
      'removeLast',
      'add',
      '_get',
      '_set',
      'removeRange',
      'setRange',
      'fillRange',
      'sublist'
    ]);
    dart.defineExtensionAccessors(_TypedQueue, ['length']);
    return _TypedQueue;
  });
  typed_queue._TypedQueue = typed_queue._TypedQueue$();
  dart.addTypeTests(typed_queue._TypedQueue, _is__TypedQueue_default);
  const _is__IntQueue_default = Symbol('_is__IntQueue_default');
  typed_queue._IntQueue$ = dart.generic(L => {
    class _IntQueue extends typed_queue._TypedQueue$(core.int, L) {
      get [_defaultValue]() {
        return 0;
      }
    }
    (_IntQueue.new = function(queue) {
      _IntQueue.__proto__.new.call(this, queue);
      ;
    }).prototype = _IntQueue.prototype;
    dart.addTypeTests(_IntQueue);
    _IntQueue.prototype[_is__IntQueue_default] = true;
    dart.addTypeCaches(_IntQueue);
    dart.setGetterSignature(_IntQueue, () => ({
      __proto__: dart.getGetters(_IntQueue.__proto__),
      [_defaultValue]: core.int
    }));
    dart.setLibraryUri(_IntQueue, I[40]);
    return _IntQueue;
  });
  typed_queue._IntQueue = typed_queue._IntQueue$();
  dart.addTypeTests(typed_queue._IntQueue, _is__IntQueue_default);
  const _is__FloatQueue_default = Symbol('_is__FloatQueue_default');
  typed_queue._FloatQueue$ = dart.generic(L => {
    class _FloatQueue extends typed_queue._TypedQueue$(core.double, L) {
      get [_defaultValue]() {
        return 0;
      }
    }
    (_FloatQueue.new = function(queue) {
      _FloatQueue.__proto__.new.call(this, queue);
      ;
    }).prototype = _FloatQueue.prototype;
    dart.addTypeTests(_FloatQueue);
    _FloatQueue.prototype[_is__FloatQueue_default] = true;
    dart.addTypeCaches(_FloatQueue);
    dart.setGetterSignature(_FloatQueue, () => ({
      __proto__: dart.getGetters(_FloatQueue.__proto__),
      [_defaultValue]: core.double
    }));
    dart.setLibraryUri(_FloatQueue, I[40]);
    return _FloatQueue;
  });
  typed_queue._FloatQueue = typed_queue._FloatQueue$();
  dart.addTypeTests(typed_queue._FloatQueue, _is__FloatQueue_default);
  var _add = dart.privateName(typed_queue, "_add");
  var _add$ = dart.privateName(serialization, "_add");
  var _head$0 = dart.privateName(queue_list, "_head");
  var _writeToList$ = dart.privateName(queue_list, "_writeToList");
  var _grow = dart.privateName(typed_queue, "_grow");
  var _grow$ = dart.privateName(queue_list, "_grow");
  var _preGrow = dart.privateName(typed_queue, "_preGrow");
  var _preGrow$ = dart.privateName(queue_list, "_preGrow");
  var _table$0 = dart.privateName(queue_list, "_table");
  var _tail$0 = dart.privateName(queue_list, "_tail");
  var _head_ = dart.privateName(typed_queue, "_head=");
  var _table_ = dart.privateName(typed_queue, "_table=");
  var _tail_ = dart.privateName(typed_queue, "_tail=");
  typed_queue.Uint8Queue = class Uint8Queue extends typed_queue._IntQueue$(typed_data.Uint8List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint8Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t15;
      t15 = new typed_queue.Uint8Queue.new(elements[$length]);
      return (() => {
        t15.addAll(elements);
        return t15;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint8Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeUint8List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint8Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[231] || CT.C231, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[232] || CT.C232)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[233] || CT.C233, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[234] || CT.C234, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[235] || CT.C235, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[236] || CT.C236)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[237] || CT.C237)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[238] || CT.C238, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[239] || CT.C239, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[240] || CT.C240, value)));
    }
  };
  (typed_queue.Uint8Queue.new = function(initialCapacity = null) {
    typed_queue.Uint8Queue.__proto__.new.call(this, _native_typed_data.NativeUint8List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint8Queue.prototype;
  dart.addTypeTests(typed_queue.Uint8Queue);
  dart.addTypeCaches(typed_queue.Uint8Queue);
  typed_queue.Uint8Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint8Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint8List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint8Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint8Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint8Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint8Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint8Queue, I[40]);
  typed_queue.Int8Queue = class Int8Queue extends typed_queue._IntQueue$(typed_data.Int8List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int8Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t15;
      t15 = new typed_queue.Int8Queue.new(elements[$length]);
      return (() => {
        t15.addAll(elements);
        return t15;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int8Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeInt8List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int8Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[231] || CT.C231, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[232] || CT.C232)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[233] || CT.C233, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[234] || CT.C234, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[235] || CT.C235, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[236] || CT.C236)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[237] || CT.C237)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[238] || CT.C238, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[239] || CT.C239, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[240] || CT.C240, value)));
    }
  };
  (typed_queue.Int8Queue.new = function(initialCapacity = null) {
    typed_queue.Int8Queue.__proto__.new.call(this, _native_typed_data.NativeInt8List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int8Queue.prototype;
  dart.addTypeTests(typed_queue.Int8Queue);
  dart.addTypeCaches(typed_queue.Int8Queue);
  typed_queue.Int8Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int8Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int8List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int8Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int8Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int8Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int8Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int8Queue, I[40]);
  typed_queue.Uint8ClampedQueue = class Uint8ClampedQueue extends typed_queue._IntQueue$(typed_data.Uint8ClampedList) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint8ClampedQueue.new(initialCapacity);
    }
    static fromList(elements) {
      let t15;
      t15 = new typed_queue.Uint8ClampedQueue.new(elements[$length]);
      return (() => {
        t15.addAll(elements);
        return t15;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint8ClampedQueue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeUint8ClampedList.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint8ClampedBuffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[231] || CT.C231, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[232] || CT.C232)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[233] || CT.C233, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[234] || CT.C234, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[235] || CT.C235, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[236] || CT.C236)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[237] || CT.C237)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[238] || CT.C238, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[239] || CT.C239, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[240] || CT.C240, value)));
    }
  };
  (typed_queue.Uint8ClampedQueue.new = function(initialCapacity = null) {
    typed_queue.Uint8ClampedQueue.__proto__.new.call(this, _native_typed_data.NativeUint8ClampedList.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint8ClampedQueue.prototype;
  dart.addTypeTests(typed_queue.Uint8ClampedQueue);
  dart.addTypeCaches(typed_queue.Uint8ClampedQueue);
  typed_queue.Uint8ClampedQueue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint8ClampedQueue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint8ClampedList, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint8ClampedBuffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint8ClampedQueue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint8ClampedQueue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint8ClampedQueue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint8ClampedQueue, I[40]);
  typed_queue.Uint16Queue = class Uint16Queue extends typed_queue._IntQueue$(typed_data.Uint16List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint16Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t15;
      t15 = new typed_queue.Uint16Queue.new(elements[$length]);
      return (() => {
        t15.addAll(elements);
        return t15;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint16Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeUint16List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint16Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[231] || CT.C231, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[232] || CT.C232)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[233] || CT.C233, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[234] || CT.C234, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[235] || CT.C235, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[236] || CT.C236)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[237] || CT.C237)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[238] || CT.C238, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[239] || CT.C239, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[240] || CT.C240, value)));
    }
  };
  (typed_queue.Uint16Queue.new = function(initialCapacity = null) {
    typed_queue.Uint16Queue.__proto__.new.call(this, _native_typed_data.NativeUint16List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint16Queue.prototype;
  dart.addTypeTests(typed_queue.Uint16Queue);
  dart.addTypeCaches(typed_queue.Uint16Queue);
  typed_queue.Uint16Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint16Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint16List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint16Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint16Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint16Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint16Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint16Queue, I[40]);
  typed_queue.Int16Queue = class Int16Queue extends typed_queue._IntQueue$(typed_data.Int16List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int16Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t15;
      t15 = new typed_queue.Int16Queue.new(elements[$length]);
      return (() => {
        t15.addAll(elements);
        return t15;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int16Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeInt16List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int16Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[231] || CT.C231, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[232] || CT.C232)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[233] || CT.C233, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[234] || CT.C234, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[235] || CT.C235, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[236] || CT.C236)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[237] || CT.C237)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[238] || CT.C238, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[239] || CT.C239, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[240] || CT.C240, value)));
    }
  };
  (typed_queue.Int16Queue.new = function(initialCapacity = null) {
    typed_queue.Int16Queue.__proto__.new.call(this, _native_typed_data.NativeInt16List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int16Queue.prototype;
  dart.addTypeTests(typed_queue.Int16Queue);
  dart.addTypeCaches(typed_queue.Int16Queue);
  typed_queue.Int16Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int16Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int16List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int16Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int16Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int16Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int16Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int16Queue, I[40]);
  typed_queue.Uint32Queue = class Uint32Queue extends typed_queue._IntQueue$(typed_data.Uint32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t15;
      t15 = new typed_queue.Uint32Queue.new(elements[$length]);
      return (() => {
        t15.addAll(elements);
        return t15;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint32Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeUint32List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint32Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[231] || CT.C231, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[232] || CT.C232)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[233] || CT.C233, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[234] || CT.C234, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[235] || CT.C235, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[236] || CT.C236)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[237] || CT.C237)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[238] || CT.C238, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[239] || CT.C239, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[240] || CT.C240, value)));
    }
  };
  (typed_queue.Uint32Queue.new = function(initialCapacity = null) {
    typed_queue.Uint32Queue.__proto__.new.call(this, _native_typed_data.NativeUint32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint32Queue.prototype;
  dart.addTypeTests(typed_queue.Uint32Queue);
  dart.addTypeCaches(typed_queue.Uint32Queue);
  typed_queue.Uint32Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint32Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint32List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint32Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint32Queue, I[40]);
  typed_queue.Int32Queue = class Int32Queue extends typed_queue._IntQueue$(typed_data.Int32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t15;
      t15 = new typed_queue.Int32Queue.new(elements[$length]);
      return (() => {
        t15.addAll(elements);
        return t15;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int32Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeInt32List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int32Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[231] || CT.C231, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[232] || CT.C232)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[233] || CT.C233, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[234] || CT.C234, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[235] || CT.C235, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[236] || CT.C236)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[237] || CT.C237)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[238] || CT.C238, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[239] || CT.C239, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[240] || CT.C240, value)));
    }
  };
  (typed_queue.Int32Queue.new = function(initialCapacity = null) {
    typed_queue.Int32Queue.__proto__.new.call(this, _native_typed_data.NativeInt32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int32Queue.prototype;
  dart.addTypeTests(typed_queue.Int32Queue);
  dart.addTypeCaches(typed_queue.Int32Queue);
  typed_queue.Int32Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int32Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int32List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int32Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int32Queue, I[40]);
  typed_queue.Uint64Queue = class Uint64Queue extends typed_queue._IntQueue$(typed_data.Uint64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t15;
      t15 = new typed_queue.Uint64Queue.new(elements[$length]);
      return (() => {
        t15.addAll(elements);
        return t15;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint64Queue.fromList(elements);
    }
    [_createList](size) {
      return typed_data.Uint64List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Uint64Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[231] || CT.C231, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[232] || CT.C232)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[233] || CT.C233, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[234] || CT.C234, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[235] || CT.C235, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[236] || CT.C236)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[237] || CT.C237)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[238] || CT.C238, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[239] || CT.C239, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[240] || CT.C240, value)));
    }
  };
  (typed_queue.Uint64Queue.new = function(initialCapacity = null) {
    typed_queue.Uint64Queue.__proto__.new.call(this, typed_data.Uint64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint64Queue.prototype;
  dart.addTypeTests(typed_queue.Uint64Queue);
  dart.addTypeCaches(typed_queue.Uint64Queue);
  typed_queue.Uint64Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint64Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Uint64List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Uint64Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint64Queue, I[40]);
  typed_queue.Int64Queue = class Int64Queue extends typed_queue._IntQueue$(typed_data.Int64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t15;
      t15 = new typed_queue.Int64Queue.new(elements[$length]);
      return (() => {
        t15.addAll(elements);
        return t15;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int64Queue.fromList(elements);
    }
    [_createList](size) {
      return typed_data.Int64List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int64Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[231] || CT.C231, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[232] || CT.C232)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[233] || CT.C233, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[234] || CT.C234, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[235] || CT.C235, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[236] || CT.C236)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[237] || CT.C237)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[238] || CT.C238, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[239] || CT.C239, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[240] || CT.C240, value)));
    }
  };
  (typed_queue.Int64Queue.new = function(initialCapacity = null) {
    typed_queue.Int64Queue.__proto__.new.call(this, typed_data.Int64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int64Queue.prototype;
  dart.addTypeTests(typed_queue.Int64Queue);
  dart.addTypeCaches(typed_queue.Int64Queue);
  typed_queue.Int64Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int64Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int64List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int64Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.int]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.int)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int64Queue, I[40]);
  typed_queue.Float32Queue = class Float32Queue extends typed_queue._FloatQueue$(typed_data.Float32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t15;
      t15 = new typed_queue.Float32Queue.new(elements[$length]);
      return (() => {
        t15.addAll(elements);
        return t15;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float32Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeFloat32List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Float32Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[231] || CT.C231, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[232] || CT.C232)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[233] || CT.C233, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[234] || CT.C234, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[235] || CT.C235, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[236] || CT.C236)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[237] || CT.C237)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[238] || CT.C238, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[239] || CT.C239, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[240] || CT.C240, value)));
    }
  };
  (typed_queue.Float32Queue.new = function(initialCapacity = null) {
    typed_queue.Float32Queue.__proto__.new.call(this, _native_typed_data.NativeFloat32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float32Queue.prototype;
  dart.addTypeTests(typed_queue.Float32Queue);
  dart.addTypeCaches(typed_queue.Float32Queue);
  typed_queue.Float32Queue[dart.implements] = () => [queue_list.QueueList$(core.double)];
  dart.setMethodSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float32Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Float32List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Float32Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.double]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.double))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.double)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float32Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.double)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float32Queue, I[40]);
  typed_queue.Float64Queue = class Float64Queue extends typed_queue._FloatQueue$(typed_data.Float64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t15;
      t15 = new typed_queue.Float64Queue.new(elements[$length]);
      return (() => {
        t15.addAll(elements);
        return t15;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float64Queue.fromList(elements);
    }
    [_createList](size) {
      return _native_typed_data.NativeFloat64List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Float64Buffer.new(size);
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[231] || CT.C231, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[232] || CT.C232)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[233] || CT.C233, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[234] || CT.C234, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[235] || CT.C235, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[236] || CT.C236)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[237] || CT.C237)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[238] || CT.C238, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[239] || CT.C239, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[240] || CT.C240, value)));
    }
  };
  (typed_queue.Float64Queue.new = function(initialCapacity = null) {
    typed_queue.Float64Queue.__proto__.new.call(this, _native_typed_data.NativeFloat64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float64Queue.prototype;
  dart.addTypeTests(typed_queue.Float64Queue);
  dart.addTypeCaches(typed_queue.Float64Queue);
  typed_queue.Float64Queue[dart.implements] = () => [queue_list.QueueList$(core.double)];
  dart.setMethodSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float64Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Float64List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Float64Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [core.double]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(core.double))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.double)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float64Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(core.double)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float64Queue, I[40]);
  typed_queue.Int32x4Queue = class Int32x4Queue extends typed_queue._TypedQueue$(typed_data.Int32x4, typed_data.Int32x4List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int32x4Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t15;
      t15 = new typed_queue.Int32x4Queue.new(elements[$length]);
      return (() => {
        t15.addAll(elements);
        return t15;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int32x4Queue.fromList(elements);
    }
    [_createList](size) {
      return new _native_typed_data.NativeInt32x4List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Int32x4Buffer.new(size);
    }
    get [_defaultValue]() {
      return typed_queue.Int32x4Queue._zero;
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[231] || CT.C231, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[232] || CT.C232)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[233] || CT.C233, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[234] || CT.C234, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[235] || CT.C235, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[236] || CT.C236)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[237] || CT.C237)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[238] || CT.C238, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[239] || CT.C239, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[240] || CT.C240, value)));
    }
  };
  (typed_queue.Int32x4Queue.new = function(initialCapacity = null) {
    typed_queue.Int32x4Queue.__proto__.new.call(this, new _native_typed_data.NativeInt32x4List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int32x4Queue.prototype;
  dart.addTypeTests(typed_queue.Int32x4Queue);
  dart.addTypeCaches(typed_queue.Int32x4Queue);
  typed_queue.Int32x4Queue[dart.implements] = () => [queue_list.QueueList$(typed_data.Int32x4)];
  dart.setMethodSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int32x4Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Int32x4List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Int32x4Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [typed_data.Int32x4]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(typed_data.Int32x4))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int32x4Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int32x4Queue.__proto__),
    [_defaultValue]: typed_data.Int32x4,
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(typed_data.Int32x4)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int32x4Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(typed_data.Int32x4)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int32x4Queue, I[40]);
  dart.setStaticFieldSignature(typed_queue.Int32x4Queue, () => ['_zero']);
  dart.defineLazy(typed_queue.Int32x4Queue, {
    /*typed_queue.Int32x4Queue._zero*/get _zero() {
      return new _native_typed_data.NativeInt32x4.new(0, 0, 0, 0);
    }
  }, false);
  typed_queue.Float32x4Queue = class Float32x4Queue extends typed_queue._TypedQueue$(typed_data.Float32x4, typed_data.Float32x4List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float32x4Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t15;
      t15 = new typed_queue.Float32x4Queue.new(elements[$length]);
      return (() => {
        t15.addAll(elements);
        return t15;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float32x4Queue.fromList(elements);
    }
    [_createList](size) {
      return new _native_typed_data.NativeFloat32x4List.new(size);
    }
    [_createBuffer](size) {
      return new typed_buffer.Float32x4Buffer.new(size);
    }
    get [_defaultValue]() {
      return new _native_typed_data.NativeFloat32x4.zero();
    }
    [_add$](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[231] || CT.C231, null, [element])));
    }
    get [_head$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[232] || CT.C232)));
    }
    [_writeToList$](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[233] || CT.C233, null, [target])));
    }
    [_grow$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[234] || CT.C234, null, [])));
    }
    [_preGrow$](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[235] || CT.C235, null, [newElementCount])));
    }
    get [_table$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[236] || CT.C236)));
    }
    get [_tail$0]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[237] || CT.C237)));
    }
    set [_head$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[238] || CT.C238, value)));
    }
    set [_table$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[239] || CT.C239, value)));
    }
    set [_tail$0](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[240] || CT.C240, value)));
    }
  };
  (typed_queue.Float32x4Queue.new = function(initialCapacity = null) {
    typed_queue.Float32x4Queue.__proto__.new.call(this, new _native_typed_data.NativeFloat32x4List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float32x4Queue.prototype;
  dart.addTypeTests(typed_queue.Float32x4Queue);
  dart.addTypeCaches(typed_queue.Float32x4Queue);
  typed_queue.Float32x4Queue[dart.implements] = () => [queue_list.QueueList$(typed_data.Float32x4)];
  dart.setMethodSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float32x4Queue.__proto__),
    [_createList]: dart.fnType(typed_data.Float32x4List, [core.int]),
    [_createBuffer]: dart.fnType(typed_buffer.Float32x4Buffer, [core.int]),
    [_add$]: dart.fnType(dart.void, [typed_data.Float32x4]),
    [_writeToList$]: dart.fnType(core.int, [core.List$(dart.nullable(typed_data.Float32x4))]),
    [_grow$]: dart.fnType(dart.void, []),
    [_preGrow$]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float32x4Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float32x4Queue.__proto__),
    [_defaultValue]: typed_data.Float32x4,
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(typed_data.Float32x4)),
    [_tail$0]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float32x4Queue.__proto__),
    [_head$0]: core.int,
    [_table$0]: core.List$(dart.nullable(typed_data.Float32x4)),
    [_tail$0]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float32x4Queue, I[40]);
  typed_queue._chooseRealInitialCapacity = function _chooseRealInitialCapacity(initialCapacity) {
    if (initialCapacity == null || dart.notNull(initialCapacity) < 16) {
      return 16;
    } else if (!typed_queue._isPowerOf2(initialCapacity)) {
      return typed_queue._nextPowerOf2(initialCapacity);
    } else {
      return initialCapacity;
    }
  };
  typed_queue._isPowerOf2 = function _isPowerOf2(number) {
    return (number & number - 1) === 0;
  };
  typed_queue._nextPowerOf2 = function _nextPowerOf2(number) {
    if (!(number > 0)) dart.assertFailed(null, I[39], 691, 10, "number > 0");
    number = (number << 1 >>> 0) - 1;
    for (;;) {
      let nextNumber = (number & number - 1) >>> 0;
      if (nextNumber === 0) return number;
      number = nextNumber;
    }
  };
  dart.defineLazy(typed_queue, {
    /*typed_queue._defaultInitialCapacity*/get _defaultInitialCapacity() {
      return 16;
    }
  }, false);
  var _buffer = dart.privateName(typed_buffer, "_buffer");
  var _length = dart.privateName(typed_buffer, "_length");
  var _typedBuffer = dart.privateName(typed_buffer, "_typedBuffer");
  var _defaultValue$ = dart.privateName(typed_buffer, "_defaultValue");
  var _createBuffer$ = dart.privateName(typed_buffer, "_createBuffer");
  var _createBiggerBuffer = dart.privateName(typed_buffer, "_createBiggerBuffer");
  var _grow$0 = dart.privateName(typed_buffer, "_grow");
  var _add$0 = dart.privateName(typed_buffer, "_add");
  var _addAll = dart.privateName(typed_buffer, "_addAll");
  var _insertKnownLength = dart.privateName(typed_buffer, "_insertKnownLength");
  var _ensureCapacity = dart.privateName(typed_buffer, "_ensureCapacity");
  var _setRange = dart.privateName(typed_buffer, "_setRange");
  const _is_TypedDataBuffer_default = Symbol('_is_TypedDataBuffer_default');
  typed_buffer.TypedDataBuffer$ = dart.generic(E => {
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(core.Iterable$(E)))();
    var __t$TypedDataBufferOfE = () => (__t$TypedDataBufferOfE = dart.constFn(typed_buffer.TypedDataBuffer$(E)))();
    class TypedDataBuffer extends collection.ListBase$(E) {
      get [_typedBuffer]() {
        return typed_data.TypedData.as(this[_buffer]);
      }
      get length() {
        return this[_length];
      }
      _get(index) {
        if (index >= this.length) dart.throw(new core.IndexError.new(index, this));
        return this[_buffer][$_get](index);
      }
      _set(index, value$) {
        let value = value$;
        E.as(value);
        if (index >= this.length) dart.throw(new core.IndexError.new(index, this));
        this[_buffer][$_set](index, value);
        return value$;
      }
      set length(newLength) {
        if (newLength < this[_length]) {
          let defaultValue = this[_defaultValue$];
          for (let i = newLength; i < this[_length]; i = i + 1) {
            this[_buffer][$_set](i, defaultValue);
          }
        } else if (newLength > this[_buffer][$length]) {
          let newBuffer = null;
          if (this[_buffer][$isEmpty]) {
            newBuffer = this[_createBuffer$](newLength);
          } else {
            newBuffer = this[_createBiggerBuffer](newLength);
          }
          newBuffer[$setRange](0, this[_length], this[_buffer]);
          this[_buffer] = newBuffer;
        }
        this[_length] = newLength;
      }
      [_add$0](value) {
        let t15;
        if (this[_length] === this[_buffer][$length]) this[_grow$0](this[_length]);
        this[_buffer][$_set]((t15 = this[_length], this[_length] = t15 + 1, t15), value);
      }
      add(element) {
        E.as(element);
        this[_add$0](element);
      }
      addAll(values, start = 0, end = null) {
        __t$IterableOfE().as(values);
        core.RangeError.checkNotNegative(start, "start");
        if (end != null && start > dart.notNull(end)) {
          dart.throw(new core.RangeError.range(end, start, null, "end"));
        }
        this[_addAll](values, start, end);
      }
      insertAll(index, values, start = 0, end = null) {
        let t15;
        __t$IterableOfE().as(values);
        core.RangeError.checkValidIndex(index, this, "index", this[_length] + 1);
        core.RangeError.checkNotNegative(start, "start");
        if (end != null) {
          if (start > dart.notNull(end)) {
            dart.throw(new core.RangeError.range(end, start, null, "end"));
          }
          if (start === end) return;
        }
        if (index === this[_length]) {
          this[_addAll](values, start, end);
          return;
        }
        if (end == null && core.List.is(values)) {
          end = values[$length];
        }
        if (end != null) {
          this[_insertKnownLength](index, values, start, end);
          return;
        }
        let writeIndex = this[_length];
        let skipCount = start;
        for (let value of values) {
          if (skipCount > 0) {
            skipCount = skipCount - 1;
            continue;
          }
          if (writeIndex === this[_buffer][$length]) {
            this[_grow$0](writeIndex);
          }
          this[_buffer][$_set]((t15 = writeIndex, writeIndex = t15 + 1, t15), value);
        }
        if (skipCount > 0) {
          dart.throw(new core.StateError.new("Too few elements"));
        }
        if (end != null && writeIndex < dart.notNull(end)) {
          dart.throw(new core.RangeError.range(end, start, writeIndex, "end"));
        }
        typed_buffer.TypedDataBuffer._reverse(this[_buffer], index, this[_length]);
        typed_buffer.TypedDataBuffer._reverse(this[_buffer], this[_length], writeIndex);
        typed_buffer.TypedDataBuffer._reverse(this[_buffer], index, writeIndex);
        this[_length] = writeIndex;
        return;
      }
      static _reverse(buffer, start, end) {
        end = end - 1;
        while (start < end) {
          let first = buffer[$_get](start);
          let last = buffer[$_get](end);
          buffer[$_set](end, first);
          buffer[$_set](start, last);
          start = start + 1;
          end = end - 1;
        }
      }
      [_addAll](values, start = 0, end = null) {
        if (core.List.is(values)) end == null ? end = values[$length] : null;
        if (end != null) {
          this[_insertKnownLength](this[_length], values, start, end);
          return;
        }
        let i = 0;
        for (let value of values) {
          if (i >= start) this.add(value);
          i = i + 1;
        }
        if (i < start) dart.throw(new core.StateError.new("Too few elements"));
      }
      [_insertKnownLength](index, values, start, end) {
        if (core.List.is(values)) {
          if (start > values[$length] || end > values[$length]) {
            dart.throw(new core.StateError.new("Too few elements"));
          }
        }
        let valuesLength = end - start;
        let newLength = this[_length] + valuesLength;
        this[_ensureCapacity](newLength);
        this[_buffer][$setRange](index + valuesLength, this[_length] + valuesLength, this[_buffer], index);
        this[_buffer][$setRange](index, index + valuesLength, values, start);
        this[_length] = newLength;
      }
      insert(index, element) {
        E.as(element);
        if (index < 0 || index > this[_length]) {
          dart.throw(new core.RangeError.range(index, 0, this[_length]));
        }
        if (this[_length] < this[_buffer][$length]) {
          this[_buffer][$setRange](index + 1, this[_length] + 1, this[_buffer], index);
          this[_buffer][$_set](index, element);
          this[_length] = this[_length] + 1;
          return;
        }
        let newBuffer = this[_createBiggerBuffer](null);
        newBuffer[$setRange](0, index, this[_buffer]);
        newBuffer[$setRange](index + 1, this[_length] + 1, this[_buffer], index);
        newBuffer[$_set](index, element);
        this[_length] = this[_length] + 1;
        this[_buffer] = newBuffer;
      }
      [_ensureCapacity](requiredCapacity) {
        if (requiredCapacity <= this[_buffer][$length]) return;
        let newBuffer = this[_createBiggerBuffer](requiredCapacity);
        newBuffer[$setRange](0, this[_length], this[_buffer]);
        this[_buffer] = newBuffer;
      }
      [_createBiggerBuffer](requiredCapacity) {
        let newLength = this[_buffer][$length] * 2;
        if (requiredCapacity != null && dart.notNull(newLength) < dart.notNull(requiredCapacity)) {
          newLength = requiredCapacity;
        } else if (dart.notNull(newLength) < 8) {
          newLength = 8;
        }
        return this[_createBuffer$](newLength);
      }
      [_grow$0](length) {
        let t15;
        this[_buffer] = (t15 = this[_createBiggerBuffer](null), (() => {
          t15[$setRange](0, length, this[_buffer]);
          return t15;
        })());
      }
      setRange(start, end, iterable, skipCount = 0) {
        __t$IterableOfE().as(iterable);
        if (end > this[_length]) dart.throw(new core.RangeError.range(end, 0, this[_length]));
        this[_setRange](start, end, iterable, skipCount);
      }
      [_setRange](start, end, source, skipCount) {
        if (__t$TypedDataBufferOfE().is(source)) {
          this[_buffer][$setRange](start, end, source[_buffer], skipCount);
        } else {
          this[_buffer][$setRange](start, end, source, skipCount);
        }
      }
      get elementSizeInBytes() {
        return this[_typedBuffer][$elementSizeInBytes];
      }
      get lengthInBytes() {
        return this[_length] * this[_typedBuffer][$elementSizeInBytes];
      }
      get offsetInBytes() {
        return this[_typedBuffer][$offsetInBytes];
      }
      get buffer() {
        return this[_typedBuffer][$buffer];
      }
    }
    (TypedDataBuffer.new = function(buffer) {
      this[_buffer] = buffer;
      this[_length] = buffer[$length];
      ;
    }).prototype = TypedDataBuffer.prototype;
    dart.addTypeTests(TypedDataBuffer);
    TypedDataBuffer.prototype[_is_TypedDataBuffer_default] = true;
    dart.addTypeCaches(TypedDataBuffer);
    dart.setMethodSignature(TypedDataBuffer, () => ({
      __proto__: dart.getMethods(TypedDataBuffer.__proto__),
      _get: dart.fnType(E, [core.int]),
      [$_get]: dart.fnType(E, [core.int]),
      _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [_add$0]: dart.fnType(dart.void, [E]),
      addAll: dart.fnType(dart.void, [dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [$addAll]: dart.fnType(dart.void, [dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      insertAll: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [$insertAll]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [_addAll]: dart.fnType(dart.void, [core.Iterable$(E)], [core.int, dart.nullable(core.int)]),
      [_insertKnownLength]: dart.fnType(dart.void, [core.int, core.Iterable$(E), core.int, core.int]),
      [_ensureCapacity]: dart.fnType(dart.void, [core.int]),
      [_createBiggerBuffer]: dart.fnType(core.List$(E), [dart.nullable(core.int)]),
      [_grow$0]: dart.fnType(dart.void, [core.int]),
      [_setRange]: dart.fnType(dart.void, [core.int, core.int, core.Iterable$(E), core.int])
    }));
    dart.setStaticMethodSignature(TypedDataBuffer, () => ['_reverse']);
    dart.setGetterSignature(TypedDataBuffer, () => ({
      __proto__: dart.getGetters(TypedDataBuffer.__proto__),
      [_typedBuffer]: typed_data.TypedData,
      length: core.int,
      [$length]: core.int,
      elementSizeInBytes: core.int,
      lengthInBytes: core.int,
      offsetInBytes: core.int,
      buffer: typed_data.ByteBuffer
    }));
    dart.setSetterSignature(TypedDataBuffer, () => ({
      __proto__: dart.getSetters(TypedDataBuffer.__proto__),
      length: core.int,
      [$length]: core.int
    }));
    dart.setLibraryUri(TypedDataBuffer, I[41]);
    dart.setFieldSignature(TypedDataBuffer, () => ({
      __proto__: dart.getFields(TypedDataBuffer.__proto__),
      [_buffer]: dart.fieldType(core.List$(E)),
      [_length]: dart.fieldType(core.int)
    }));
    dart.setStaticFieldSignature(TypedDataBuffer, () => ['_initialLength']);
    dart.defineExtensionMethods(TypedDataBuffer, [
      '_get',
      '_set',
      'add',
      'addAll',
      'insertAll',
      'insert',
      'setRange'
    ]);
    dart.defineExtensionAccessors(TypedDataBuffer, ['length']);
    return TypedDataBuffer;
  });
  typed_buffer.TypedDataBuffer = typed_buffer.TypedDataBuffer$();
  dart.defineLazy(typed_buffer.TypedDataBuffer, {
    /*typed_buffer.TypedDataBuffer._initialLength*/get _initialLength() {
      return 8;
    }
  }, false);
  dart.addTypeTests(typed_buffer.TypedDataBuffer, _is_TypedDataBuffer_default);
  typed_buffer._IntBuffer = class _IntBuffer extends typed_buffer.TypedDataBuffer$(core.int) {
    get [_defaultValue$]() {
      return 0;
    }
  };
  (typed_buffer._IntBuffer.new = function(buffer) {
    typed_buffer._IntBuffer.__proto__.new.call(this, buffer);
    ;
  }).prototype = typed_buffer._IntBuffer.prototype;
  dart.addTypeTests(typed_buffer._IntBuffer);
  dart.addTypeCaches(typed_buffer._IntBuffer);
  dart.setGetterSignature(typed_buffer._IntBuffer, () => ({
    __proto__: dart.getGetters(typed_buffer._IntBuffer.__proto__),
    [_defaultValue$]: core.int
  }));
  dart.setLibraryUri(typed_buffer._IntBuffer, I[41]);
  typed_buffer._FloatBuffer = class _FloatBuffer extends typed_buffer.TypedDataBuffer$(core.double) {
    get [_defaultValue$]() {
      return 0;
    }
  };
  (typed_buffer._FloatBuffer.new = function(buffer) {
    typed_buffer._FloatBuffer.__proto__.new.call(this, buffer);
    ;
  }).prototype = typed_buffer._FloatBuffer.prototype;
  dart.addTypeTests(typed_buffer._FloatBuffer);
  dart.addTypeCaches(typed_buffer._FloatBuffer);
  dart.setGetterSignature(typed_buffer._FloatBuffer, () => ({
    __proto__: dart.getGetters(typed_buffer._FloatBuffer.__proto__),
    [_defaultValue$]: core.double
  }));
  dart.setLibraryUri(typed_buffer._FloatBuffer, I[41]);
  typed_buffer.Uint8Buffer = class Uint8Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint8Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeUint8List.new(size);
    }
  };
  (typed_buffer.Uint8Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint8Buffer.__proto__.new.call(this, _native_typed_data.NativeUint8List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint8Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint8Buffer);
  dart.addTypeCaches(typed_buffer.Uint8Buffer);
  dart.setMethodSignature(typed_buffer.Uint8Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint8Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint8List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint8Buffer, I[41]);
  typed_buffer.Int8Buffer = class Int8Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int8Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeInt8List.new(size);
    }
  };
  (typed_buffer.Int8Buffer.new = function(initialLength = 0) {
    typed_buffer.Int8Buffer.__proto__.new.call(this, _native_typed_data.NativeInt8List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int8Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int8Buffer);
  dart.addTypeCaches(typed_buffer.Int8Buffer);
  dart.setMethodSignature(typed_buffer.Int8Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int8Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int8List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int8Buffer, I[41]);
  typed_buffer.Uint8ClampedBuffer = class Uint8ClampedBuffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint8ClampedBuffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeUint8ClampedList.new(size);
    }
  };
  (typed_buffer.Uint8ClampedBuffer.new = function(initialLength = 0) {
    typed_buffer.Uint8ClampedBuffer.__proto__.new.call(this, _native_typed_data.NativeUint8ClampedList.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint8ClampedBuffer.prototype;
  dart.addTypeTests(typed_buffer.Uint8ClampedBuffer);
  dart.addTypeCaches(typed_buffer.Uint8ClampedBuffer);
  dart.setMethodSignature(typed_buffer.Uint8ClampedBuffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint8ClampedBuffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint8ClampedList, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint8ClampedBuffer, I[41]);
  typed_buffer.Uint16Buffer = class Uint16Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint16Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeUint16List.new(size);
    }
  };
  (typed_buffer.Uint16Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint16Buffer.__proto__.new.call(this, _native_typed_data.NativeUint16List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint16Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint16Buffer);
  dart.addTypeCaches(typed_buffer.Uint16Buffer);
  dart.setMethodSignature(typed_buffer.Uint16Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint16Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint16List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint16Buffer, I[41]);
  typed_buffer.Int16Buffer = class Int16Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int16Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeInt16List.new(size);
    }
  };
  (typed_buffer.Int16Buffer.new = function(initialLength = 0) {
    typed_buffer.Int16Buffer.__proto__.new.call(this, _native_typed_data.NativeInt16List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int16Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int16Buffer);
  dart.addTypeCaches(typed_buffer.Int16Buffer);
  dart.setMethodSignature(typed_buffer.Int16Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int16Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int16List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int16Buffer, I[41]);
  typed_buffer.Uint32Buffer = class Uint32Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint32Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeUint32List.new(size);
    }
  };
  (typed_buffer.Uint32Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint32Buffer.__proto__.new.call(this, _native_typed_data.NativeUint32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint32Buffer);
  dart.addTypeCaches(typed_buffer.Uint32Buffer);
  dart.setMethodSignature(typed_buffer.Uint32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint32Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint32Buffer, I[41]);
  typed_buffer.Int32Buffer = class Int32Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int32Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeInt32List.new(size);
    }
  };
  (typed_buffer.Int32Buffer.new = function(initialLength = 0) {
    typed_buffer.Int32Buffer.__proto__.new.call(this, _native_typed_data.NativeInt32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int32Buffer);
  dart.addTypeCaches(typed_buffer.Int32Buffer);
  dart.setMethodSignature(typed_buffer.Int32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int32Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int32Buffer, I[41]);
  typed_buffer.Uint64Buffer = class Uint64Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint64Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return typed_data.Uint64List.new(size);
    }
  };
  (typed_buffer.Uint64Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint64Buffer.__proto__.new.call(this, typed_data.Uint64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint64Buffer);
  dart.addTypeCaches(typed_buffer.Uint64Buffer);
  dart.setMethodSignature(typed_buffer.Uint64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint64Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Uint64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint64Buffer, I[41]);
  typed_buffer.Int64Buffer = class Int64Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int64Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return typed_data.Int64List.new(size);
    }
  };
  (typed_buffer.Int64Buffer.new = function(initialLength = 0) {
    typed_buffer.Int64Buffer.__proto__.new.call(this, typed_data.Int64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int64Buffer);
  dart.addTypeCaches(typed_buffer.Int64Buffer);
  dart.setMethodSignature(typed_buffer.Int64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int64Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int64Buffer, I[41]);
  typed_buffer.Float32Buffer = class Float32Buffer extends typed_buffer._FloatBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float32Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeFloat32List.new(size);
    }
  };
  (typed_buffer.Float32Buffer.new = function(initialLength = 0) {
    typed_buffer.Float32Buffer.__proto__.new.call(this, _native_typed_data.NativeFloat32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float32Buffer);
  dart.addTypeCaches(typed_buffer.Float32Buffer);
  dart.setMethodSignature(typed_buffer.Float32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float32Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Float32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Float32Buffer, I[41]);
  typed_buffer.Float64Buffer = class Float64Buffer extends typed_buffer._FloatBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float64Buffer.new(initialLength);
    }
    [_createBuffer$](size) {
      return _native_typed_data.NativeFloat64List.new(size);
    }
  };
  (typed_buffer.Float64Buffer.new = function(initialLength = 0) {
    typed_buffer.Float64Buffer.__proto__.new.call(this, _native_typed_data.NativeFloat64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float64Buffer);
  dart.addTypeCaches(typed_buffer.Float64Buffer);
  dart.setMethodSignature(typed_buffer.Float64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float64Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Float64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Float64Buffer, I[41]);
  typed_buffer.Int32x4Buffer = class Int32x4Buffer extends typed_buffer.TypedDataBuffer$(typed_data.Int32x4) {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int32x4Buffer.new(initialLength);
    }
    get [_defaultValue$]() {
      return typed_buffer.Int32x4Buffer._zero;
    }
    [_createBuffer$](size) {
      return new _native_typed_data.NativeInt32x4List.new(size);
    }
  };
  (typed_buffer.Int32x4Buffer.new = function(initialLength = 0) {
    typed_buffer.Int32x4Buffer.__proto__.new.call(this, new _native_typed_data.NativeInt32x4List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int32x4Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int32x4Buffer);
  dart.addTypeCaches(typed_buffer.Int32x4Buffer);
  dart.setMethodSignature(typed_buffer.Int32x4Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int32x4Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Int32x4List, [core.int])
  }));
  dart.setGetterSignature(typed_buffer.Int32x4Buffer, () => ({
    __proto__: dart.getGetters(typed_buffer.Int32x4Buffer.__proto__),
    [_defaultValue$]: typed_data.Int32x4
  }));
  dart.setLibraryUri(typed_buffer.Int32x4Buffer, I[41]);
  dart.setStaticFieldSignature(typed_buffer.Int32x4Buffer, () => ['_zero']);
  dart.defineLazy(typed_buffer.Int32x4Buffer, {
    /*typed_buffer.Int32x4Buffer._zero*/get _zero() {
      return new _native_typed_data.NativeInt32x4.new(0, 0, 0, 0);
    }
  }, false);
  typed_buffer.Float32x4Buffer = class Float32x4Buffer extends typed_buffer.TypedDataBuffer$(typed_data.Float32x4) {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float32x4Buffer.new(initialLength);
    }
    get [_defaultValue$]() {
      return new _native_typed_data.NativeFloat32x4.zero();
    }
    [_createBuffer$](size) {
      return new _native_typed_data.NativeFloat32x4List.new(size);
    }
  };
  (typed_buffer.Float32x4Buffer.new = function(initialLength = 0) {
    typed_buffer.Float32x4Buffer.__proto__.new.call(this, new _native_typed_data.NativeFloat32x4List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float32x4Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float32x4Buffer);
  dart.addTypeCaches(typed_buffer.Float32x4Buffer);
  dart.setMethodSignature(typed_buffer.Float32x4Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float32x4Buffer.__proto__),
    [_createBuffer$]: dart.fnType(typed_data.Float32x4List, [core.int])
  }));
  dart.setGetterSignature(typed_buffer.Float32x4Buffer, () => ({
    __proto__: dart.getGetters(typed_buffer.Float32x4Buffer.__proto__),
    [_defaultValue$]: typed_data.Float32x4
  }));
  dart.setLibraryUri(typed_buffer.Float32x4Buffer, I[41]);
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:flutter_app/features/presentation/pages/splash.dart": splash,
    "package:flutter_app/features/presentation/pages/login.dart": login,
    "package:flutter_app/features/domain/models/userModel.dart": userModel,
    "package:flutter_app/features/data/repositories/user_repository.dart": user_repository,
    "package:flutter_app/features/presentation/pages/underConstructionScreen.dart": underConstructionScreen,
    "package:flutter_app/shared/components/bottom_navigator.dart": bottom_navigator,
    "package:http/http.dart": http,
    "package:flutter_app/features/presentation/pages/home.dart": home,
    "package:flutter_app/features/presentation/pages/bookLoan.dart": bookLoan,
    "package:flutter_app/features/presentation/pages/%20bookListScreen.dart": $32bookListScreen,
    "package:flutter_app/features/presentation/pages/pendency.dart": pendency,
    "package:flutter_app/features/presentation/pages/without_pendency.dart": without_pendency,
    "package:flutter_app/features/presentation/pages/book_collection.dart": book_collection,
    "package:http/src/client.dart": client$,
    "package:http/src/exception.dart": exception,
    "package:http/src/request.dart": request$,
    "package:http/src/response.dart": response$,
    "package:http/src/streamed_request.dart": streamed_request,
    "package:http/src/base_client.dart": base_client,
    "package:http/src/base_request.dart": base_request,
    "package:http/src/base_response.dart": base_response,
    "package:http/src/byte_stream.dart": byte_stream,
    "package:http/src/multipart_file.dart": multipart_file,
    "package:http/src/multipart_request.dart": multipart_request,
    "package:http/src/streamed_response.dart": streamed_response,
    "package:flutter_app/features/presentation/pages/user.dart": user,
    "package:flutter_app/features/domain/models/bookmodel.dart": bookmodel,
    "package:flutter_app/features/data/repositories/book_repository.dart": book_repository,
    "package:flutter_app/features/domain/models/loanModel.dart": loanModel,
    "package:flutter_app/features/data/repositories/loan_repository.dart": loan_repository,
    "package:flutter_app/features/presentation/pages/book_profile.dart": book_profile,
    "package:http/src/browser_client.dart": browser_client,
    "package:http_parser/http_parser.dart": http_parser,
    "package:http/src/utils.dart": utils,
    "package:http/src/multipart_file_stub.dart": multipart_file_stub,
    "package:http/src/boundary_characters.dart": boundary_characters,
    "package:flutter_app/features/domain/models/livromodelapi.dart": livromodelapi,
    "package:http_parser/src/authentication_challenge.dart": authentication_challenge,
    "package:http_parser/src/case_insensitive_map.dart": case_insensitive_map,
    "package:http_parser/src/chunked_coding.dart": chunked_coding,
    "package:http_parser/src/http_date.dart": http_date,
    "package:http_parser/src/media_type.dart": media_type,
    "package:http_parser/src/scan.dart": scan,
    "package:http_parser/src/utils.dart": utils$,
    "package:http_parser/src/chunked_coding/decoder.dart": decoder,
    "package:http_parser/src/chunked_coding/encoder.dart": encoder,
    "package:typed_data/typed_data.dart": typed_data$,
    "package:http_parser/src/chunked_coding/charcodes.dart": charcodes,
    "package:typed_data/src/typed_queue.dart": typed_queue,
    "package:typed_data/typed_buffers.dart": typed_buffers,
    "package:typed_data/src/typed_buffer.dart": typed_buffer
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/features/presentation/pages/splash.dart","/zapp/project/lib/features/presentation/pages/login.dart","/zapp/project/lib/features/domain/models/userModel.dart","/zapp/project/lib/features/data/repositories/user_repository.dart","/zapp/project/lib/features/presentation/pages/underConstructionScreen.dart","/zapp/project/lib/shared/components/bottom_navigator.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/http.dart","/zapp/project/lib/features/presentation/pages/home.dart","/zapp/project/lib/features/presentation/pages/bookLoan.dart","/zapp/project/lib/features/presentation/pages/%20bookListScreen.dart","/zapp/project/lib/features/presentation/pages/pendency.dart","/zapp/project/lib/features/presentation/pages/without_pendency.dart","/zapp/project/lib/features/presentation/pages/book_collection.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/client.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/base_request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/base_response.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/response.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/streamed_request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/base_client.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/byte_stream.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/multipart_file.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/multipart_request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/streamed_response.dart","/zapp/project/lib/features/presentation/pages/user.dart","/zapp/project/lib/features/domain/models/bookmodel.dart","/zapp/project/lib/features/data/repositories/book_repository.dart","/zapp/project/lib/features/domain/models/loanModel.dart","/zapp/project/lib/features/data/repositories/loan_repository.dart","/zapp/project/lib/features/presentation/pages/book_profile.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/browser_client.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/multipart_file_stub.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/boundary_characters.dart","/zapp/project/lib/features/domain/models/livromodelapi.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/authentication_challenge.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/case_insensitive_map.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/http_date.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/media_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/scan.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/decoder.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/encoder.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/charcodes.dart","/zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_queue.dart","/zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_buffer.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    features__presentation__pages__splash: splash,
    features__presentation__pages__login: login,
    features__domain__models__userModel: userModel,
    features__data__repositories__user_repository: user_repository,
    features__presentation__pages__underConstructionScreen: underConstructionScreen,
    shared__components__bottom_navigator: bottom_navigator,
    http: http,
    features__presentation__pages__home: home,
    features__presentation__pages__bookLoan: bookLoan,
    features__presentation__pages__$32bookListScreen: $32bookListScreen,
    features__presentation__pages__pendency: pendency,
    features__presentation__pages__without_pendency: without_pendency,
    features__presentation__pages__book_collection: book_collection,
    src__client: client$,
    src__exception: exception,
    src__request: request$,
    src__response: response$,
    src__streamed_request: streamed_request,
    src__base_client: base_client,
    src__base_request: base_request,
    src__base_response: base_response,
    src__byte_stream: byte_stream,
    src__multipart_file: multipart_file,
    src__multipart_request: multipart_request,
    src__streamed_response: streamed_response,
    features__presentation__pages__user: user,
    features__domain__models__bookmodel: bookmodel,
    features__data__repositories__book_repository: book_repository,
    features__domain__models__loanModel: loanModel,
    features__data__repositories__loan_repository: loan_repository,
    features__presentation__pages__book_profile: book_profile,
    src__browser_client: browser_client,
    http_parser: http_parser,
    src__utils: utils,
    src__multipart_file_stub: multipart_file_stub,
    src__boundary_characters: boundary_characters,
    features__domain__models__livromodelapi: livromodelapi,
    src__authentication_challenge: authentication_challenge,
    src__case_insensitive_map: case_insensitive_map,
    src__chunked_coding: chunked_coding,
    src__http_date: http_date,
    src__media_type: media_type,
    src__scan: scan,
    src__utils: utils$,
    src__chunked_coding__decoder: decoder,
    src__chunked_coding__encoder: encoder,
    typed_data: typed_data$,
    src__chunked_coding__charcodes: charcodes,
    src__typed_queue: typed_queue,
    typed_buffers: typed_buffers,
    src__typed_buffer: typed_buffer
  };
}));

//# sourceMappingURL=main.js.map
